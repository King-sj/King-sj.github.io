const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":129,\"nextId\":129,\"documentIds\":{\"0\":\"1\",\"1\":\"1#heading-2\",\"2\":\"1#heading-3\",\"3\":\"1@0\",\"4\":\"1@1\",\"5\":\"2\",\"6\":\"2#heading-2\",\"7\":\"2#heading-3\",\"8\":\"2@0\",\"9\":\"2@1\",\"10\":\"3\",\"11\":\"4\",\"12\":\"4#heading-2\",\"13\":\"4#heading-3\",\"14\":\"4@0\",\"15\":\"4@1\",\"16\":\"5\",\"17\":\"5#heading-2\",\"18\":\"5#heading-3\",\"19\":\"5@0\",\"20\":\"5@1\",\"21\":\"6\",\"22\":\"6@0\",\"23\":\"7\",\"24\":\"8\",\"25\":\"8@0\",\"26\":\"8@1\",\"27\":\"9\",\"28\":\"9@0\",\"29\":\"10\",\"30\":\"11\",\"31\":\"11#结论与建议\",\"32\":\"11@0\",\"33\":\"11@1\",\"34\":\"12\",\"35\":\"12@0\",\"36\":\"12@1\",\"37\":\"13\",\"38\":\"14\",\"39\":\"15\",\"40\":\"15#背景介绍\",\"41\":\"15#过去的做法\",\"42\":\"15#第一种-直接取模\",\"43\":\"15#第二种-函数取模\",\"44\":\"15#泛型编程\",\"45\":\"15@0\",\"46\":\"15@1\",\"47\":\"16\",\"48\":\"16#参考项目\",\"49\":\"17\",\"50\":\"17#缺点\",\"51\":\"17#缺点-1\",\"52\":\"18\",\"53\":\"18#some-solutions-to-questions-about-qt\",\"54\":\"18#the-qt-5-isn-t-in-qt-maintenance-tools\",\"55\":\"19\",\"56\":\"22\",\"57\":\"23\",\"58\":\"24\",\"59\":\"25\",\"60\":\"25#参考资料\",\"61\":\"26\",\"62\":\"26#自然数的定义\",\"63\":\"26#自然数的加法运算\",\"64\":\"26#加法的定义\",\"65\":\"26#加法结果的存在性\",\"66\":\"26#加法结果的唯一性\",\"67\":\"26#加法的性质\",\"68\":\"26#加法交换律\",\"69\":\"26#加法结合律\",\"70\":\"26#加法消去律\",\"71\":\"26#自然数的序\",\"72\":\"26#序的定义\",\"73\":\"26#正自然数\",\"74\":\"26#正自然数的性质\",\"75\":\"26#序的反对称性\",\"76\":\"26#序的传递性\",\"77\":\"26#序的完全性\",\"78\":\"26#加法保序性\",\"79\":\"26#自然数的乘法运算\",\"80\":\"26#乘法的定义\",\"81\":\"26#乘法结果的存在性\",\"82\":\"26#乘法结果的唯一性\",\"83\":\"26#乘法的性质\",\"84\":\"26#乘法交换律\",\"85\":\"26#乘法分配律\",\"86\":\"26#乘法结合律\",\"87\":\"26#乘法消去律\",\"88\":\"26#peano-公理的合理性\",\"89\":\"26#乘法保序性\",\"90\":\"26#乘法消去保序性\",\"91\":\"26#用图论阐述-peano-系统\",\"92\":\"26#peano-公理-i\",\"93\":\"26#peano-公理-ii\",\"94\":\"26#peano-公理-iii\",\"95\":\"26#peano-公理-iv\",\"96\":\"26#peano-公理-v\",\"97\":\"26@0\",\"98\":\"26@1\",\"99\":\"27\",\"100\":\"28\",\"101\":\"29\",\"102\":\"29@0\",\"103\":\"29@1\",\"104\":\"30\",\"105\":\"31\",\"106\":\"32\",\"107\":\"33\",\"108\":\"34\",\"109\":\"35\",\"110\":\"35@0\",\"111\":\"35@1\",\"112\":\"36\",\"113\":\"37\",\"114\":\"37@0\",\"115\":\"37@1\",\"116\":\"38\",\"117\":\"38#为什么要学编译原理\",\"118\":\"38#理论很复杂-实现也很复杂\",\"119\":\"38#项目的初衷\",\"120\":\"38#做好心理准备\",\"121\":\"38#参考资料\",\"122\":\"39\",\"123\":\"40\",\"124\":\"41\",\"125\":\"42\",\"126\":\"43\",\"127\":\"44\",\"128\":\"45\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[2,5],\"2\":[2,5],\"3\":[null,null,1],\"4\":[null,null,1],\"5\":[2],\"6\":[2,5],\"7\":[2,5],\"8\":[null,null,1],\"9\":[null,null,1],\"10\":[1,1],\"11\":[2],\"12\":[2,5],\"13\":[2,5],\"14\":[null,null,1],\"15\":[null,null,2],\"16\":[5,7],\"17\":[2,5],\"18\":[2,5],\"19\":[null,null,1],\"20\":[null,null,2],\"21\":[1],\"22\":[null,null,1],\"23\":[1],\"24\":[1,7],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[1],\"28\":[null,null,1],\"29\":[1],\"30\":[4,71],\"31\":[1,19],\"32\":[null,null,1],\"33\":[null,null,1],\"34\":[1,3],\"35\":[null,null,1],\"36\":[null,null,2],\"37\":[2,12],\"38\":[4,1],\"39\":[4,6],\"40\":[1,14],\"41\":[1,5],\"42\":[2,21],\"43\":[2,32],\"44\":[1,51],\"45\":[null,null,1],\"46\":[null,null,1],\"47\":[2],\"48\":[1,3],\"49\":[1,1],\"50\":[1,8],\"51\":[1,29],\"52\":[1],\"53\":[6],\"54\":[9,21],\"55\":[2,21],\"56\":[2,13],\"57\":[4,10],\"58\":[2,2],\"59\":[1],\"60\":[1,10],\"61\":[4,9],\"62\":[1,23],\"63\":[1,2],\"64\":[1,12],\"65\":[1,35],\"66\":[1,38],\"67\":[1,5],\"68\":[1,27],\"69\":[1,17],\"70\":[1,19],\"71\":[1,2],\"72\":[1,10],\"73\":[1,5],\"74\":[1,18],\"75\":[1,9],\"76\":[1,10],\"77\":[1,17],\"78\":[1,7],\"79\":[1,2],\"80\":[1,12],\"81\":[1,37],\"82\":[1,38],\"83\":[1,5],\"84\":[1,29],\"85\":[1,17],\"86\":[1,17],\"87\":[1,42],\"88\":[2,18],\"89\":[1,7],\"90\":[1,15],\"91\":[3,13],\"92\":[3,4],\"93\":[3,4],\"94\":[3,5],\"95\":[3,5],\"96\":[3,4],\"97\":[null,null,1],\"98\":[null,null,1],\"99\":[2,27],\"100\":[1,32],\"101\":[1,51],\"102\":[null,null,1],\"103\":[null,null,1],\"104\":[1,20],\"105\":[2,4],\"106\":[2,20],\"107\":[2,5],\"108\":[1,49],\"109\":[1,20],\"110\":[null,null,1],\"111\":[null,null,1],\"112\":[1,22],\"113\":[2,12],\"114\":[null,null,2],\"115\":[null,null,2],\"116\":[5,47],\"117\":[1,28],\"118\":[3,56],\"119\":[1,40],\"120\":[1,14],\"121\":[1,24],\"122\":[5,7],\"123\":[1,8],\"124\":[1,3],\"125\":[1],\"126\":[1],\"127\":[1],\"128\":[1]},\"averageFieldLength\":[1.7908581825084193,13.445306412051263,0.8547531682191599],\"storedFields\":{\"0\":{\"h\":\"Archive Article1\"},\"1\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"2\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"3\":{\"c\":[\"History\"]},\"4\":{\"c\":[\"WWI\"]},\"5\":{\"h\":\"Archive Article2\"},\"6\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"7\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"8\":{\"c\":[\"History\"]},\"9\":{\"c\":[\"WWII\"]},\"10\":{\"h\":\"介绍页\",\"t\":[\"一个全栈工程师\"]},\"11\":{\"h\":\"Sticky Article\"},\"12\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"13\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"14\":{\"c\":[\"CategoryC\"]},\"15\":{\"c\":[\"tag E\"]},\"16\":{\"h\":\"Sticky Article with Higher Priority\",\"t\":[\"Excerpt information which is added manually.\"]},\"17\":{\"h\":\"Heading 2\",\"t\":[\"Here is the content.\"]},\"18\":{\"h\":\"Heading 3\",\"t\":[\"Here is the content.\"]},\"19\":{\"c\":[\"CategoryC\"]},\"20\":{\"c\":[\"tag E\"]},\"21\":{\"h\":\"课文\"},\"22\":{\"c\":[\"index\"]},\"23\":{\"h\":\"密文\"},\"24\":{\"h\":\"密码加密的文章\",\"t\":[\"实际的文章内容。\",\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\",\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"]},\"25\":{\"c\":[\"使用指南\"]},\"26\":{\"c\":[\"加密\"]},\"27\":{\"h\":\"博文\"},\"28\":{\"c\":[\"index\"]},\"29\":{\"h\":\"操作系统\"},\"30\":{\"h\":\"Flutter 和 Capacitor 的对比\",\"t\":[\"对比维度\",\"Flutter\",\"Capacitor\",\"开发语言\",\"Dart\",\"JavaScript、HTML、CSS\",\"开发框架性质\",\"自包含的UI框架，提供丰富的组件和工具\",\"跨平台的Web应用封装工具，用于将Web应用转化为原生应用\",\"性能\",\"使用自定义渲染引擎，提供流畅的动画和视觉效果\",\"依赖于WebView，性能可能不如原生编译框架\",\"跨平台支持\",\"原生编译，支持iOS、Android、Web、桌面和嵌入式平台\",\"主要支持iOS、Android和Web平台\",\"社区和生态系统\",\"由Google支持，拥有庞大的开发者社区和丰富的插件生态\",\"由Ionic团队开发，社区较小但增长迅速，兼容多种前端框架\",\"学习曲线\",\"相对较高，需要学习Dart语言和Flutter特有的开发模式\",\"较低，基于Web技术，适合熟悉Web开发的开发者\",\"开发工具\",\"官方推荐使用Visual Studio Code，集成了Flutter插件\",\"可以与多种前端开发工具和框架集成，如Webpack、Angular、React、Vue等\",\"应用构建和部署\",\"通过命令行工具和Flutter SDK构建和部署应用\",\"通过Capacitor CLI构建和部署，支持热重载和实时预览\",\"性能优化\",\"支持热重载，快速迭代\",\"优化了应用的性能，特别是对于复杂的动画和交互\",\"原生API访问\",\"通过平台通道和第三方SDK访问\",\"通过提供的原生插件系统直接调用设备API\",\"更新和维护\",\"需要通过应用商店进行更新和维护\",\"简化更新流程，避免应用商店的繁琐审核\",\"适用场景\",\"适合需要高性能和复杂UI的应用开发\",\"适合快速构建跨平台Web应用和渐进式Web应用（PWA）\"]},\"31\":{\"h\":\"结论与建议\",\"t\":[\"Flutter和Capacitor服务于不同的开发需求和场景。Flutter是一个自包含的UI框架，适合需要高性能和复杂UI的应用开发，尤其是游戏和高性能移动应用。它提供了丰富的组件和工具，但学习曲线相对较高。Capacitor则是一个基于Web技术的跨平台封装工具，适合快速构建跨平台Web应用和PWA，它的学习曲线较低，适合Web开发者转型至移动应用开发。\",\"如果您是一个寻求高性能和丰富UI的移动应用开发者，并且愿意投入时间学习Dart语言和Flutter框架，那么Flutter可能是更合适的选择。相反，如果您是一个Web开发者，希望利用现有的Web技术栈快速扩展到移动平台，并且希望保持较低的学习成本，Capacitor可能更符合您的需求。\"]},\"32\":{\"c\":[\"Android\"]},\"33\":{\"c\":[\"Android\"]},\"34\":{\"h\":\"注意事项\",\"t\":[\"用Android Studio时不能打开360手机助手，会和ADB冲突\"]},\"35\":{\"c\":[\"Android\"]},\"36\":{\"c\":[\"Android\",\"tip\"]},\"37\":{\"h\":\"github Actions\",\"t\":[\"homepage\",\"homepage\",\"how to start\",\"java -jar jenkins.war --httpPort=8081 --enable-future-java ``\"]},\"38\":{\"h\":\"Java 的 sdk manager\",\"t\":[\"sdkman\"]},\"39\":{\"h\":\"「泛型与 OI」modint\",\"t\":[\"在 OI 中，有大量的题目要求对一些数字取模，这便是本文写作的背景。\"]},\"40\":{\"h\":\"背景介绍\",\"t\":[\"这些题目要么是因为答案太大，不方便输出结果，例如许多计数 dp；要么是因为答案是浮点数，出题人不愿意写一个确定精度的 Special Judge，例如很多期望概率题；要么是因为这道题目直接考察了模的性质和运用，比如大量的 998244353 类的多项式题目。\"]},\"41\":{\"h\":\"过去的做法\",\"t\":[\"在这种要求之下，取模运算就成为了编程中不可缺少的一部分。下面以式子 为例介绍几种写法。\"]},\"42\":{\"h\":\"第一种 直接取模\",\"t\":[\"这种方法是直接取模，简单直接，清晰明了。\",\"constexpr int p=998244353; int ans=1ll*(((x+y)%p+z)%p)*u%p; \",\"但是这种方法有着严重的缺陷，一是容易忘记大括号，二是容易中间运算时搞错运算顺序、忘记取模，三是式子太长、括号太多、不易检验。\",\"因此，不推荐运用这种方法。\"]},\"43\":{\"h\":\"第二种 函数取模\",\"t\":[\"这种方法有效地解决了直接取模的忘记取模的漏洞。\",\"constexpr int p=998244353; int add(int a,int b){ return a+b>=p?a+b-p:a+b; } int sub(int a,int b){ return a<b?a-b+p:a-b; } int mul(int a,int b){ return 1ll*a*b%p; } int ans=mul(add(add(x,y),z),u); \",\"但是，这种写法的式子依旧太长，不易检验，并且如果编译器没有任何优化（现在不存在这种情况了）的话，大量的函数调用将会耗费不少的时间。并且如果要对多个模数取模，则需要写多个函数，显得代码冗长。\"]},\"44\":{\"h\":\"泛型编程\",\"t\":[\"考虑到函数取模的优点，我们不妨通过类的运算符重载来进一步优化 add 等函数。\",\"同时为了解决多个模数的问题，我们考虑泛型编程，将模数直接包含在类型中。\",\"template<typename T,const T p> class modint{ private: T v; public: modint(){} modint(const T& x){assert(0<=x&&x<p);v=x;} modint operator+(const modint& a)const{ return v+a.v>=p?v+a.v-p:v+a.v; } modint operator-(const modint& a)const{ return v<a.v?v-a.v+p:v-a.v; } modint operator*(const modint& a)const{ return 1ll*v*a.v%p; } T operator()(void)const{ return v; } }; modint<int,998244353> x(),y(),z(),u(); modint<int,998244353> ans=(x+y+z)*u; \",\"这样使用的时候，一方面减少了心智负担，不用操心运算时忘记取模；另一方面采取了常数更小的加减法操作，运算更快。\",\"唯一的缺点就是类型名难写，但是模数个数少的时候可以缩写，即写成：\",\"typedef modint<int,998244353> modInt1; \",\"这样就解决了类型名长的缺点。\"]},\"45\":{\"c\":[\"OI\"]},\"46\":{\"c\":[\"MODInt\"]},\"47\":{\"h\":\"Operating System\"},\"48\":{\"h\":\"参考项目\",\"t\":[\"xv6\",\"YiYiYa OS\"]},\"49\":{\"h\":\"Slidev\",\"t\":[\"复杂演示推荐\"]},\"50\":{\"h\":\"缺点\",\"t\":[\"不支持导出pptx\",\"https://cn.sli.dev/guide\",\"简单PPT,且需要导出为pptx推荐\"]},\"51\":{\"h\":\"缺点\",\"t\":[\"不支持动画\",\"https://sspai.com/post/55718\",\"https://segmentfault.com/a/1190000040806239\",\"⚠️注意事项\\n如果你的 VS Code 安装了 Markdown 渲染插件 Markdown Preview Enhanced，需要先将这个插件「禁用」或是「卸载」，转而使用 VS Code 后来集成的 Markdown 预览功能，才能正常看到渲染后的 PPT 页面。\"]},\"52\":{\"h\":\"Qt\"},\"53\":{\"h\":\"Some Solutions to Questions about Qt\"},\"54\":{\"h\":\"The qt-5 isn't in Qt Maintenance tools\",\"t\":[\"Open the Qt Maintenance Tools.\",\"click the Archive in the Select-Component section.\",\"click the filter button and you can see the qt-5 in the list.\"]},\"55\":{\"h\":\"多个router-view\",\"t\":[\"单个 \",\"多个\",\"然后在router.js中进行配置，注意：component改成要components，components是一个对象了，nav:AboutNav,左侧的nav就是\",\"import AboutCon from './views/AboutCon.vue' import AboutNav from './views/AboutNav.vue'\",\"{ path: '/about', name: 'about', components:\",\"{\\n　　nav:AboutNav,\\n　　con:AboutCon\\n　　}\\n}\"]},\"56\":{\"h\":\"Game Plugin\",\"t\":[\"This is the content of the game plugin post.\",\"BepInEx\",\"AssetStudioAssetStudio\",\"dnSpy\",\"Harmony\",\"UnityExplorer\"]},\"57\":{\"h\":\"Auto generate changelog.md\",\"t\":[\"env: linux/wsl install:\",\"sh gem install github_changelog_generator \",\"Usage\"]},\"58\":{\"h\":\"github 工作流程\",\"t\":[\"十分钟学会正确的github工作流，和开源作者们使用同一套流程\"]},\"59\":{\"h\":\"Interpreter\"},\"60\":{\"h\":\"参考资料\",\"t\":[\"https://lotabout.me/2015/write-a-C-interpreter-0/\"]},\"61\":{\"h\":\"「算术公理系统 1」自然数\",\"t\":[\"假设存在一个算数系统的模型满足 Peano 公理，即假定 Peano 公理相容，在此承认次假设的基础之上，我们即可建立如今最常用的算术公理系统。自然数的定义则是构建此算术公理系统的第一步。\"]},\"62\":{\"h\":\"自然数的定义\",\"t\":[\"先介绍 Peano 公理，共有五条：\",\" 是自然数；\",\"任何自然数的后继存在且唯一，下文用 表示 的后继；\",\" 不是任何自然数的后继；\",\"不同的自然数后继不同；\",\" 是关于自然数 的一个命题，且满足两个条件：\",\" 是真命题；\",\"由 为真命题可以推理出 为真命题。\",\"则有，对于任意自然数 ， 为真命题。\",\"这样就定义了自然数，自然数这个新的数学对象因我们的假设而确立。\"]},\"63\":{\"h\":\"自然数的加法运算\",\"t\":[\"自然数中最重要的运算当然是加法。\"]},\"64\":{\"h\":\"加法的定义\",\"t\":[\"定义加法的运算规则：\",\"若 是自然数，则 的运算结果为 ，即 ；\",\"若 都是自然数，则 。\",\"下面我们需要证明对于任意两个自然数，都可以进行加法运算，也就是说，我们需要证明加法结果的存在性和唯一性。\"]},\"65\":{\"h\":\"加法结果的存在性\",\"t\":[\" 是任意自然数，记 表示 是否是自然数，即 是否存在。\",\" 是自然数，由加法运算规则 Ⅰ 有 ，进而有 是自然数； 即 得证。\",\" 和 是自然数，由 Peano 公理 Ⅱ 有 和 是自然数； 根据加法运算规则 Ⅱ 有 ，进有 是自然数； 综上所述，若 是自然数，则 也是自然数； 即由 为真命题可以推出 为真命题。\",\"由 的性质和 Peano 公理 Ⅴ 有，对于任意自然数 ， 成立，即 是自然数，再根据 的任意性，得出对于任意自然数 ， 都是自然数。\"]},\"66\":{\"h\":\"加法结果的唯一性\",\"t\":[\" 是任意自然数，记 表示 是否唯一，即 的结果是否唯一。\",\" 是自然数，由加法运算规则 Ⅰ 有 ，进而 是唯一的，就是 ； 即 得证。\",\" 是自然数， 是唯一的，由 Peano 公理 Ⅱ 有 是自然数且 唯一； 根据加法运算规则 Ⅱ 有 ，进有 唯一； 综上所述，若 唯一，则 也唯一； 即由 为真命题可以推出 为真命题。\",\"由 的性质和 Peano 公理 Ⅴ 有，对于任意自然数 ， 成立，即 唯一，再根据 的任意性，得出对于任意自然数 ， 都是唯一的。\"]},\"67\":{\"h\":\"加法的性质\",\"t\":[\"在明确证明了自然数加法运算的良好性质，即任意两个自然数都可以进行加法运算，且加法运算的结果存在且唯一之后，我们终于可以对自然数加法的性质进行进一步的探索。\"]},\"68\":{\"h\":\"加法交换律\",\"t\":[\"下面证明加法交换律，即对于任意自然数 ，有 。\",\"直接证明比较困难，考虑从加法运算的定义下手，即先证明加法的两条运算规则符合交换律。\",\"试证 ，首先有\",\"进而当 是自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立。\",\"试证 ，首先有\",\"进而当 是自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，将其称为新的加法运算规则 Ⅱ。\",\"证明了加法运算规则的交换律之后，试证加法交换律 ，首先由加法运算规则 Ⅰ 有 ，进而当 是自然数且 时，有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，即加法交换律成立。\"]},\"69\":{\"h\":\"加法结合律\",\"t\":[\"下面证明加法结合律，即对于任意自然数 ，有 。\",\"首先当 时，有\",\"进而当 为自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，即加法结合律成立。\"]},\"70\":{\"h\":\"加法消去律\",\"t\":[\"下面证明加法消去律，即对于任意自然数 ，有 。\",\"试证 。\",\"首先当 时有\",\"进而当 为自然数且 时有\",\"即 ，根据 Peano 公理 Ⅴ，得知 对任意自然数 成立。\",\"试证 。\",\"首先当 时有\",\"进而当 为自然数且 时有\",\"即 ，根据 Peano 公理 Ⅴ，得知 对任意自然数 成立。\",\"综上所述，加法消去律 ，对任意自然数 成立。\"]},\"71\":{\"h\":\"自然数的序\",\"t\":[\"自然数的序为两个自然数的关系。\"]},\"72\":{\"h\":\"序的定义\",\"t\":[\"定义自然数的序即定义 当且仅当存在自然数 满足 。定义 当且仅当 且 。\",\"自然数的序是全序关系，它应该具有反对称性、传递性和完全性。\"]},\"73\":{\"h\":\"正自然数\",\"t\":[\"在考察序的性质之前，我们预先准备以方便证明。\",\"定义正自然数为非 自然数。\"]},\"74\":{\"h\":\"正自然数的性质\",\"t\":[\"正自然数与自然数相加为正自然数，即对于正自然数 ，其与自然数 的和 为正自然数。\",\"首先，当 时， 为正自然数。\",\"进而当 为自然数且 为正自然数时有 ，根据 Peano 公理 Ⅲ， 为正自然数，进而 为正自然数。\",\"根据 Peano 公理 Ⅴ，正自然数与自然数相加为正自然数。\"]},\"75\":{\"h\":\"序的反对称性\",\"t\":[\"若 且 ，则 。\",\"由 有 ，由 有 。\",\"因此 ，由加法消去律得到 ，根据正自然数的性质得出 ，因此 。\"]},\"76\":{\"h\":\"序的传递性\",\"t\":[\"若 且 ，则 。\",\"由 有 ，由 有 。\",\"根据加法结果的存在性得到 是自然数，根据加法结合律得出 ，进而 。\"]},\"77\":{\"h\":\"序的完全性\",\"t\":[\"任意两个自然数 都有序关系。\",\"对于 两个自然数，当 时有 所以 。\",\"当 为自然数时。若 ，则 ，因此 ；若 ，则 ，因此 ；若 ，则 。\",\"由 Peano 公理 Ⅴ 有任意两个自然数 都有序关系。\"]},\"78\":{\"h\":\"加法保序性\",\"t\":[\"若 ，则 。\",\"由 有 ，进而 因此 。\"]},\"79\":{\"h\":\"自然数的乘法运算\",\"t\":[\"自然数的乘法也十分重要。\"]},\"80\":{\"h\":\"乘法的定义\",\"t\":[\"定义乘法的运算规则：\",\"若 是自然数，则 的运算结果为 ，即 ；\",\"若 都是自然数，则 。\",\"下面我们需要证明对于任意两个自然数，都可以进行乘法运算，也就是说，我们需要证明乘法结果的存在性和唯一性。\"]},\"81\":{\"h\":\"乘法结果的存在性\",\"t\":[\" 是任意自然数，记 表示 是否是自然数，即 是否存在。\",\" 是自然数，由乘法运算规则 Ⅰ 有 ，进而有 是自然数； 即 得证。\",\" 和 是自然数，由加法结果的存在性有 存在； 根据乘法运算规则 Ⅱ 有 ，进有 是自然数； 综上所述，若 是自然数，则 也是自然数； 即由 为真命题可以推出 为真命题。\",\"由 的性质和 Peano 公理 Ⅴ 有，对于任意自然数 ， 成立，即 是自然数，再根据 的任意性，得出对于任意自然数 ， 都是自然数。\"]},\"82\":{\"h\":\"乘法结果的唯一性\",\"t\":[\" 是任意自然数，记 表示 是否唯一，即 的结果是否唯一。\",\" 是自然数，由乘法运算规则 Ⅰ 有 ，进而 是唯一的，就是 ； 即 得证。\",\" 是自然数， 是唯一的，由加法结果的唯一性有 唯一； 根据乘法运算规则 Ⅱ 有 ，进有 唯一； 综上所述，若 唯一，则 也唯一； 即由 为真命题可以推出 为真命题。\",\"由 的性质和 Peano 公理 Ⅴ 有，对于任意自然数 ， 成立，即 唯一，再根据 的任意性，得出对于任意自然数 ， 都是唯一的。\"]},\"83\":{\"h\":\"乘法的性质\",\"t\":[\"在明确证明了自然数乘法运算的良好性质，即任意两个自然数都可以进行乘法运算，且乘法运算的结果存在且唯一之后，我们终于可以对自然数乘法的性质进行进一步的探索。\"]},\"84\":{\"h\":\"乘法交换律\",\"t\":[\"下面证明乘法交换律，即对于任意自然数 ，有 。\",\"直接证明比较困难，考虑从乘法运算的定义下手，即先证明乘法的两条运算规则符合交换律。\",\"试证 。\",\"首先有 。\",\"进而当 是自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立。\",\"试证 。\",\"首先 时有\",\"进而当 是自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，将其称为新的乘法运算规则 Ⅱ。\",\"证明了乘法运算规则的交换律之后，试证乘法交换律 ，首先当 时由乘法运算规则 Ⅰ 有 。\",\"进而当 是自然数且 时，有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，即乘法交换律成立。\"]},\"85\":{\"h\":\"乘法分配律\",\"t\":[\"下面证明乘法分配律，即对于任意自然数 ，有 。\",\"首先当 时，，进而当 为自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，即乘法分配律成立。\"]},\"86\":{\"h\":\"乘法结合律\",\"t\":[\"下面证明乘法结合律，即对于任意自然数 ，有 。\",\"首先当 时，有 。\",\"进而当 为自然数且 时有\",\"根据 Peano 公理 Ⅴ，得知 对任意自然数 成立，即乘法结合律成立。\"]},\"87\":{\"h\":\"乘法消去律\",\"t\":[\"下面证明乘法消去律，即对于任意自然数 和 ，有 。\",\"试证 。\",\"首先当 时有\",\"进而当 为自然数且 时有\",\"即 ，根据 Peano 公理 Ⅴ，得知 对任意自然数 成立。\",\"试证 ，采用反证法，假设 ，则由加法运算规则 Ⅱ 可知 或 ，其中 ，不妨设 。\",\"由 Peano 公理 Ⅲ 有 。\",\"由 Peano 公理 Ⅲ、Ⅳ 有，任意非零自然数 都有唯一的数 满足 ，不妨记作 。\",\"若有 ，则有\",\"上述等式表明 是 的后继，这违背了 Peano 公理 Ⅲ，由此知道假设不成立，即 。\",\"综上所述，乘法消去律 ，对任意自然数 成立。\"]},\"88\":{\"h\":\"Peano 公理的合理性\",\"t\":[\"通过上述步骤，我们成功地由 Peano 公理构建出了一个自然数代数系统。但 Peano 公理自身任有待研究。从上述步骤中我们看出 Peano 公理每一条公理都被使用过，少了任何一条都不足以构建出上述的自然数系统，这究竟是为什么呢？\",\"下面我将阐述为什么每条公理都是必须的，通过举反例的方式。研究 Peano 公理自然不能从 Peano 公理系统内出发，我们将借助另一个公理系统——图论。\"]},\"89\":{\"h\":\"乘法保序性\",\"t\":[\"若 ，则 。\",\"由 有 ，进而 因此 。\"]},\"90\":{\"h\":\"乘法消去保序性\",\"t\":[\"若 ，则 。\",\"采用反证法，假设 ，则存在正自然数 满足 ，有\",\"由此有 ，根据序的反对称性有 ，根据乘法消去律有 ，这与 的假设矛盾，因此假设不成立，即证明了乘法消去的保序性。\"]},\"91\":{\"h\":\"用图论阐述 Peano 系统\",\"t\":[\"自然数与有向图 同构，这个图满足如下性质：\",\"存在点 ，即 ；\",\"所有点的出度为 ，即 ；\",\"点 入度为 ，即 ；\",\"任意点的入度小于等于 ，即 ；\",\"存在从 到任意点的路径，即 。\",\"下面我们试着通过删除公理的方法来寻找反例。\"]},\"92\":{\"h\":\"Peano 公理 Ⅰ\",\"t\":[\"若去除，则允许不存在 ，可以构造出空集自然数系统。\"]},\"93\":{\"h\":\"Peano 公理 Ⅱ\",\"t\":[\"若去除，则对点的出度无规定，可以构造出菊花图自然数系统。\"]},\"94\":{\"h\":\"Peano 公理 Ⅲ\",\"t\":[\"若去除，则对 的入度无规定，可以构造出环状自然数系统。\"]},\"95\":{\"h\":\"Peano 公理 Ⅳ\",\"t\":[\"若去除，则对一个数可以是多个数的后继，可以构造出 状自然数系统。\"]},\"96\":{\"h\":\"Peano 公理 Ⅴ\",\"t\":[\"若去除，则对连通性无要求，可以构造出分段状自然数系统。\"]},\"97\":{\"c\":[\"数学\"]},\"98\":{\"c\":[\"公理系统\"]},\"99\":{\"h\":\"vscode plugin\",\"t\":[\"// TODO https://code.visualstudio.com/api/get-started/your-first-extension\",\"若activate function执行时间过长，会导致Activating extension 'undefined_publisher.kcodetime' failed: AggregateError., 从而启动失败\",\"若deactivate function执行时间超过5s, 会被强行终止，导致插件无法正常退出。\",\"关闭vscode 不会触发onDidCloseTextDocument事件\"]},\"100\":{\"h\":\"风格统一\",\"t\":[\"如何实现风格统一？ 可以使用*.editorconfig*文件来实现风格统一。\",\"安装EditorConfig插件 (部分IDE默认直接支持)\",\"在项目根目录下创建.editorconfig文件，并添加以下内容：\",\"root = true [*] indent_style = space tab_width = 2 end_of_line = lf charset = utf-8 trim_trailing_whitespace = true insert_final_newline = true \"]},\"101\":{\"h\":\"闭包实现类\",\"t\":[\"#include <iostream> #include <string> using namespace std; // 通过闭包实现类似类的结构 auto fun(int x) { int* _x = new int(x); // toString 函数捕获_x，用以输出当前_x的值 auto toString = [_x]() -> string { return \\\"x: \\\" + to_string(*_x); }; // add 函数用于增加_x的值 auto add = [_x]() { (*_x)++; }; // remove 函数用于释放_x指向的内存 auto remove = [_x]() { delete _x; }; // 结构体内包含三个函数 struct { decltype(toString) toString; decltype(add) add; decltype(remove) remove; } self{toString, add, remove}; return self; } int main() { auto obj1 = fun(1); auto obj2 = fun(3); cout << obj1.toString() << endl; // 输出 \\\"x: 1\\\" obj1.add(); // 增加obj1的内部_x的值 cout << obj1.toString() << endl; // 输出 \\\"x: 2\\\" cout << obj2.toString() << endl; // 输出 \\\"x: 3\\\" obj1.remove(); // 释放obj1的内部_x的内存 obj2.remove(); // 释放obj2的内部_x的内存 return 0; } \",\"alt text\"]},\"102\":{\"c\":[\"OI\"]},\"103\":{\"c\":[\"MODInt\"]},\"104\":{\"h\":\"导论\",\"t\":[\"Kernel(nucleus): OS is the one program running at all times on the computer (all else being the applications or system programs).\\n\"]},\"105\":{\"h\":\"bug 记录\",\"t\":[\"使用 vscode ionic打包后的相对路径不正确， 手动修改后可正常运行\"]},\"106\":{\"h\":\"Capacitor 的使用\",\"t\":[\"homepage\",\"Capacitor是一个开源的并且在Native端运行的跨平台的web应用。 使用JavaScript、HTML和CSS创建跨平台iOS、Android和渐进式Web应用程序。 很好的将Cordova迁移到Capacitor，因为它99%的向后兼容Cordova。\",\"默认不支持HTTP\",\"const config: CapacitorConfig = { plugins:{ CapacitorHttp:{ enabled:true, } }, android:{ allowMixedContent: true, } }; \"]},\"107\":{\"h\":\"Flutter 入门\",\"t\":[\"使用 Dart 语言， 跨平台开发.\"]},\"108\":{\"h\":\"gradle\",\"t\":[\"国内镜像\",\"Android Studio下载gradle太慢可换源\",\"android.plugin version 下载错误查看\",\"修改 settings.gradle.kts\",\"pluginManagement { repositories { maven { url=uri (\\\"https://jitpack.io\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/releases\\\") } // maven { url 'https://maven.aliyun.com/repository/jcenter' } maven { url=uri (\\\"https://maven.aliyun.com/repository/google\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/central\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/gradle-plugin\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/public\\\") } google() mavenCentral() gradlePluginPortal() } } dependencyResolutionManagement { repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS) repositories { maven { url=uri (\\\"https://jitpack.io\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/releases\\\") } // maven { url 'https://maven.aliyun.com/repository/jcenter' } maven { url=uri (\\\"https://maven.aliyun.com/repository/google\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/central\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/gradle-plugin\\\") } maven { url=uri (\\\"https://maven.aliyun.com/repository/public\\\") } google() mavenCentral() } } \",\"gradle-wrapper.properties 换成对应的版本\",\"distributionUrl=https\\\\://mirrors.cloud.tencent.com/gradle/gradle-8.7-all.zip \"]},\"109\":{\"h\":\"ionic\",\"t\":[\"homepage\",\"Ionic 是一个开源 UI 工具包，用于使用 Web 技术（HTML、CSS 和 JavaScript）构建高性能、高质量的移动应用，并集成了 Angular、React 和 Vue 等流行框架。\"]},\"110\":{\"c\":[\"数学\"]},\"111\":{\"c\":[\"公理系统\"]},\"112\":{\"h\":\"tips\",\"t\":[\"deploy\",\"每次执行更新你的 Web 目录的构建（例如 ionic build）时（默认：build)，你需要将这些更改复制到你的原生项目中：\",\"ionic cap copy\",\"注意：更新代码的原生部分（例如添加新插件）后，使用 sync 命令：\",\"ionic cap sync\",\"\\nvscode中可以使用\\\"ionic\\\"插件\\n\"]},\"113\":{\"h\":\"Github Actions\",\"t\":[\"本地调试工具 act\",\"需要创建配置文件 也可另外指定\",\"act --var-file \\\"./.act/.vars\\\" --secret-file \\\"./.act/.secrets\\\" --env-file \\\"./.act/.env\\\" {{other}} \"]},\"114\":{\"c\":[\"CI/CD\"]},\"115\":{\"c\":[\"CI/CD\"]},\"116\":{\"h\":\"手把手教你构建 C 语言编译器（0）- 前言\",\"t\":[\"[toc]\",\"本文转载自 手把手教你构建 C 语言编译器（0）- 前言，原作者 三点水，原文链接：原文链接，如有侵权，请联系删除。\",\"转载工具:devtool、helloworld\",\"“手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的 C 语言编译器，尽管有许多语法并不支持。\",\"手把手教你构建 C 语言编译器系列共有10个部分：\",\"手把手教你构建 C 语言编译器（0）——前言\",\"手把手教你构建 C 语言编译器（1）——设计\",\"手把手教你构建 C 语言编译器（2）——虚拟机\",\"手把手教你构建 C 语言编译器（3）——词法分析器\",\"手把手教你构建 C 语言编译器（4）——递归下降\",\"手把手教你构建 C 语言编译器（5）——变量定义\",\"手把手教你构建 C 语言编译器（6）——函数定义\",\"手把手教你构建 C 语言编译器（7）——语句\",\"手把手教你构建 C 语言编译器（8）——表达式\",\"手把手教你构建 C 语言编译器（9）——总结\",\"在开始进入正题之前，本篇是一些闲聊，谈谈这个系列的初衷。如果你急切地想进入正篇，请跳过本章。\"]},\"117\":{\"h\":\"为什么要学编译原理\",\"t\":[\"如果要我说计算机专业最重要的三门课，我会说是《数据结构》、《算法》和《编译原理》。在我看来，能不能理解“递归”像是程序员的第一道门槛，而会不会写编译器则是第二道。\",\"（当然，并不是说是没写过编译器就不是好程序员，只能说它是一个相当大的挑战吧）\",\"以前人们会说，学习了编译原理，你就能写出更加高效的代码，但随着计算机性能的提升，代码是否高效显得就不那么重要了。那么为什么要学习编译原理呢？\",\"原因只有一个：装B。\",\"好吧，也许现在还想学习编译原理的人只可能是因为兴趣了。一方面想了解它的工作原理；另一方面希望挑战一下自己，看看自己能走多远。\"]},\"118\":{\"h\":\"理论很复杂，实现也很复杂？\",\"t\":[\"我对编译器一直心存敬佩。所以当学校开《编译原理》的课程后，我是抱着满腔热情去上课的，但是两节课后我就放弃了。原因是太复杂了，听不懂。\",\"一般编译原理的课程会说一些：\",\"如何表示语法（BNF什么的）\",\"词法分析，用什么有穷自动机和无穷自动机\",\"语法分析，递归下降法，什么 LL(k)，LALR 分析。\",\"中间代码的表示\",\"代码的生成\",\"代码优化\",\"我相信绝大多数（98％）的学生顶多学到语法分析就结束了。并且最重要的是，学了这么多也没用！依旧帮助不了我们学习编译器！这其中最主要的原因是《编译原理》试图教会我们的是如何构造“编译器生成器”，即构造一个工具，根据文法来生成编译器（如 lex/yacc）等等。\",\"这些理论试图教会我们如何用通用的方法来自动解决问题，它们有很强的实际意义，只是对于一般的学生或程序员来说，它们过于强大，内容过于复杂。如果你尝试阅读 lex/yacc （或 flex/bison）的代码，就会发现太可怕了。\",\"然而如果你能跟我一样，真正来实现一个简单的编译器，那么你会发现，比起可怕的《编译原理》，这点复杂度还是不算什么的（因为好多理论根本用不上）。\"]},\"119\":{\"h\":\"项目的初衷\",\"t\":[\"有一次在 Github 上看到了一个项目（当时很火的），名叫 c4，号称用 4 个函数来实现了一个小的 C 语言编译器。它最让我震惊的是能够自举，即能自己编译自己。并且它用很少的代码就完成了一个功能相当完善的 C 语言编译器。\",\"一般的编译器相关的教程要么就十分简单（如实现四则运算），要么就是借助了自动生成的工具（如 flex/bison）。而 c4 的代码完全是手工实现的，不用外部工具。可惜的是它的代码初衷是代码最小化，所以写得很乱，很难懂。所以本项目的主要目的：\",\"实现一个功能完善的 C 语言编译器\",\"通过教程来说明这个过程。\",\"c4 大致500+行。重写的代码历时一周，总共代码加注释1400行。项目地址: Write a C Interpreter。\",\"声明：本项目中的代码逻辑绝大多数取自 c4 ，但确为自己重写。\"]},\"120\":{\"h\":\"做好心理准备\",\"t\":[\"在写编译器的时候会遇到两个主要问题：\",\"繁琐，会有许多相似的代码，写起来很无聊。\",\"难以调试，一方面没有很好的测试用例，另一方面需要对照生成的代码来调试（遇到的时候就知道了）。\",\"所以我希望你有足够的耐心和时间来学习，相信当你真正完成的时候会像我一样，十分有成就感。\",\"PS. 第一篇完全没有正题相关的内容也是希望你能有所心理准备再开始学习。\"]},\"121\":{\"h\":\"参考资料\",\"t\":[\"最后想介绍几个资料：\",\"Let’s Build a Compiler 很好的初学者教程，英文的。\",\"Lemon Parser Generator，一个语法分析器生成器，对照《编译原理》观看效果更佳。\",\"由于本人水平一般，文章、代码难免会有错误，敬请批评指正！\",\"最后祝你学得愉快。\",\"（可选）这里可以加入你对原文的理解、感想或补充信息。\"]},\"122\":{\"h\":\"Design a Simple C Compiler\",\"t\":[\"This is the content of the post.\"]},\"123\":{\"h\":\"PostgreSQL\",\"t\":[\"This is the PostgreSQL section of the blog.\"]},\"124\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"125\":{\"h\":\"OI\"},\"126\":{\"h\":\"Vue\"},\"127\":{\"h\":\"Math\"},\"128\":{\"h\":\"奇技淫巧\"}},\"dirtCount\":0,\"index\":[[\"奇技淫巧\",{\"0\":{\"128\":1}}],[\"感想或补充信息\",{\"1\":{\"121\":1}}],[\"最后祝你学得愉快\",{\"1\":{\"121\":1}}],[\"最后想介绍几个资料\",{\"1\":{\"121\":1}}],[\"敬请批评指正\",{\"1\":{\"121\":1}}],[\"观看效果更佳\",{\"1\":{\"121\":1}}],[\"英文的\",{\"1\":{\"121\":1}}],[\"十分有成就感\",{\"1\":{\"120\":1}}],[\"十分钟学会正确的github工作流\",{\"1\":{\"58\":1}}],[\"遇到的时候就知道了\",{\"1\":{\"120\":1}}],[\"难以调试\",{\"1\":{\"120\":1}}],[\"写起来很无聊\",{\"1\":{\"120\":1}}],[\"繁琐\",{\"1\":{\"120\":1}}],[\"做好心理准备\",{\"0\":{\"120\":1}}],[\"声明\",{\"1\":{\"119\":1}}],[\"项目地址\",{\"1\":{\"119\":1}}],[\"项目的初衷\",{\"0\":{\"119\":1}}],[\"总共代码加注释1400行\",{\"1\":{\"119\":1}}],[\"总结\",{\"1\":{\"116\":1}}],[\"重写的代码历时一周\",{\"1\":{\"119\":1}}],[\"大致500+行\",{\"1\":{\"119\":1}}],[\"大量的函数调用将会耗费不少的时间\",{\"1\":{\"43\":1}}],[\"很好的初学者教程\",{\"1\":{\"121\":1}}],[\"很好的将cordova迁移到capacitor\",{\"1\":{\"106\":1}}],[\"很难懂\",{\"1\":{\"119\":1}}],[\"而\",{\"1\":{\"119\":1}}],[\"而会不会写编译器则是第二道\",{\"1\":{\"117\":1}}],[\"要么就是借助了自动生成的工具\",{\"1\":{\"119\":1}}],[\"要么是因为这道题目直接考察了模的性质和运用\",{\"1\":{\"40\":1}}],[\"要么是因为答案是浮点数\",{\"1\":{\"40\":1}}],[\"个函数来实现了一个小的\",{\"1\":{\"119\":1}}],[\"号称用\",{\"1\":{\"119\":1}}],[\"名叫\",{\"1\":{\"119\":1}}],[\"上看到了一个项目\",{\"1\":{\"119\":1}}],[\"上述等式表明\",{\"1\":{\"87\":1}}],[\"比起可怕的\",{\"1\":{\"118\":1}}],[\"比如大量的\",{\"1\":{\"40\":1}}],[\"真正来实现一个简单的编译器\",{\"1\":{\"118\":1}}],[\"然而如果你能跟我一样\",{\"1\":{\"118\":1}}],[\"然后在router\",{\"1\":{\"55\":1}}],[\"就会发现太可怕了\",{\"1\":{\"118\":1}}],[\"就是\",{\"1\":{\"66\":1,\"82\":1}}],[\"内容过于复杂\",{\"1\":{\"118\":1}}],[\"只是对于一般的学生或程序员来说\",{\"1\":{\"118\":1}}],[\"只能说它是一个相当大的挑战吧\",{\"1\":{\"117\":1}}],[\"编译器生成器\",{\"1\":{\"118\":1}}],[\"编译原理\",{\"1\":{\"117\":1,\"118\":3,\"121\":1}}],[\"试图教会我们的是如何构造\",{\"1\":{\"118\":1}}],[\"试证乘法交换律\",{\"1\":{\"84\":1}}],[\"试证加法交换律\",{\"1\":{\"68\":1}}],[\"试证\",{\"1\":{\"68\":2,\"70\":2,\"84\":2,\"87\":2}}],[\"依旧帮助不了我们学习编译器\",{\"1\":{\"118\":1}}],[\"依赖于webview\",{\"1\":{\"30\":1}}],[\"学了这么多也没用\",{\"1\":{\"118\":1}}],[\"学习了编译原理\",{\"1\":{\"117\":1}}],[\"学习曲线\",{\"1\":{\"30\":1}}],[\"代码难免会有错误\",{\"1\":{\"121\":1}}],[\"代码优化\",{\"1\":{\"118\":1}}],[\"代码的生成\",{\"1\":{\"118\":1}}],[\"代码是否高效显得就不那么重要了\",{\"1\":{\"117\":1}}],[\"分析\",{\"1\":{\"118\":1}}],[\"什么\",{\"1\":{\"118\":1}}],[\"词法分析\",{\"1\":{\"118\":1}}],[\"词法分析器\",{\"1\":{\"116\":1}}],[\"听不懂\",{\"1\":{\"118\":1}}],[\"实现一个功能完善的\",{\"1\":{\"119\":1}}],[\"实现也很复杂\",{\"0\":{\"118\":1}}],[\"实际的文章内容\",{\"1\":{\"24\":1}}],[\"理论很复杂\",{\"0\":{\"118\":1}}],[\"看看自己能走多远\",{\"1\":{\"117\":1}}],[\"另一方面需要对照生成的代码来调试\",{\"1\":{\"120\":1}}],[\"另一方面希望挑战一下自己\",{\"1\":{\"117\":1}}],[\"另一方面采取了常数更小的加减法操作\",{\"1\":{\"44\":1}}],[\"好吧\",{\"1\":{\"117\":1}}],[\"装b\",{\"1\":{\"117\":1}}],[\"那么你会发现\",{\"1\":{\"118\":1}}],[\"那么为什么要学习编译原理呢\",{\"1\":{\"117\":1}}],[\"那么flutter可能是更合适的选择\",{\"1\":{\"31\":1}}],[\"你就能写出更加高效的代码\",{\"1\":{\"117\":1}}],[\"你需要将这些更改复制到你的原生项目中\",{\"1\":{\"112\":1}}],[\"以前人们会说\",{\"1\":{\"117\":1}}],[\"像是程序员的第一道门槛\",{\"1\":{\"117\":1}}],[\"递归\",{\"1\":{\"117\":1}}],[\"递归下降法\",{\"1\":{\"118\":1}}],[\"递归下降\",{\"1\":{\"116\":1}}],[\"能不能理解\",{\"1\":{\"117\":1}}],[\"算法\",{\"1\":{\"117\":1}}],[\"算术公理系统\",{\"0\":{\"61\":1}}],[\"数据结构\",{\"1\":{\"117\":1}}],[\"数学\",{\"2\":{\"97\":1,\"110\":1}}],[\"我相信绝大多数\",{\"1\":{\"118\":1}}],[\"我是抱着满腔热情去上课的\",{\"1\":{\"118\":1}}],[\"我对编译器一直心存敬佩\",{\"1\":{\"118\":1}}],[\"我会说是\",{\"1\":{\"117\":1}}],[\"我们也将构建出一个能用的\",{\"1\":{\"116\":1}}],[\"我们能对编译器的构建有一定的了解\",{\"1\":{\"116\":1}}],[\"我们将借助另一个公理系统\",{\"1\":{\"88\":1}}],[\"我们成功地由\",{\"1\":{\"88\":1}}],[\"我们终于可以对自然数乘法的性质进行进一步的探索\",{\"1\":{\"83\":1}}],[\"我们终于可以对自然数加法的性质进行进一步的探索\",{\"1\":{\"67\":1}}],[\"我们需要证明乘法结果的存在性和唯一性\",{\"1\":{\"80\":1}}],[\"我们需要证明加法结果的存在性和唯一性\",{\"1\":{\"64\":1}}],[\"我们预先准备以方便证明\",{\"1\":{\"73\":1}}],[\"我们即可建立如今最常用的算术公理系统\",{\"1\":{\"61\":1}}],[\"我们考虑泛型编程\",{\"1\":{\"44\":1}}],[\"我们不妨通过类的运算符重载来进一步优化\",{\"1\":{\"44\":1}}],[\"请跳过本章\",{\"1\":{\"116\":1}}],[\"请联系删除\",{\"1\":{\"116\":1}}],[\"谈谈这个系列的初衷\",{\"1\":{\"116\":1}}],[\"98\",{\"1\":{\"118\":1}}],[\"9\",{\"1\":{\"116\":1}}],[\"998244353>\",{\"1\":{\"44\":3}}],[\"998244353\",{\"1\":{\"40\":1}}],[\"表达式\",{\"1\":{\"116\":1}}],[\"表示\",{\"1\":{\"62\":1,\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"语法分析\",{\"1\":{\"118\":1}}],[\"语句\",{\"1\":{\"116\":1}}],[\"语言的编译器\",{\"1\":{\"116\":1}}],[\"语言编译器系列共有10个部分\",{\"1\":{\"116\":1}}],[\"语言编译器\",{\"0\":{\"116\":1},\"1\":{\"116\":13,\"119\":3}}],[\"语言\",{\"1\":{\"107\":1}}],[\"6\",{\"1\":{\"116\":1}}],[\"变量定义\",{\"1\":{\"116\":1}}],[\"404\",{\"1\":{\"124\":1}}],[\"4\",{\"1\":{\"116\":1,\"119\":1}}],[\"虚拟机\",{\"1\":{\"116\":1}}],[\"设计\",{\"1\":{\"116\":1}}],[\"尽管有许多语法并不支持\",{\"1\":{\"116\":1}}],[\"希望通过这个系列\",{\"1\":{\"116\":1}}],[\"希望利用现有的web技术栈快速扩展到移动平台\",{\"1\":{\"31\":1}}],[\"转载工具\",{\"1\":{\"116\":1}}],[\"转而使用\",{\"1\":{\"51\":1}}],[\"三点水\",{\"1\":{\"116\":1}}],[\"三是式子太长\",{\"1\":{\"42\":1}}],[\"原因是太复杂了\",{\"1\":{\"118\":1}}],[\"原因只有一个\",{\"1\":{\"117\":1}}],[\"原文链接\",{\"1\":{\"116\":2}}],[\"原作者\",{\"1\":{\"116\":1}}],[\"原生api访问\",{\"1\":{\"30\":1}}],[\"原生编译\",{\"1\":{\"30\":1}}],[\"本项目中的代码逻辑绝大多数取自\",{\"1\":{\"119\":1}}],[\"本篇是一些闲聊\",{\"1\":{\"116\":1}}],[\"本文转载自\",{\"1\":{\"116\":1}}],[\"本地调试工具\",{\"1\":{\"113\":1}}],[\"前言\",{\"0\":{\"116\":1},\"1\":{\"116\":2}}],[\"手把手教你构建\",{\"0\":{\"116\":1},\"1\":{\"116\":13}}],[\"手动修改后可正常运行\",{\"1\":{\"105\":1}}],[\"插件\",{\"1\":{\"112\":1}}],[\"命令\",{\"1\":{\"112\":1}}],[\"后\",{\"1\":{\"112\":1}}],[\"后来集成的\",{\"1\":{\"51\":1}}],[\"更新代码的原生部分\",{\"1\":{\"112\":1}}],[\"更新和维护\",{\"1\":{\"30\":1}}],[\"默认\",{\"1\":{\"112\":1}}],[\"默认不支持http\",{\"1\":{\"106\":1}}],[\"目录的构建\",{\"1\":{\"112\":1}}],[\"每次执行更新你的\",{\"1\":{\"112\":1}}],[\"等等\",{\"1\":{\"118\":1}}],[\"等流行框架\",{\"1\":{\"109\":1}}],[\"等函数\",{\"1\":{\"44\":1}}],[\"高质量的移动应用\",{\"1\":{\"109\":1}}],[\"构建高性能\",{\"1\":{\"109\":1}}],[\"技术\",{\"1\":{\"109\":1}}],[\"工具包\",{\"1\":{\"109\":1}}],[\"工作流程\",{\"0\":{\"58\":1}}],[\"7\",{\"1\":{\"108\":1,\"116\":1}}],[\"换成对应的版本\",{\"1\":{\"108\":1}}],[\"修改\",{\"1\":{\"108\":1}}],[\"国内镜像\",{\"1\":{\"108\":1}}],[\"入门\",{\"0\":{\"107\":1}}],[\"入度为\",{\"1\":{\"91\":1}}],[\"因为好多理论根本用不上\",{\"1\":{\"118\":1}}],[\"因为它99\",{\"1\":{\"106\":1}}],[\"因此假设不成立\",{\"1\":{\"90\":1}}],[\"因此\",{\"1\":{\"42\":1,\"75\":2,\"77\":2,\"78\":1,\"89\":1}}],[\"k\",{\"1\":{\"118\":1}}],[\"kts\",{\"1\":{\"108\":1}}],[\"kernel\",{\"1\":{\"104\":1}}],[\"kcodetime\",{\"1\":{\"99\":1}}],[\"导论\",{\"0\":{\"104\":1}}],[\"导致插件无法正常退出\",{\"1\":{\"99\":1}}],[\"释放obj2的内部\",{\"1\":{\"101\":1}}],[\"释放obj1的内部\",{\"1\":{\"101\":1}}],[\"增加obj1的内部\",{\"1\":{\"101\":1}}],[\"输出\",{\"1\":{\"101\":3}}],[\"结构体内包含三个函数\",{\"1\":{\"101\":1}}],[\"结论与建议\",{\"0\":{\"31\":1}}],[\"++\",{\"1\":{\"101\":1}}],[\"+\",{\"1\":{\"101\":1}}],[\">\",{\"1\":{\"101\":1}}],[\"函数定义\",{\"1\":{\"116\":1}}],[\"函数用于释放\",{\"1\":{\"101\":1}}],[\"函数用于增加\",{\"1\":{\"101\":1}}],[\"函数捕获\",{\"1\":{\"101\":1}}],[\"函数取模\",{\"0\":{\"43\":1}}],[\"<<\",{\"1\":{\"101\":6}}],[\"<string>\",{\"1\":{\"101\":1}}],[\"<iostream>\",{\"1\":{\"101\":1}}],[\"闭包实现类\",{\"0\":{\"101\":1}}],[\"not\",{\"1\":{\"124\":1}}],[\"nucleus\",{\"1\":{\"104\":1}}],[\"new\",{\"1\":{\"101\":1}}],[\"newline\",{\"1\":{\"100\":1}}],[\"namespace\",{\"1\":{\"101\":1}}],[\"name\",{\"1\":{\"55\":1}}],[\"nav\",{\"1\":{\"55\":2}}],[\"8\",{\"1\":{\"100\":1,\"108\":1,\"116\":1}}],[\"=\",{\"1\":{\"100\":7,\"101\":6,\"106\":1}}],[\"running\",{\"1\":{\"104\":1}}],[\"root\",{\"1\":{\"100\":1}}],[\"repos\",{\"1\":{\"108\":1}}],[\"repository\",{\"1\":{\"108\":12}}],[\"repositoriesmode\",{\"1\":{\"108\":2}}],[\"repositories\",{\"1\":{\"108\":2}}],[\"releases\",{\"1\":{\"108\":2}}],[\"remove\",{\"1\":{\"101\":7}}],[\"return\",{\"1\":{\"43\":3,\"44\":4,\"101\":3}}],[\"react\",{\"1\":{\"30\":1,\"109\":1}}],[\"并不是说是没写过编译器就不是好程序员\",{\"1\":{\"117\":1}}],[\"并集成了\",{\"1\":{\"109\":1}}],[\"并添加以下内容\",{\"1\":{\"100\":1}}],[\"并且它用很少的代码就完成了一个功能相当完善的\",{\"1\":{\"119\":1}}],[\"并且最重要的是\",{\"1\":{\"118\":1}}],[\"并且如果要对多个模数取模\",{\"1\":{\"43\":1}}],[\"并且如果编译器没有任何优化\",{\"1\":{\"43\":1}}],[\"并且希望保持较低的学习成本\",{\"1\":{\"31\":1}}],[\"并且愿意投入时间学习dart语言和flutter框架\",{\"1\":{\"31\":1}}],[\"部分ide默认直接支持\",{\"1\":{\"100\":1}}],[\"安装editorconfig插件\",{\"1\":{\"100\":1}}],[\"安装了\",{\"1\":{\"51\":1}}],[\"文章\",{\"1\":{\"121\":1}}],[\"文件来实现风格统一\",{\"1\":{\"100\":1}}],[\"文字\",{\"1\":{\"24\":2}}],[\"文字段落\",{\"1\":{\"24\":24}}],[\"风格统一\",{\"0\":{\"100\":1}}],[\"关闭vscode\",{\"1\":{\"99\":1}}],[\"从而启动失败\",{\"1\":{\"99\":1}}],[\"从上述步骤中我们看出\",{\"1\":{\"88\":1}}],[\"会有许多相似的代码\",{\"1\":{\"120\":1}}],[\"会被强行终止\",{\"1\":{\"99\":1}}],[\"会导致activating\",{\"1\":{\"99\":1}}],[\"会和adb冲突\",{\"1\":{\"34\":1}}],[\"状自然数系统\",{\"1\":{\"95\":1}}],[\"到任意点的路径\",{\"1\":{\"91\":1}}],[\"点\",{\"1\":{\"91\":1}}],[\"所有点的出度为\",{\"1\":{\"91\":1}}],[\"所以我希望你有足够的耐心和时间来学习\",{\"1\":{\"120\":1}}],[\"所以本项目的主要目的\",{\"1\":{\"119\":1}}],[\"所以写得很乱\",{\"1\":{\"119\":1}}],[\"所以当学校开\",{\"1\":{\"118\":1}}],[\"所以\",{\"1\":{\"77\":1}}],[\"同时\",{\"1\":{\"116\":1}}],[\"同时为了解决多个模数的问题\",{\"1\":{\"44\":1}}],[\"同构\",{\"1\":{\"91\":1}}],[\"系统\",{\"0\":{\"91\":1}}],[\"图论\",{\"1\":{\"88\":1}}],[\"研究\",{\"1\":{\"88\":1}}],[\"少了任何一条都不足以构建出上述的自然数系统\",{\"1\":{\"88\":1}}],[\"ⅳ\",{\"0\":{\"95\":1},\"1\":{\"87\":1}}],[\"其中\",{\"1\":{\"87\":1}}],[\"其与自然数\",{\"1\":{\"74\":1}}],[\"或\",{\"1\":{\"87\":1,\"118\":1}}],[\"或是\",{\"1\":{\"51\":1}}],[\"可选\",{\"1\":{\"121\":1}}],[\"可惜的是它的代码初衷是代码最小化\",{\"1\":{\"119\":1}}],[\"可以使用\",{\"1\":{\"100\":1}}],[\"可以构造出分段状自然数系统\",{\"1\":{\"96\":1}}],[\"可以构造出\",{\"1\":{\"95\":1}}],[\"可以构造出环状自然数系统\",{\"1\":{\"94\":1}}],[\"可以构造出菊花图自然数系统\",{\"1\":{\"93\":1}}],[\"可以构造出空集自然数系统\",{\"1\":{\"92\":1}}],[\"可以与多种前端开发工具和框架集成\",{\"1\":{\"30\":1}}],[\"可知\",{\"1\":{\"87\":1}}],[\"假设\",{\"1\":{\"87\":1,\"90\":1}}],[\"假设存在一个算数系统的模型满足\",{\"1\":{\"61\":1}}],[\"采用反证法\",{\"1\":{\"87\":1,\"90\":1}}],[\"证明了乘法运算规则的交换律之后\",{\"1\":{\"84\":1}}],[\"证明了加法运算规则的交换律之后\",{\"1\":{\"68\":1}}],[\"存在从\",{\"1\":{\"91\":1}}],[\"存在点\",{\"1\":{\"91\":1}}],[\"存在\",{\"1\":{\"81\":1}}],[\"乘法消去保序性\",{\"0\":{\"90\":1}}],[\"乘法消去律\",{\"0\":{\"87\":1},\"1\":{\"87\":1}}],[\"乘法保序性\",{\"0\":{\"89\":1}}],[\"乘法结合律\",{\"0\":{\"86\":1}}],[\"乘法结果的唯一性\",{\"0\":{\"82\":1}}],[\"乘法结果的存在性\",{\"0\":{\"81\":1}}],[\"乘法分配律\",{\"0\":{\"85\":1}}],[\"乘法交换律\",{\"0\":{\"84\":1}}],[\"乘法的性质\",{\"0\":{\"83\":1}}],[\"乘法的定义\",{\"0\":{\"80\":1}}],[\"两个自然数\",{\"1\":{\"77\":1}}],[\"任意点的入度小于等于\",{\"1\":{\"91\":1}}],[\"任意非零自然数\",{\"1\":{\"87\":1}}],[\"任意两个自然数\",{\"1\":{\"77\":1}}],[\"任何自然数的后继存在且唯一\",{\"1\":{\"62\":1}}],[\"序的完全性\",{\"0\":{\"77\":1}}],[\"序的传递性\",{\"0\":{\"76\":1}}],[\"序的反对称性\",{\"0\":{\"75\":1}}],[\"序的定义\",{\"0\":{\"72\":1}}],[\"ⅲ\",{\"0\":{\"94\":1},\"1\":{\"74\":1,\"87\":3}}],[\"当时很火的\",{\"1\":{\"119\":1}}],[\"当然\",{\"1\":{\"117\":1}}],[\"当\",{\"1\":{\"74\":1,\"77\":2}}],[\"当且仅当\",{\"1\":{\"72\":1}}],[\"当且仅当存在自然数\",{\"1\":{\"72\":1}}],[\"正自然数与自然数相加为正自然数\",{\"1\":{\"74\":2}}],[\"正自然数的性质\",{\"0\":{\"74\":1}}],[\"正自然数\",{\"0\":{\"73\":1}}],[\"传递性和完全性\",{\"1\":{\"72\":1}}],[\"满足\",{\"1\":{\"72\":1,\"87\":1,\"90\":1}}],[\"定义乘法的运算规则\",{\"1\":{\"80\":1}}],[\"定义正自然数为非\",{\"1\":{\"73\":1}}],[\"定义\",{\"1\":{\"72\":1}}],[\"定义自然数的序即定义\",{\"1\":{\"72\":1}}],[\"定义加法的运算规则\",{\"1\":{\"64\":1}}],[\"时由乘法运算规则\",{\"1\":{\"84\":1}}],[\"时\",{\"1\":{\"68\":1,\"69\":1,\"74\":1,\"84\":1,\"85\":1,\"86\":1,\"112\":1}}],[\"时有\",{\"1\":{\"68\":2,\"69\":1,\"70\":4,\"77\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":2}}],[\"首先\",{\"1\":{\"74\":1,\"84\":1}}],[\"首先当\",{\"1\":{\"69\":1,\"70\":2,\"84\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"首先由加法运算规则\",{\"1\":{\"68\":1}}],[\"首先有\",{\"1\":{\"68\":2,\"84\":1}}],[\"将其称为新的乘法运算规则\",{\"1\":{\"84\":1}}],[\"将其称为新的加法运算规则\",{\"1\":{\"68\":1}}],[\"将模数直接包含在类型中\",{\"1\":{\"44\":1}}],[\"根据文法来生成编译器\",{\"1\":{\"118\":1}}],[\"根据乘法消去律有\",{\"1\":{\"90\":1}}],[\"根据乘法运算规则\",{\"1\":{\"81\":1,\"82\":1}}],[\"根据序的反对称性有\",{\"1\":{\"90\":1}}],[\"根据加法结合律得出\",{\"1\":{\"76\":1}}],[\"根据加法结果的存在性得到\",{\"1\":{\"76\":1}}],[\"根据加法运算规则\",{\"1\":{\"65\":1,\"66\":1}}],[\"根据正自然数的性质得出\",{\"1\":{\"75\":1}}],[\"根据\",{\"1\":{\"68\":3,\"69\":1,\"70\":2,\"74\":2,\"84\":3,\"85\":1,\"86\":1,\"87\":1}}],[\"考虑从乘法运算的定义下手\",{\"1\":{\"84\":1}}],[\"考虑从加法运算的定义下手\",{\"1\":{\"68\":1}}],[\"考虑到函数取模的优点\",{\"1\":{\"44\":1}}],[\"直接证明比较困难\",{\"1\":{\"68\":1,\"84\":1}}],[\"直接取模\",{\"0\":{\"42\":1}}],[\"唯一\",{\"1\":{\"66\":4,\"82\":4}}],[\"唯一的缺点就是类型名难写\",{\"1\":{\"44\":1}}],[\"得知\",{\"1\":{\"68\":3,\"69\":1,\"70\":2,\"84\":3,\"85\":1,\"86\":1,\"87\":1}}],[\"得出对于任意自然数\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"得证\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"再根据\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"成立\",{\"1\":{\"65\":1,\"66\":1,\"68\":3,\"69\":1,\"70\":3,\"81\":1,\"82\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":2}}],[\"ⅴ\",{\"0\":{\"96\":1},\"1\":{\"65\":1,\"66\":1,\"68\":3,\"69\":1,\"70\":2,\"74\":1,\"77\":1,\"81\":1,\"82\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":1}}],[\"也许现在还想学习编译原理的人只可能是因为兴趣了\",{\"1\":{\"117\":1}}],[\"也可另外指定\",{\"1\":{\"113\":1}}],[\"也唯一\",{\"1\":{\"66\":1,\"82\":1}}],[\"也是自然数\",{\"1\":{\"65\":1,\"81\":1}}],[\"也就是说\",{\"1\":{\"64\":1,\"80\":1}}],[\"综上所述\",{\"1\":{\"65\":1,\"66\":1,\"70\":1,\"81\":1,\"82\":1,\"87\":1}}],[\"进而当\",{\"1\":{\"68\":3,\"69\":1,\"70\":2,\"74\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":1}}],[\"进而\",{\"1\":{\"66\":1,\"74\":1,\"76\":1,\"78\":1,\"82\":1,\"89\":1}}],[\"进而有\",{\"1\":{\"65\":1,\"81\":1}}],[\"进有\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"ⅱ\",{\"0\":{\"93\":1},\"1\":{\"65\":2,\"66\":2,\"68\":1,\"81\":1,\"82\":1,\"84\":1,\"87\":1}}],[\"有一次在\",{\"1\":{\"119\":1}}],[\"有任意两个自然数\",{\"1\":{\"77\":1}}],[\"有\",{\"1\":{\"65\":4,\"66\":4,\"68\":3,\"69\":2,\"70\":1,\"75\":2,\"76\":2,\"78\":1,\"81\":3,\"82\":3,\"84\":3,\"85\":1,\"86\":2,\"87\":3,\"89\":1,\"90\":1}}],[\"有大量的题目要求对一些数字取模\",{\"1\":{\"39\":1}}],[\"ⅰ\",{\"0\":{\"92\":1},\"1\":{\"65\":1,\"66\":1,\"68\":1,\"81\":1,\"82\":1,\"84\":1}}],[\"记录\",{\"0\":{\"105\":1}}],[\"记\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"都有唯一的数\",{\"1\":{\"87\":1}}],[\"都有序关系\",{\"1\":{\"77\":2}}],[\"都可以进行乘法运算\",{\"1\":{\"80\":1}}],[\"都可以进行加法运算\",{\"1\":{\"64\":1}}],[\"都是唯一的\",{\"1\":{\"66\":1,\"82\":1}}],[\"都是自然数\",{\"1\":{\"64\":1,\"65\":1,\"80\":1,\"81\":1}}],[\"若deactivate\",{\"1\":{\"99\":1}}],[\"若activate\",{\"1\":{\"99\":1}}],[\"若去除\",{\"1\":{\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1}}],[\"若有\",{\"1\":{\"87\":1}}],[\"若\",{\"1\":{\"64\":2,\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"80\":2,\"81\":1,\"82\":1,\"89\":1,\"90\":1}}],[\"加法保序性\",{\"0\":{\"78\":1}}],[\"加法消去律\",{\"0\":{\"70\":1},\"1\":{\"70\":1}}],[\"加法结合律\",{\"0\":{\"69\":1}}],[\"加法结果的唯一性\",{\"0\":{\"66\":1}}],[\"加法结果的存在性\",{\"0\":{\"65\":1}}],[\"加法交换律\",{\"0\":{\"68\":1}}],[\"加法的性质\",{\"0\":{\"67\":1}}],[\"加法的定义\",{\"0\":{\"64\":1}}],[\"加密\",{\"2\":{\"26\":1}}],[\"对照\",{\"1\":{\"121\":1}}],[\"对于\",{\"1\":{\"77\":1}}],[\"对于任意自然数\",{\"1\":{\"62\":1,\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"对任意自然数\",{\"1\":{\"68\":3,\"69\":1,\"70\":3,\"84\":3,\"85\":1,\"86\":1,\"87\":2}}],[\"对比维度\",{\"1\":{\"30\":1}}],[\"则对连通性无要求\",{\"1\":{\"96\":1}}],[\"则对一个数可以是多个数的后继\",{\"1\":{\"95\":1}}],[\"则对\",{\"1\":{\"94\":1}}],[\"则对点的出度无规定\",{\"1\":{\"93\":1}}],[\"则允许不存在\",{\"1\":{\"92\":1}}],[\"则存在正自然数\",{\"1\":{\"90\":1}}],[\"则由加法运算规则\",{\"1\":{\"87\":1}}],[\"则\",{\"1\":{\"64\":2,\"65\":1,\"66\":1,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"80\":2,\"81\":1,\"82\":1,\"89\":1,\"90\":1}}],[\"则有\",{\"1\":{\"62\":1,\"87\":1}}],[\"则需要写多个函数\",{\"1\":{\"43\":1}}],[\"为什么要学编译原理\",{\"0\":{\"117\":1}}],[\"为自然数时\",{\"1\":{\"77\":1}}],[\"为自然数且\",{\"1\":{\"69\":1,\"70\":2,\"74\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"为正自然数时有\",{\"1\":{\"74\":1}}],[\"为正自然数\",{\"1\":{\"74\":4}}],[\"为真命题可以推出\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"为真命题可以推理出\",{\"1\":{\"62\":1}}],[\"为真命题\",{\"1\":{\"62\":2,\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"为例介绍几种写法\",{\"1\":{\"41\":1}}],[\"且乘法运算的结果存在且唯一之后\",{\"1\":{\"83\":1}}],[\"且\",{\"1\":{\"72\":1,\"75\":1,\"76\":1}}],[\"且加法运算的结果存在且唯一之后\",{\"1\":{\"67\":1}}],[\"且满足两个条件\",{\"1\":{\"62\":1}}],[\"且需要导出为pptx推荐\",{\"1\":{\"50\":1}}],[\"是一个开源\",{\"1\":{\"109\":1}}],[\"是\",{\"1\":{\"87\":1}}],[\"是唯一的\",{\"1\":{\"66\":2,\"82\":2}}],[\"是否唯一\",{\"1\":{\"66\":1,\"82\":1}}],[\"是否存在\",{\"1\":{\"65\":1,\"81\":1}}],[\"是否是自然数\",{\"1\":{\"65\":1,\"81\":1}}],[\"是任意自然数\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"是真命题\",{\"1\":{\"62\":1}}],[\"是关于自然数\",{\"1\":{\"62\":1}}],[\"是自然数且\",{\"1\":{\"66\":1,\"68\":3,\"84\":3}}],[\"是自然数\",{\"1\":{\"62\":1,\"64\":1,\"65\":7,\"66\":2,\"76\":1,\"80\":1,\"81\":6,\"82\":2}}],[\"下载错误查看\",{\"1\":{\"108\":1}}],[\"下面我们试着通过删除公理的方法来寻找反例\",{\"1\":{\"91\":1}}],[\"下面我们需要证明对于任意两个自然数\",{\"1\":{\"64\":1,\"80\":1}}],[\"下面我将阐述为什么每条公理都是必须的\",{\"1\":{\"88\":1}}],[\"下面证明乘法消去律\",{\"1\":{\"87\":1}}],[\"下面证明乘法结合律\",{\"1\":{\"86\":1}}],[\"下面证明乘法分配律\",{\"1\":{\"85\":1}}],[\"下面证明乘法交换律\",{\"1\":{\"84\":1}}],[\"下面证明加法消去律\",{\"1\":{\"70\":1}}],[\"下面证明加法结合律\",{\"1\":{\"69\":1}}],[\"下面证明加法交换律\",{\"1\":{\"68\":1}}],[\"下面以式子\",{\"1\":{\"41\":1}}],[\"下文用\",{\"1\":{\"62\":1}}],[\"共有五条\",{\"1\":{\"62\":1}}],[\"先介绍\",{\"1\":{\"62\":1}}],[\"即能自己编译自己\",{\"1\":{\"119\":1}}],[\"即构造一个工具\",{\"1\":{\"118\":1}}],[\"即证明了乘法消去的保序性\",{\"1\":{\"90\":1}}],[\"即乘法结合律成立\",{\"1\":{\"86\":1}}],[\"即乘法分配律成立\",{\"1\":{\"85\":1}}],[\"即乘法交换律成立\",{\"1\":{\"84\":1}}],[\"即先证明乘法的两条运算规则符合交换律\",{\"1\":{\"84\":1}}],[\"即先证明加法的两条运算规则符合交换律\",{\"1\":{\"68\":1}}],[\"即任意两个自然数都可以进行乘法运算\",{\"1\":{\"83\":1}}],[\"即任意两个自然数都可以进行加法运算\",{\"1\":{\"67\":1}}],[\"即对于正自然数\",{\"1\":{\"74\":1}}],[\"即对于任意自然数\",{\"1\":{\"68\":1,\"69\":1,\"70\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1}}],[\"即加法结合律成立\",{\"1\":{\"69\":1}}],[\"即加法交换律成立\",{\"1\":{\"68\":1}}],[\"即由\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"即\",{\"1\":{\"64\":1,\"65\":3,\"66\":3,\"70\":2,\"80\":1,\"81\":3,\"82\":3,\"87\":2,\"91\":5}}],[\"即假定\",{\"1\":{\"61\":1}}],[\"即写成\",{\"1\":{\"44\":1}}],[\"公理系统\",{\"2\":{\"98\":1,\"111\":1}}],[\"公理系统内出发\",{\"1\":{\"88\":1}}],[\"公理自然不能从\",{\"1\":{\"88\":1}}],[\"公理自身任有待研究\",{\"1\":{\"88\":1}}],[\"公理每一条公理都被使用过\",{\"1\":{\"88\":1}}],[\"公理构建出了一个自然数代数系统\",{\"1\":{\"88\":1}}],[\"公理的合理性\",{\"0\":{\"88\":1}}],[\"公理相容\",{\"1\":{\"61\":1}}],[\"公理\",{\"0\":{\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1},\"1\":{\"61\":1,\"62\":1,\"65\":2,\"66\":2,\"68\":3,\"69\":1,\"70\":2,\"74\":2,\"77\":1,\"81\":1,\"82\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":4}}],[\"自然数与有向图\",{\"1\":{\"91\":1}}],[\"自然数中最重要的运算当然是加法\",{\"1\":{\"63\":1}}],[\"自然数的乘法也十分重要\",{\"1\":{\"79\":1}}],[\"自然数的乘法运算\",{\"0\":{\"79\":1}}],[\"自然数的序是全序关系\",{\"1\":{\"72\":1}}],[\"自然数的序为两个自然数的关系\",{\"1\":{\"71\":1}}],[\"自然数的序\",{\"0\":{\"71\":1}}],[\"自然数的加法运算\",{\"0\":{\"63\":1}}],[\"自然数的定义\",{\"0\":{\"62\":1}}],[\"自然数的定义则是构建此算术公理系统的第一步\",{\"1\":{\"61\":1}}],[\"自然数这个新的数学对象因我们的假设而确立\",{\"1\":{\"62\":1}}],[\"自然数\",{\"0\":{\"61\":1},\"1\":{\"73\":1}}],[\"自包含的ui框架\",{\"1\":{\"30\":1}}],[\"0\",{\"0\":{\"116\":1},\"1\":{\"60\":1,\"101\":1,\"116\":2}}],[\"0<=x\",{\"1\":{\"44\":1}}],[\"lemon\",{\"1\":{\"121\":1}}],[\"let\",{\"1\":{\"121\":1}}],[\"lex\",{\"1\":{\"118\":2}}],[\"lalr\",{\"1\":{\"118\":1}}],[\"ll\",{\"1\":{\"118\":1}}],[\"lf\",{\"1\":{\"100\":1}}],[\"lotabout\",{\"1\":{\"60\":1}}],[\"line\",{\"1\":{\"100\":1}}],[\"linux\",{\"1\":{\"57\":1}}],[\"list\",{\"1\":{\"54\":1}}],[\"参考资料\",{\"0\":{\"60\":1,\"121\":1}}],[\"参考项目\",{\"0\":{\"48\":1}}],[\"左侧的nav就是\",{\"1\":{\"55\":1}}],[\"注意\",{\"1\":{\"55\":1,\"112\":1}}],[\"注意事项\",{\"0\":{\"34\":1}}],[\"多个\",{\"1\":{\"55\":1}}],[\"多个router\",{\"0\":{\"55\":1}}],[\"单个\",{\"1\":{\"55\":1}}],[\"5\",{\"0\":{\"54\":1},\"1\":{\"54\":1,\"116\":1}}],[\"55718\",{\"1\":{\"51\":1}}],[\"questions\",{\"0\":{\"53\":1}}],[\"qt\",{\"0\":{\"52\":1,\"53\":1,\"54\":2},\"1\":{\"54\":2}}],[\"页面\",{\"1\":{\"51\":1}}],[\"才能正常看到渲染后的\",{\"1\":{\"51\":1}}],[\"预览功能\",{\"1\":{\"51\":1}}],[\"卸载\",{\"1\":{\"51\":1}}],[\"禁用\",{\"1\":{\"51\":1}}],[\"渲染插件\",{\"1\":{\"51\":1}}],[\"⚠️注意事项\",{\"1\":{\"51\":1}}],[\"google\",{\"1\":{\"108\":4}}],[\"gradlepluginportal\",{\"1\":{\"108\":1}}],[\"gradle\",{\"0\":{\"108\":1},\"1\":{\"108\":6}}],[\"get\",{\"1\":{\"99\":1}}],[\"generator\",{\"1\":{\"57\":1,\"121\":1}}],[\"generate\",{\"0\":{\"57\":1}}],[\"gem\",{\"1\":{\"57\":1}}],[\"game\",{\"0\":{\"56\":1},\"1\":{\"56\":1}}],[\"guide\",{\"1\":{\"50\":1}}],[\"github\",{\"0\":{\"37\":1,\"58\":1,\"113\":1},\"1\":{\"57\":1,\"119\":1}}],[\"缺点\",{\"0\":{\"50\":1,\"51\":1}}],[\"复杂演示推荐\",{\"1\":{\"49\":1}}],[\"运算更快\",{\"1\":{\"44\":1}}],[\"other\",{\"1\":{\"113\":1}}],[\"or\",{\"1\":{\"104\":1}}],[\"on\",{\"1\":{\"104\":1,\"108\":1}}],[\"one\",{\"1\":{\"104\":1}}],[\"obj2\",{\"1\":{\"101\":3}}],[\"obj1\",{\"1\":{\"101\":5}}],[\"of\",{\"1\":{\"56\":1,\"100\":1,\"122\":1,\"123\":1}}],[\"open\",{\"1\":{\"54\":1}}],[\"operating\",{\"0\":{\"47\":1}}],[\"operator\",{\"1\":{\"44\":3}}],[\"operator+\",{\"1\":{\"44\":1}}],[\"os\",{\"1\":{\"48\":1,\"104\":1}}],[\"oi\",{\"0\":{\"39\":1,\"125\":1},\"1\":{\"39\":1},\"2\":{\"45\":1,\"102\":1}}],[\"vars\",{\"1\":{\"113\":1}}],[\"var\",{\"1\":{\"113\":1}}],[\"version\",{\"1\":{\"108\":1}}],[\"visualstudio\",{\"1\":{\"99\":1}}],[\"views\",{\"1\":{\"55\":2}}],[\"view\",{\"0\":{\"55\":1}}],[\"vue\",{\"0\":{\"126\":1},\"1\":{\"55\":2,\"109\":1}}],[\"vue等\",{\"1\":{\"30\":1}}],[\"vscode中可以使用\",{\"1\":{\"112\":1}}],[\"vscode\",{\"0\":{\"99\":1},\"1\":{\"105\":1}}],[\"vs\",{\"1\":{\"51\":2}}],[\"void\",{\"1\":{\"44\":1}}],[\"v+p\",{\"1\":{\"44\":1}}],[\"v+a\",{\"1\":{\"44\":3}}],[\"v<a\",{\"1\":{\"44\":1}}],[\"v>=p\",{\"1\":{\"44\":1}}],[\"v=x\",{\"1\":{\"44\":1}}],[\"v\",{\"1\":{\"44\":10}}],[\"泛型编程\",{\"0\":{\"44\":1}}],[\"泛型与\",{\"0\":{\"39\":1}}],[\"显得代码冗长\",{\"1\":{\"43\":1}}],[\"现在不存在这种情况了\",{\"1\":{\"43\":1}}],[\"zip\",{\"1\":{\"108\":1}}],[\"z\",{\"1\":{\"43\":1,\"44\":1}}],[\"yacc\",{\"1\":{\"118\":2}}],[\"your\",{\"1\":{\"99\":1}}],[\"you\",{\"1\":{\"54\":1}}],[\"yiyiya\",{\"1\":{\"48\":1}}],[\"y\",{\"1\":{\"43\":1,\"44\":1}}],[\"x的内存\",{\"1\":{\"101\":2}}],[\"x的值\",{\"1\":{\"101\":3}}],[\"x指向的内存\",{\"1\":{\"101\":1}}],[\"xv6\",{\"1\":{\"48\":1}}],[\"x<p\",{\"1\":{\"44\":1}}],[\"x\",{\"1\":{\"43\":1,\"44\":2,\"101\":14}}],[\"x+y+z\",{\"1\":{\"44\":1}}],[\"x+y\",{\"1\":{\"42\":1}}],[\"blog\",{\"1\":{\"123\":1}}],[\"bison\",{\"1\":{\"118\":1,\"119\":1}}],[\"bnf什么的\",{\"1\":{\"118\":1}}],[\"build\",{\"1\":{\"112\":2,\"121\":1}}],[\"bug\",{\"0\":{\"105\":1}}],[\"button\",{\"1\":{\"54\":1}}],[\"being\",{\"1\":{\"104\":1}}],[\"bepinex\",{\"1\":{\"56\":1}}],[\"b+p\",{\"1\":{\"43\":1}}],[\"b\",{\"1\":{\"43\":5}}],[\"第一篇完全没有正题相关的内容也是希望你能有所心理准备再开始学习\",{\"1\":{\"120\":1}}],[\"第一种\",{\"0\":{\"42\":1}}],[\"第二种\",{\"0\":{\"43\":1}}],[\"不用外部工具\",{\"1\":{\"119\":1}}],[\"不用操心运算时忘记取模\",{\"1\":{\"44\":1}}],[\"不会触发ondidclosetextdocument事件\",{\"1\":{\"99\":1}}],[\"不妨记作\",{\"1\":{\"87\":1}}],[\"不妨设\",{\"1\":{\"87\":1}}],[\"不同的自然数后继不同\",{\"1\":{\"62\":1}}],[\"不是任何自然数的后继\",{\"1\":{\"62\":1}}],[\"不支持动画\",{\"1\":{\"51\":1}}],[\"不支持导出pptx\",{\"1\":{\"50\":1}}],[\"不推荐运用这种方法\",{\"1\":{\"42\":1}}],[\"不易检验\",{\"1\":{\"42\":1,\"43\":1}}],[\"不方便输出结果\",{\"1\":{\"40\":1}}],[\"括号太多\",{\"1\":{\"42\":1}}],[\"忘记取模\",{\"1\":{\"42\":1}}],[\"二是容易中间运算时搞错运算顺序\",{\"1\":{\"42\":1}}],[\"一个语法分析器生成器\",{\"1\":{\"121\":1}}],[\"一个全栈工程师\",{\"1\":{\"10\":1}}],[\"一般的编译器相关的教程要么就十分简单\",{\"1\":{\"119\":1}}],[\"一般编译原理的课程会说一些\",{\"1\":{\"118\":1}}],[\"一方面没有很好的测试用例\",{\"1\":{\"120\":1}}],[\"一方面想了解它的工作原理\",{\"1\":{\"117\":1}}],[\"一方面减少了心智负担\",{\"1\":{\"44\":1}}],[\"一是容易忘记大括号\",{\"1\":{\"42\":1}}],[\"但确为自己重写\",{\"1\":{\"119\":1}}],[\"但随着计算机性能的提升\",{\"1\":{\"117\":1}}],[\"但\",{\"1\":{\"88\":1}}],[\"但是两节课后我就放弃了\",{\"1\":{\"118\":1}}],[\"但是模数个数少的时候可以缩写\",{\"1\":{\"44\":1}}],[\"但是\",{\"1\":{\"43\":1}}],[\"但是这种方法有着严重的缺陷\",{\"1\":{\"42\":1}}],[\"但学习曲线相对较高\",{\"1\":{\"31\":1}}],[\"ui\",{\"1\":{\"109\":1}}],[\"url\",{\"1\":{\"108\":2}}],[\"url=uri\",{\"1\":{\"108\":12}}],[\"using\",{\"1\":{\"101\":1}}],[\"usage\",{\"1\":{\"57\":1}}],[\"utf\",{\"1\":{\"100\":1}}],[\"undefined\",{\"1\":{\"99\":1}}],[\"unityexplorer\",{\"1\":{\"56\":1}}],[\"u\",{\"1\":{\"42\":1,\"43\":1,\"44\":2}}],[\"清晰明了\",{\"1\":{\"42\":1}}],[\"简单ppt\",{\"1\":{\"50\":1}}],[\"简单直接\",{\"1\":{\"42\":1}}],[\"简化更新流程\",{\"1\":{\"30\":1}}],[\"取模运算就成为了编程中不可缺少的一部分\",{\"1\":{\"41\":1}}],[\"过去的做法\",{\"0\":{\"41\":1}}],[\"类的多项式题目\",{\"1\":{\"40\":1}}],[\"例如添加新插件\",{\"1\":{\"112\":1}}],[\"例如\",{\"1\":{\"112\":1}}],[\"例如很多期望概率题\",{\"1\":{\"40\":1}}],[\"例如许多计数\",{\"1\":{\"40\":1}}],[\"出题人不愿意写一个确定精度的\",{\"1\":{\"40\":1}}],[\"distributionurl=https\",{\"1\":{\"108\":1}}],[\"design\",{\"0\":{\"122\":1}}],[\"deploy\",{\"1\":{\"112\":1}}],[\"dependencyresolutionmanagement\",{\"1\":{\"108\":1}}],[\"decltype\",{\"1\":{\"101\":3}}],[\"delete\",{\"1\":{\"101\":1}}],[\"devtool\",{\"1\":{\"116\":1}}],[\"dev\",{\"1\":{\"50\":1}}],[\"dnspy\",{\"1\":{\"56\":1}}],[\"dp\",{\"1\":{\"40\":1}}],[\"dart\",{\"1\":{\"30\":1,\"107\":1}}],[\"这里可以加入你对原文的理解\",{\"1\":{\"121\":1}}],[\"这点复杂度还是不算什么的\",{\"1\":{\"118\":1}}],[\"这些理论试图教会我们如何用通用的方法来自动解决问题\",{\"1\":{\"118\":1}}],[\"这些题目要么是因为答案太大\",{\"1\":{\"40\":1}}],[\"这其中最主要的原因是\",{\"1\":{\"118\":1}}],[\"这一系列教程将带你从头编写一个\",{\"1\":{\"116\":1}}],[\"这个图满足如下性质\",{\"1\":{\"91\":1}}],[\"这与\",{\"1\":{\"90\":1}}],[\"这究竟是为什么呢\",{\"1\":{\"88\":1}}],[\"这违背了\",{\"1\":{\"87\":1}}],[\"这样就定义了自然数\",{\"1\":{\"62\":1}}],[\"这样就解决了类型名长的缺点\",{\"1\":{\"44\":1}}],[\"这样使用的时候\",{\"1\":{\"44\":1}}],[\"这种写法的式子依旧太长\",{\"1\":{\"43\":1}}],[\"这种方法有效地解决了直接取模的忘记取模的漏洞\",{\"1\":{\"43\":1}}],[\"这种方法是直接取模\",{\"1\":{\"42\":1}}],[\"这便是本文写作的背景\",{\"1\":{\"39\":1}}],[\"背景介绍\",{\"0\":{\"40\":1}}],[\"中间代码的表示\",{\"1\":{\"118\":1}}],[\"中\",{\"1\":{\"39\":1}}],[\"在写编译器的时候会遇到两个主要问题\",{\"1\":{\"120\":1}}],[\"在我看来\",{\"1\":{\"117\":1}}],[\"在开始进入正题之前\",{\"1\":{\"116\":1}}],[\"在项目根目录下创建\",{\"1\":{\"100\":1}}],[\"在明确证明了自然数乘法运算的良好性质\",{\"1\":{\"83\":1}}],[\"在明确证明了自然数加法运算的良好性质\",{\"1\":{\"67\":1}}],[\"在考察序的性质之前\",{\"1\":{\"73\":1}}],[\"在此承认次假设的基础之上\",{\"1\":{\"61\":1}}],[\"在这种要求之下\",{\"1\":{\"41\":1}}],[\"在\",{\"1\":{\"39\":1}}],[\"mirrors\",{\"1\":{\"108\":1}}],[\"me\",{\"1\":{\"60\":1}}],[\"md\",{\"0\":{\"57\":1}}],[\"math\",{\"0\":{\"127\":1}}],[\"mavencentral\",{\"1\":{\"108\":2}}],[\"maven\",{\"1\":{\"108\":26}}],[\"main\",{\"1\":{\"101\":1}}],[\"maintenance\",{\"0\":{\"54\":1},\"1\":{\"54\":1}}],[\"markdown\",{\"1\":{\"51\":3}}],[\"manager\",{\"0\":{\"38\":1}}],[\"manually\",{\"1\":{\"16\":1}}],[\"mul\",{\"1\":{\"43\":1}}],[\"modint1\",{\"1\":{\"44\":1}}],[\"modint<int\",{\"1\":{\"44\":3}}],[\"modint\",{\"0\":{\"39\":1},\"1\":{\"44\":9},\"2\":{\"46\":1,\"103\":1}}],[\"的代码完全是手工实现的\",{\"1\":{\"119\":1}}],[\"的代码\",{\"1\":{\"118\":1}}],[\"的学生顶多学到语法分析就结束了\",{\"1\":{\"118\":1}}],[\"的课程后\",{\"1\":{\"118\":1}}],[\"的向后兼容cordova\",{\"1\":{\"106\":1}}],[\"的使用\",{\"0\":{\"106\":1}}],[\"的入度无规定\",{\"1\":{\"94\":1}}],[\"的假设矛盾\",{\"1\":{\"90\":1}}],[\"的和\",{\"1\":{\"74\":1}}],[\"的结果是否唯一\",{\"1\":{\"66\":1,\"82\":1}}],[\"的任意性\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"的性质和\",{\"1\":{\"65\":1,\"66\":1,\"81\":1,\"82\":1}}],[\"的运算结果为\",{\"1\":{\"64\":1,\"80\":1}}],[\"的一个命题\",{\"1\":{\"62\":1}}],[\"的后继\",{\"1\":{\"62\":1,\"87\":1}}],[\"的话\",{\"1\":{\"43\":1}}],[\"的\",{\"0\":{\"38\":1}}],[\"的对比\",{\"0\":{\"30\":1}}],[\"``\",{\"1\":{\"37\":1}}],[\"found\",{\"1\":{\"124\":1}}],[\"flex\",{\"1\":{\"118\":1,\"119\":1}}],[\"flutter是一个自包含的ui框架\",{\"1\":{\"31\":1}}],[\"flutter和capacitor服务于不同的开发需求和场景\",{\"1\":{\"31\":1}}],[\"flutter\",{\"0\":{\"30\":1,\"107\":1},\"1\":{\"30\":1}}],[\"fail\",{\"1\":{\"108\":1}}],[\"failed\",{\"1\":{\"99\":1}}],[\"fun\",{\"1\":{\"101\":3}}],[\"function执行时间超过5s\",{\"1\":{\"99\":1}}],[\"function执行时间过长\",{\"1\":{\"99\":1}}],[\"future\",{\"1\":{\"37\":1}}],[\"file\",{\"1\":{\"113\":3}}],[\"filter\",{\"1\":{\"54\":1}}],[\"final\",{\"1\":{\"100\":1}}],[\"first\",{\"1\":{\"99\":1}}],[\"from\",{\"1\":{\"55\":2}}],[\"jcenter\",{\"1\":{\"108\":2}}],[\"jitpack\",{\"1\":{\"108\":2}}],[\"js中进行配置\",{\"1\":{\"55\":1}}],[\"judge\",{\"1\":{\"40\":1}}],[\"jenkins\",{\"1\":{\"37\":1}}],[\"jar\",{\"1\":{\"37\":1}}],[\"java\",{\"0\":{\"38\":1},\"1\":{\"37\":2}}],[\"javascript\",{\"1\":{\"30\":1,\"109\":1}}],[\"用什么有穷自动机和无穷自动机\",{\"1\":{\"118\":1}}],[\"用于使用\",{\"1\":{\"109\":1}}],[\"用于将web应用转化为原生应用\",{\"1\":{\"30\":1}}],[\"用以输出当前\",{\"1\":{\"101\":1}}],[\"用图论阐述\",{\"0\":{\"91\":1}}],[\"用android\",{\"1\":{\"34\":1}}],[\"相信当你真正完成的时候会像我一样\",{\"1\":{\"120\":1}}],[\"相反\",{\"1\":{\"31\":1}}],[\"相对较高\",{\"1\":{\"30\":1}}],[\"如实现四则运算\",{\"1\":{\"119\":1}}],[\"如\",{\"1\":{\"118\":1,\"119\":1}}],[\"如何表示语法\",{\"1\":{\"118\":1}}],[\"如何实现风格统一\",{\"1\":{\"100\":1}}],[\"如有侵权\",{\"1\":{\"116\":1}}],[\"如果要我说计算机专业最重要的三门课\",{\"1\":{\"117\":1}}],[\"如果你尝试阅读\",{\"1\":{\"118\":1}}],[\"如果你急切地想进入正篇\",{\"1\":{\"116\":1}}],[\"如果你的\",{\"1\":{\"51\":1}}],[\"如果您是一个web开发者\",{\"1\":{\"31\":1}}],[\"如果您是一个寻求高性能和丰富ui的移动应用开发者\",{\"1\":{\"31\":1}}],[\"如webpack\",{\"1\":{\"30\":1}}],[\"它最让我震惊的是能够自举\",{\"1\":{\"119\":1}}],[\"它们过于强大\",{\"1\":{\"118\":1}}],[\"它们有很强的实际意义\",{\"1\":{\"118\":1}}],[\"它应该具有反对称性\",{\"1\":{\"72\":1}}],[\"它的学习曲线较低\",{\"1\":{\"31\":1}}],[\"它提供了丰富的组件和工具\",{\"1\":{\"31\":1}}],[\"尤其是游戏和高性能移动应用\",{\"1\":{\"31\":1}}],[\"parser\",{\"1\":{\"121\":1}}],[\"path\",{\"1\":{\"55\":1}}],[\"ps\",{\"1\":{\"120\":1}}],[\"publisher\",{\"1\":{\"99\":1}}],[\"public\",{\"1\":{\"44\":1,\"108\":2}}],[\"peano\",{\"0\":{\"88\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1},\"1\":{\"61\":2,\"62\":1,\"65\":2,\"66\":2,\"68\":3,\"69\":1,\"70\":2,\"74\":2,\"77\":1,\"81\":1,\"82\":1,\"84\":3,\"85\":1,\"86\":1,\"87\":4,\"88\":5}}],[\"pluginmanagement\",{\"1\":{\"108\":1}}],[\"plugins\",{\"1\":{\"106\":1}}],[\"plugin\",{\"0\":{\"56\":1,\"99\":1},\"1\":{\"56\":1,\"108\":3}}],[\"ppt\",{\"1\":{\"51\":1}}],[\"properties\",{\"1\":{\"108\":1}}],[\"project\",{\"1\":{\"108\":1}}],[\"programs\",{\"1\":{\"104\":1}}],[\"program\",{\"1\":{\"104\":1}}],[\"preview\",{\"1\":{\"51\":1}}],[\"private\",{\"1\":{\"44\":1}}],[\"priority\",{\"0\":{\"16\":1}}],[\"postgresql\",{\"0\":{\"123\":1},\"1\":{\"123\":1}}],[\"post\",{\"1\":{\"51\":1,\"56\":1,\"122\":1}}],[\"p>\",{\"1\":{\"44\":1}}],[\"p\",{\"1\":{\"42\":2,\"43\":2,\"44\":2}}],[\"p+z\",{\"1\":{\"42\":1}}],[\"p=998244353\",{\"1\":{\"42\":1,\"43\":1}}],[\"pwa\",{\"1\":{\"30\":1}}],[\"适合web开发者转型至移动应用开发\",{\"1\":{\"31\":1}}],[\"适合快速构建跨平台web应用和pwa\",{\"1\":{\"31\":1}}],[\"适合快速构建跨平台web应用和渐进式web应用\",{\"1\":{\"30\":1}}],[\"适合需要高性能和复杂ui的应用开发\",{\"1\":{\"30\":1,\"31\":1}}],[\"适合熟悉web开发的开发者\",{\"1\":{\"30\":1}}],[\"适用场景\",{\"1\":{\"30\":1}}],[\"避免应用商店的繁琐审核\",{\"1\":{\"30\":1}}],[\"需要创建配置文件\",{\"1\":{\"113\":1}}],[\"需要先将这个插件\",{\"1\":{\"51\":1}}],[\"需要通过应用商店进行更新和维护\",{\"1\":{\"30\":1}}],[\"需要学习dart语言和flutter特有的开发模式\",{\"1\":{\"30\":1}}],[\"特别是对于复杂的动画和交互\",{\"1\":{\"30\":1}}],[\"优化了应用的性能\",{\"1\":{\"30\":1}}],[\"快速迭代\",{\"1\":{\"30\":1}}],[\"支持热重载\",{\"1\":{\"30\":1}}],[\"支持热重载和实时预览\",{\"1\":{\"30\":1}}],[\"支持ios\",{\"1\":{\"30\":1}}],[\"通过教程来说明这个过程\",{\"1\":{\"119\":1}}],[\"通过闭包实现类似类的结构\",{\"1\":{\"101\":1}}],[\"通过举反例的方式\",{\"1\":{\"88\":1}}],[\"通过上述步骤\",{\"1\":{\"88\":1}}],[\"通过提供的原生插件系统直接调用设备api\",{\"1\":{\"30\":1}}],[\"通过平台通道和第三方sdk访问\",{\"1\":{\"30\":1}}],[\"通过capacitor\",{\"1\":{\"30\":1}}],[\"通过命令行工具和flutter\",{\"1\":{\"30\":1}}],[\"simple\",{\"0\":{\"122\":1}}],[\"s\",{\"1\":{\"121\":1}}],[\"sync\",{\"1\":{\"112\":2}}],[\"system\",{\"0\":{\"47\":1},\"1\":{\"104\":1}}],[\"space\",{\"1\":{\"100\":1}}],[\"special\",{\"1\":{\"40\":1}}],[\"sh\",{\"1\":{\"57\":1}}],[\"secrets\",{\"1\":{\"113\":1}}],[\"secret\",{\"1\":{\"113\":1}}],[\"section\",{\"1\":{\"54\":1,\"123\":1}}],[\"set\",{\"1\":{\"108\":1}}],[\"settings\",{\"1\":{\"108\":1}}],[\"self\",{\"1\":{\"101\":2}}],[\"select\",{\"1\":{\"54\":1}}],[\"see\",{\"1\":{\"54\":1}}],[\"segmentfault\",{\"1\":{\"51\":1}}],[\"solutions\",{\"0\":{\"53\":1}}],[\"some\",{\"0\":{\"53\":1}}],[\"sspai\",{\"1\":{\"51\":1}}],[\"sli\",{\"1\":{\"50\":1}}],[\"slidev\",{\"0\":{\"49\":1}}],[\"sub\",{\"1\":{\"43\":1}}],[\"sdkman\",{\"1\":{\"38\":1}}],[\"sdk\",{\"0\":{\"38\":1}}],[\"sdk构建和部署应用\",{\"1\":{\"30\":1}}],[\"struct\",{\"1\":{\"101\":1}}],[\"string\",{\"1\":{\"101\":2}}],[\"std\",{\"1\":{\"101\":1}}],[\"style\",{\"1\":{\"100\":1}}],[\"started\",{\"1\":{\"99\":1}}],[\"start\",{\"1\":{\"37\":1}}],[\"studio下载gradle太慢可换源\",{\"1\":{\"108\":1}}],[\"studio时不能打开360手机助手\",{\"1\":{\"34\":1}}],[\"studio\",{\"1\":{\"30\":1}}],[\"sticky\",{\"0\":{\"11\":1,\"16\":1}}],[\"应用构建和部署\",{\"1\":{\"30\":1}}],[\"集成了flutter插件\",{\"1\":{\"30\":1}}],[\"官方推荐使用visual\",{\"1\":{\"30\":1}}],[\"基于web技术\",{\"1\":{\"30\":1}}],[\"较低\",{\"1\":{\"30\":1}}],[\"兼容多种前端框架\",{\"1\":{\"30\":1}}],[\"社区较小但增长迅速\",{\"1\":{\"30\":1}}],[\"社区和生态系统\",{\"1\":{\"30\":1}}],[\"由于本人水平一般\",{\"1\":{\"121\":1}}],[\"由此有\",{\"1\":{\"90\":1}}],[\"由此知道假设不成立\",{\"1\":{\"87\":1}}],[\"由乘法运算规则\",{\"1\":{\"81\":1,\"82\":1}}],[\"由加法结果的唯一性有\",{\"1\":{\"82\":1}}],[\"由加法结果的存在性有\",{\"1\":{\"81\":1}}],[\"由加法消去律得到\",{\"1\":{\"75\":1}}],[\"由加法运算规则\",{\"1\":{\"65\":1,\"66\":1}}],[\"由\",{\"1\":{\"62\":1,\"65\":2,\"66\":2,\"75\":2,\"76\":2,\"77\":1,\"78\":1,\"81\":1,\"82\":1,\"87\":2,\"89\":1}}],[\"由ionic团队开发\",{\"1\":{\"30\":1}}],[\"由google支持\",{\"1\":{\"30\":1}}],[\"拥有庞大的开发者社区和丰富的插件生态\",{\"1\":{\"30\":1}}],[\"主要支持ios\",{\"1\":{\"30\":1}}],[\"桌面和嵌入式平台\",{\"1\":{\"30\":1}}],[\"跨平台开发\",{\"1\":{\"107\":1}}],[\"跨平台支持\",{\"1\":{\"30\":1}}],[\"跨平台的web应用封装工具\",{\"1\":{\"30\":1}}],[\"提供流畅的动画和视觉效果\",{\"1\":{\"30\":1}}],[\"提供丰富的组件和工具\",{\"1\":{\"30\":1}}],[\"使用javascript\",{\"1\":{\"106\":1}}],[\"使用\",{\"1\":{\"105\":1,\"107\":1,\"112\":1}}],[\"使用自定义渲染引擎\",{\"1\":{\"30\":1}}],[\"使用指南\",{\"2\":{\"25\":1}}],[\"性能优化\",{\"1\":{\"30\":1}}],[\"性能可能不如原生编译框架\",{\"1\":{\"30\":1}}],[\"性能\",{\"1\":{\"30\":1}}],[\"开发工具\",{\"1\":{\"30\":1}}],[\"开发框架性质\",{\"1\":{\"30\":1}}],[\"开发语言\",{\"1\":{\"30\":1}}],[\"和开源作者们使用同一套流程\",{\"1\":{\"58\":1}}],[\"和\",{\"0\":{\"30\":1},\"1\":{\"65\":2,\"81\":1,\"87\":1,\"109\":2,\"117\":1}}],[\"操作系统\",{\"0\":{\"29\":1}}],[\"博文\",{\"0\":{\"27\":1}}],[\"1190000040806239\",{\"1\":{\"51\":1}}],[\"1ll\",{\"1\":{\"43\":1,\"44\":1}}],[\"1\",{\"0\":{\"61\":1},\"1\":{\"24\":12,\"101\":2,\"116\":1}}],[\"段落\",{\"1\":{\"24\":2}}],[\"密码加密的文章\",{\"0\":{\"24\":1}}],[\"密文\",{\"0\":{\"23\":1}}],[\"课文\",{\"0\":{\"21\":1}}],[\"act\",{\"1\":{\"113\":5}}],[\"actions\",{\"0\":{\"37\":1,\"113\":1}}],[\"applications\",{\"1\":{\"104\":1}}],[\"api\",{\"1\":{\"99\":1}}],[\"aliyun\",{\"1\":{\"108\":12}}],[\"allowmixedcontent\",{\"1\":{\"106\":1}}],[\"all\",{\"1\":{\"104\":2,\"108\":1}}],[\"alt\",{\"1\":{\"101\":1}}],[\"at\",{\"1\":{\"104\":1}}],[\"aggregateerror\",{\"1\":{\"99\":1}}],[\"auto\",{\"0\":{\"57\":1},\"1\":{\"101\":6}}],[\"assetstudioassetstudio\",{\"1\":{\"56\":1}}],[\"assert\",{\"1\":{\"44\":1}}],[\"aboutcon\",{\"1\":{\"55\":3}}],[\"aboutnav\",{\"1\":{\"55\":4}}],[\"about\",{\"0\":{\"53\":1},\"1\":{\"55\":2}}],[\"a<b\",{\"1\":{\"43\":1}}],[\"a+b\",{\"1\":{\"43\":2}}],[\"a+b>=p\",{\"1\":{\"43\":1}}],[\"a\",{\"0\":{\"122\":1},\"1\":{\"43\":6,\"44\":6,\"51\":1,\"60\":1,\"119\":1,\"121\":1}}],[\"add\",{\"1\":{\"43\":3,\"44\":1,\"101\":6}}],[\"added\",{\"1\":{\"16\":1}}],[\"and\",{\"1\":{\"54\":1}}],[\"android和渐进式web应用程序\",{\"1\":{\"106\":1}}],[\"android和web平台\",{\"1\":{\"30\":1}}],[\"android\",{\"1\":{\"30\":1,\"106\":1,\"108\":2},\"2\":{\"32\":1,\"33\":1,\"35\":1,\"36\":1}}],[\"ans=\",{\"1\":{\"44\":1}}],[\"ans=mul\",{\"1\":{\"43\":1}}],[\"ans=1ll\",{\"1\":{\"42\":1}}],[\"angular\",{\"1\":{\"30\":1,\"109\":1}}],[\"article\",{\"0\":{\"11\":1,\"16\":1}}],[\"article2\",{\"0\":{\"5\":1}}],[\"article1\",{\"0\":{\"0\":1}}],[\"archive\",{\"0\":{\"0\":1,\"5\":1},\"1\":{\"54\":1}}],[\"ionic\",{\"0\":{\"109\":1},\"1\":{\"109\":1,\"112\":4}}],[\"ionic打包后的相对路径不正确\",{\"1\":{\"105\":1}}],[\"io\",{\"1\":{\"108\":2}}],[\"import\",{\"1\":{\"55\":2}}],[\"include\",{\"1\":{\"101\":2}}],[\"insert\",{\"1\":{\"100\":1}}],[\"install\",{\"1\":{\"57\":2}}],[\"indent\",{\"1\":{\"100\":1}}],[\"index\",{\"2\":{\"22\":1,\"28\":1}}],[\"in\",{\"0\":{\"54\":1},\"1\":{\"54\":2}}],[\"interpreter\",{\"0\":{\"59\":1},\"1\":{\"60\":1,\"119\":1}}],[\"int\",{\"1\":{\"42\":2,\"43\":11,\"101\":4}}],[\"information\",{\"1\":{\"16\":1}}],[\"isn\",{\"0\":{\"54\":1}}],[\"is\",{\"1\":{\"1\":1,\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"13\":1,\"16\":1,\"17\":1,\"18\":1,\"56\":1,\"104\":1,\"122\":1,\"123\":1}}],[\"wrapper\",{\"1\":{\"108\":1}}],[\"write\",{\"1\":{\"60\":1,\"119\":1}}],[\"whitespace\",{\"1\":{\"100\":1}}],[\"which\",{\"1\":{\"16\":1}}],[\"width\",{\"1\":{\"100\":1}}],[\"with\",{\"0\":{\"16\":1}}],[\"wsl\",{\"1\":{\"57\":1}}],[\"war\",{\"1\":{\"37\":1}}],[\"web\",{\"1\":{\"30\":1,\"109\":1,\"112\":1}}],[\"wwii\",{\"2\":{\"9\":1}}],[\"wwi\",{\"2\":{\"4\":1}}],[\"else\",{\"1\":{\"104\":1}}],[\"editorconfig文件\",{\"1\":{\"100\":1}}],[\"editorconfig\",{\"1\":{\"100\":1}}],[\"extension\",{\"1\":{\"99\":2}}],[\"excerpt\",{\"1\":{\"16\":1}}],[\"endl\",{\"1\":{\"101\":3}}],[\"end\",{\"1\":{\"100\":1}}],[\"env\",{\"1\":{\"57\":1,\"113\":2}}],[\"enhanced\",{\"1\":{\"51\":1}}],[\"enabled\",{\"1\":{\"106\":1}}],[\"enable\",{\"1\":{\"37\":1}}],[\"e\",{\"2\":{\"15\":1,\"20\":1}}],[\"times\",{\"1\":{\"104\":1}}],[\"tips\",{\"0\":{\"112\":1}}],[\"tip\",{\"2\":{\"36\":1}}],[\"tencent\",{\"1\":{\"108\":1}}],[\"text\",{\"1\":{\"101\":1}}],[\"template<typename\",{\"1\":{\"44\":1}}],[\"trailing\",{\"1\":{\"100\":1}}],[\"trim\",{\"1\":{\"100\":1}}],[\"true\",{\"1\":{\"100\":3,\"106\":2}}],[\"tab\",{\"1\":{\"100\":1}}],[\"tag\",{\"2\":{\"15\":1,\"20\":1}}],[\"this\",{\"1\":{\"56\":1,\"122\":1,\"123\":1}}],[\"the\",{\"0\":{\"54\":1},\"1\":{\"1\":1,\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"54\":6,\"56\":2,\"104\":3,\"122\":2,\"123\":2}}],[\"typedef\",{\"1\":{\"44\":1}}],[\"t\",{\"0\":{\"54\":1},\"1\":{\"44\":5}}],[\"toc\",{\"1\":{\"116\":1}}],[\"tostring\",{\"1\":{\"101\":8}}],[\"todo\",{\"1\":{\"99\":1}}],[\"tools\",{\"0\":{\"54\":1},\"1\":{\"54\":1}}],[\"to\",{\"0\":{\"53\":1},\"1\":{\"37\":1,\"101\":1}}],[\"c4\",{\"1\":{\"119\":4}}],[\"cd\",{\"2\":{\"114\":1,\"115\":1}}],[\"ci\",{\"2\":{\"114\":1,\"115\":1}}],[\"central\",{\"1\":{\"108\":2}}],[\"charset\",{\"1\":{\"100\":1}}],[\"changelog\",{\"0\":{\"57\":1},\"1\":{\"57\":1}}],[\"c\",{\"0\":{\"116\":1,\"122\":1},\"1\":{\"60\":1,\"116\":15,\"119\":4}}],[\"cn\",{\"1\":{\"50\":1}}],[\"cloud\",{\"1\":{\"108\":1}}],[\"click\",{\"1\":{\"54\":2}}],[\"cli构建和部署\",{\"1\":{\"30\":1}}],[\"class\",{\"1\":{\"44\":1}}],[\"copy\",{\"1\":{\"112\":1}}],[\"cout\",{\"1\":{\"101\":3}}],[\"compiler\",{\"0\":{\"122\":1},\"1\":{\"121\":1}}],[\"computer\",{\"1\":{\"104\":1}}],[\"components\",{\"1\":{\"55\":1}}],[\"components是一个对象了\",{\"1\":{\"55\":1}}],[\"component改成要components\",{\"1\":{\"55\":1}}],[\"component\",{\"1\":{\"54\":1}}],[\"com\",{\"1\":{\"51\":2,\"99\":1,\"108\":13}}],[\"config\",{\"1\":{\"106\":1}}],[\"con\",{\"1\":{\"55\":1}}],[\"const\",{\"1\":{\"44\":9,\"106\":1}}],[\"constexpr\",{\"1\":{\"42\":1,\"43\":1}}],[\"content\",{\"1\":{\"1\":1,\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"56\":1,\"122\":1}}],[\"code\",{\"1\":{\"30\":1,\"51\":2,\"99\":1}}],[\"css\",{\"1\":{\"30\":1,\"109\":1}}],[\"cap\",{\"1\":{\"112\":2}}],[\"capacitorhttp\",{\"1\":{\"106\":1}}],[\"capacitorconfig\",{\"1\":{\"106\":1}}],[\"capacitor是一个开源的并且在native端运行的跨平台的web应用\",{\"1\":{\"106\":1}}],[\"capacitor可能更符合您的需求\",{\"1\":{\"31\":1}}],[\"capacitor则是一个基于web技术的跨平台封装工具\",{\"1\":{\"31\":1}}],[\"capacitor\",{\"0\":{\"30\":1,\"106\":1},\"1\":{\"30\":1}}],[\"can\",{\"1\":{\"54\":1}}],[\"categoryc\",{\"2\":{\"14\":1,\"19\":1}}],[\"介绍页\",{\"0\":{\"10\":1}}],[\"harmony\",{\"1\":{\"56\":1}}],[\"https\",{\"1\":{\"50\":1,\"51\":2,\"60\":1,\"99\":1,\"108\":14}}],[\"httpport=8081\",{\"1\":{\"37\":1}}],[\"html和css创建跨平台ios\",{\"1\":{\"106\":1}}],[\"html\",{\"1\":{\"30\":1,\"109\":1}}],[\"how\",{\"1\":{\"37\":1}}],[\"homepage\",{\"1\":{\"37\":2,\"106\":1,\"109\":1}}],[\"higher\",{\"0\":{\"16\":1}}],[\"history\",{\"2\":{\"3\":1,\"8\":1}}],[\"helloworld\",{\"1\":{\"116\":1}}],[\"here\",{\"1\":{\"1\":1,\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1}}],[\"heading\",{\"0\":{\"1\":1,\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1}}],[\"3\",{\"0\":{\"2\":1,\"7\":1,\"13\":1,\"18\":1},\"1\":{\"101\":2,\"116\":1}}],[\"2015\",{\"1\":{\"60\":1}}],[\"2\",{\"0\":{\"1\":1,\"6\":1,\"12\":1,\"17\":1},\"1\":{\"24\":14,\"100\":1,\"101\":1,\"116\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
