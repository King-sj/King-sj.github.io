[{"content":"\r题目链接\n直接暴力枚举即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #pragma GCC optimize(\u0026#34;O2\u0026#34;) #pragma GCC optimize(\u0026#34;O3\u0026#34;,\u0026#34;Ofast\u0026#34;,\u0026#34;inline\u0026#34;) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; using ll = int64_t; const int MAXN = 44724; ll a[MAXN] = {1}; void slv() { ll N; cin \u0026gt;\u0026gt; N; if (N == 1) {cout \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; endl; return;} for (int i = 3; i \u0026lt; MAXN; i++) { for (int j = i/2; j \u0026gt; 0; j--) { // 对称性 if (j == i/2 \u0026amp;\u0026amp; i\u0026amp;1 ) a[j] = a[j-1]*2; else a[j] = a[j-1] + a[j]; // 相当于dp滚动数组优化 if (a[j] == N) { cout \u0026lt;\u0026lt; i*(i-1)/2+j+1; return; } } } cout \u0026lt;\u0026lt; N*(N+1)/2+2; } int main() { ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); slv(); return 0; } 以下是来自agicy dalao 的提示，不过本蒻蒻没想明白，TODO:\n$$\nN = C_{n}^{i} = \\frac{n*(n-1)\u0026hellip;(n-i+1)}{12\u0026hellip;i} \\\n\\quad\\\n\\Rightarrow N12\u0026hellip;i = n(n-1)\u0026hellip;(n-i+1)\\\n\\quad\\\nn=\\sqrt[i]{nn\u0026hellip;n}\u0026gt; \\sqrt[i]{n(n-1)\u0026hellip;(n-i+1)} \\\n= \\sqrt[i]{N12*\u0026hellip;i} \u0026gt; \\sqrt[i]{(n-i+1)(n-i+1)\u0026hellip;(n-i+1)}\\\n=n- i +1\\\n\\quad\\\n\\Rightarrow \\sqrt[i]{N12*\u0026hellip;i} \u0026lt; n \u0026lt; \\sqrt[i]{N12\u0026hellip;*i}+i-1\\\n,\\\n\\sqrt[i]{N}\\frac{i}{\\ln{i}+0.6}\u0026lt;\\sqrt[i]{N}\\frac{i}{\\ln{i}+\\gamma}=\\\n\\sqrt[i]{N}\\frac{i}{\\frac{1}{1}+\\frac{1}{2}+\u0026hellip;+\\frac{1}{i}} \u0026lt;n \u0026lt; \\frac{1+2+\u0026hellip;+i}{i}\\sqrt[i]{N} =\\\n\\frac{1+i}{2}\\sqrt[i]{N}\n,\\\n\\Rightarrow \\sqrt[i]{N}\\frac{i}{\\ln{i}+0.6} \u0026lt; n \u0026lt; \\frac{i+1}{2}\\sqrt[i]{N}\\\n$$\n","description":"题解","id":0,"section":"posts","tags":["oi"],"title":"蓝桥杯-2021-杨辉三角形","uri":"http://King-sj.github.io/zh/posts/%E8%93%9D%E6%A1%A5%E6%9D%AF%E9%A2%98%E8%A7%A3_%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10 *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line Makefile CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. 1 2 3 4 5 CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. JSON 1 2 3 {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]} Markdown 1 2 3 **bold** *italics* [link](www.example.com) JavaScript 1 document.write(\u0026#39;Hello, world!\u0026#39;); CSS 1 2 3 body { background-color: red; } Objective C 1 2 3 4 5 6 #import \u0026lt;stdio.h\u0026gt; int main (void) { printf (\u0026#34;Hello world!\\n\u0026#34;); } Python 1 print \u0026#34;Hello, world!\u0026#34; XML 1 2 3 4 5 \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt; Perl 1 print \u0026#34;Hello, World!\\n\u0026#34;; Bash 1 echo \u0026#34;Hello World\u0026#34; PHP 1 \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt; CoffeeScript 1 console.log(“Hello world!”); C# 1 2 3 4 5 6 7 8 using System; class Program { public static void Main(string[] args) { Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); } } C++ 1 2 3 4 5 6 7 #include \u0026lt;iostream.h\u0026gt; main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; } SQL 1 2 SELECT column_name,column_name FROM table_name; Go 1 2 3 4 5 package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, 世界\u0026#34;) } Ruby 1 puts \u0026#34;Hello, world!\u0026#34; Java 1 2 3 4 5 6 7 8 9 10 11 12 import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame frame.pack(); //Setting size to smallest frame.setLocationRelativeTo(null); //Centering frame frame.setVisible(true); //Showing frame } } Latex Equation 1 \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 import {x, y} as p from \u0026#39;point\u0026#39;; const ANSWER = 42; class Car extends Vehicle { constructor(speed, cost) { super(speed); var c = Symbol(\u0026#39;cost\u0026#39;); this[c] = cost; this.intro = `This is a car runs at ${speed}.`; } } for (let num of [1, 2, 3]) { console.log(num + 0b111110111); } function $initHighlight(block, flags) { try { if (block.className.search(/\\bno\\-highlight\\b/) != -1) return processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;; } catch (e) { /* handle exception */ var e4x = \u0026lt;div\u0026gt;Example \u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;; } for (var i = 0 / 2; i \u0026lt; classes.length; i++) { // \u0026#34;0 / 2\u0026#34; should not be parsed as regexp if (checkCondition(classes[i]) === undefined) return /\\d+[\\s/]/g; } console.log(Array.every(classes, Boolean)); } export $initHighlight; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /********************************************************* * General */ pre[class*=\u0026#34;language-\u0026#34;], code { color: #5c6e74; font-size: 13px; text-shadow: none; font-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; } pre[class*=\u0026#34;language-\u0026#34;]::selection, code::selection { text-shadow: none; background: #b3d4fc; } @media print { pre[class*=\u0026#34;language-\u0026#34;], code { text-shadow: none; } } pre[class*=\u0026#34;language-\u0026#34;] { padding: 1em; margin: .5em 0; overflow: auto; background: #f8f5ec; } :not(pre) \u0026gt; code { padding: .1em .3em; border-radius: .3em; color: #db4c69; background: #f9f2f4; } ","description":"Syntax highlighting test","id":1,"section":"about","tags":["hugo"],"title":"Syntax highlighting","uri":"http://King-sj.github.io/zh/about/abou_tst/"}]