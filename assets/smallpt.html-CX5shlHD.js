import{_ as n,o as s,c as a,f as p}from"./app-Cy2ZwSf8.js";const t={},o=p(`<h1 id="smallpt" tabindex="-1"><a class="header-anchor" href="#smallpt"><span>smallpt</span></a></h1><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M_PI</span> <span class="token expression"><span class="token number">3.1415926</span></span></span>
<span class="token comment">// 向量</span>
<span class="token keyword">struct</span> <span class="token class-name">Vec</span> <span class="token punctuation">{</span>
  <span class="token keyword">double</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">;</span>
  <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token keyword">double</span> x_ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> y_ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">double</span> z_ <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">x</span><span class="token punctuation">(</span>x_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">y</span><span class="token punctuation">(</span>y_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">z</span><span class="token punctuation">(</span>z_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  Vec <span class="token keyword">operator</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token keyword">const</span> Vec <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span>x <span class="token operator">+</span> b<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y <span class="token operator">+</span> b<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z <span class="token operator">+</span> b<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  Vec <span class="token keyword">operator</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token keyword">const</span> Vec <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span>x <span class="token operator">-</span> b<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y <span class="token operator">-</span> b<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z <span class="token operator">-</span> b<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// 数乘</span>
  Vec <span class="token keyword">operator</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">double</span> b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span>x <span class="token operator">*</span> b<span class="token punctuation">,</span> y <span class="token operator">*</span> b<span class="token punctuation">,</span> z <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// 逐元素相乘</span>
  Vec <span class="token function">mult</span><span class="token punctuation">(</span><span class="token keyword">const</span> Vec <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span>x <span class="token operator">*</span> b<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y <span class="token operator">*</span> b<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z <span class="token operator">*</span> b<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// 归一化</span>
  Vec <span class="token operator">&amp;</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">*</span><span class="token keyword">this</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token keyword">this</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>x <span class="token operator">*</span> x <span class="token operator">+</span> y <span class="token operator">*</span> y <span class="token operator">+</span> z <span class="token operator">*</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// 点乘</span>
  <span class="token keyword">double</span> <span class="token function">dot</span><span class="token punctuation">(</span><span class="token keyword">const</span> Vec <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">*</span> b<span class="token punctuation">.</span>x <span class="token operator">+</span> y <span class="token operator">*</span> b<span class="token punctuation">.</span>y <span class="token operator">+</span> z <span class="token operator">*</span> b<span class="token punctuation">.</span>z<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token comment">// 叉乘</span>
  Vec <span class="token function">cross</span><span class="token punctuation">(</span><span class="token keyword">const</span> Vec <span class="token operator">&amp;</span>b<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span>y <span class="token operator">*</span> b<span class="token punctuation">.</span>z <span class="token operator">-</span> z <span class="token operator">*</span> b<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z <span class="token operator">*</span> b<span class="token punctuation">.</span>x <span class="token operator">-</span> x <span class="token operator">*</span> b<span class="token punctuation">.</span>z<span class="token punctuation">,</span> x <span class="token operator">*</span> b<span class="token punctuation">.</span>y <span class="token operator">-</span> y <span class="token operator">*</span> b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 射线</span>
<span class="token keyword">struct</span> <span class="token class-name">Ray</span> <span class="token punctuation">{</span>
  Vec o<span class="token punctuation">,</span> d<span class="token punctuation">;</span>  <span class="token comment">// 射线起点和方向</span>
  <span class="token function">Ray</span><span class="token punctuation">(</span>Vec o_<span class="token punctuation">,</span> Vec d_<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">o</span><span class="token punctuation">(</span>o_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">d</span><span class="token punctuation">(</span>d_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 材质类型 DIFF:漫反射 SPEC:镜面反射 REFR:折射</span>
<span class="token keyword">enum</span> <span class="token class-name">Refl_t</span> <span class="token punctuation">{</span> DIFF<span class="token punctuation">,</span> SPEC<span class="token punctuation">,</span> REFR <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 球体</span>
<span class="token keyword">class</span> <span class="token class-name">Sphere</span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token keyword">double</span> rad<span class="token punctuation">;</span>   <span class="token comment">// 半径</span>
  Vec p<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">;</span>  <span class="token comment">// 位置，辐射，颜色</span>
  Refl_t refl<span class="token punctuation">;</span>  <span class="token comment">// 反射类型</span>
  <span class="token comment">/**
   * @brief Construct a new Sphere object
   * @param rad_ 半径
   * @param p_ 位置
   * @param e_ 辐射， 用于光源， 大部分物体为0
   * @param c_ 颜色
   * @param refl_ 反射类型
   */</span>
  <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token keyword">double</span> rad_<span class="token punctuation">,</span> Vec p_<span class="token punctuation">,</span> Vec e_<span class="token punctuation">,</span> Vec c_<span class="token punctuation">,</span> Refl_t refl_<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">rad</span><span class="token punctuation">(</span>rad_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">p</span><span class="token punctuation">(</span>p_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">e</span><span class="token punctuation">(</span>e_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">c</span><span class="token punctuation">(</span>c_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">refl</span><span class="token punctuation">(</span>refl_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">/**
   * @brief 求解射线和球体的交点
   *
   * @param r 射线
   * @return double 交点距离，0表示无交点
   */</span>
  <span class="token keyword">double</span> <span class="token function">intersect</span><span class="token punctuation">(</span><span class="token keyword">const</span> Ray <span class="token operator">&amp;</span>r<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
    Vec op <span class="token operator">=</span> p <span class="token operator">-</span> r<span class="token punctuation">.</span>o<span class="token punctuation">;</span>  <span class="token comment">// 求解t^2*d.d + 2*t*(o-p).d + (o-p).(o-p)-R^2 = 0</span>
    <span class="token keyword">double</span> t<span class="token punctuation">,</span> eps <span class="token operator">=</span> <span class="token number">1e-4</span><span class="token punctuation">,</span> b <span class="token operator">=</span> op<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> det <span class="token operator">=</span> b <span class="token operator">*</span> b <span class="token operator">-</span> op<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>op<span class="token punctuation">)</span> <span class="token operator">+</span> rad <span class="token operator">*</span> rad<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      det <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>det<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> b <span class="token operator">-</span> det<span class="token punctuation">)</span> <span class="token operator">&gt;</span> eps <span class="token operator">?</span> t <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> b <span class="token operator">+</span> det<span class="token punctuation">)</span> <span class="token operator">&gt;</span> eps <span class="token operator">?</span> t <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 场景中的球体</span>
Sphere spheres<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">40.8</span><span class="token punctuation">,</span> <span class="token number">81.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.25</span><span class="token punctuation">,</span> <span class="token number">.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 左边的红色墙</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">40.8</span><span class="token punctuation">,</span> <span class="token number">81.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">.25</span><span class="token punctuation">,</span> <span class="token number">.25</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 右边的蓝色墙</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40.8</span><span class="token punctuation">,</span> <span class="token number">1e5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 后面的灰色墙</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40.8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 前面的墙</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token number">81.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 地板</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">1e5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">81.6</span><span class="token punctuation">,</span> <span class="token number">81.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">,</span> <span class="token number">.75</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           DIFF<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 顶部</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">16.5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">16.5</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.999</span><span class="token punctuation">,</span> SPEC<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 镜子</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">16.5</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">16.5</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.999</span><span class="token punctuation">,</span> REFR<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 玻璃</span>
    <span class="token function">Sphere</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">681.6</span> <span class="token operator">-</span> <span class="token number">.27</span><span class="token punctuation">,</span> <span class="token number">81.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
           DIFF<span class="token punctuation">)</span>  <span class="token comment">// 光源</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 随机数</span>
<span class="token keyword">double</span> <span class="token function">erand48</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">short</span> xsubi<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>RAND_MAX<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 限制x的范围在0-1之间</span>
<span class="token keyword">inline</span> <span class="token keyword">double</span> <span class="token function">clamp</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> x <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">// 将double转换为int</span>
<span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">toInt</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token function">clamp</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">2.2</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">255</span> <span class="token operator">+</span> <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token comment">// 求解射线和物体的交点</span>
<span class="token keyword">inline</span> <span class="token keyword">bool</span> <span class="token function">intersect</span><span class="token punctuation">(</span><span class="token keyword">const</span> Ray <span class="token operator">&amp;</span>r<span class="token punctuation">,</span> <span class="token keyword">double</span> <span class="token operator">&amp;</span>t<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">double</span> n <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>spheres<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Sphere<span class="token punctuation">)</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> inf <span class="token operator">=</span> t <span class="token operator">=</span> <span class="token number">1e20</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d <span class="token operator">=</span> spheres<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">intersect</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">&lt;</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      t <span class="token operator">=</span> d<span class="token punctuation">;</span>
      id <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">return</span> t <span class="token operator">&lt;</span> inf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 求解光线的辐射度, r: 光线, depth: 递归深度, Xi: 随机数</span>
Vec <span class="token function">radiance</span><span class="token punctuation">(</span><span class="token keyword">const</span> Ray <span class="token operator">&amp;</span>r<span class="token punctuation">,</span> <span class="token keyword">int</span> depth<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token operator">*</span>Xi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>depth <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">double</span> t<span class="token punctuation">;</span>    <span class="token comment">// 距离</span>
  <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// 碰撞的物体id</span>
  <span class="token comment">// 无碰撞</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">intersect</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> t<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> Sphere <span class="token operator">&amp;</span>obj <span class="token operator">=</span> spheres<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 碰撞的物体</span>
  Vec x <span class="token operator">=</span> r<span class="token punctuation">.</span>o <span class="token operator">+</span> r<span class="token punctuation">.</span>d <span class="token operator">*</span> t<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> obj<span class="token punctuation">.</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      nl <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>d<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> n <span class="token operator">:</span> n <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> f <span class="token operator">=</span> obj<span class="token punctuation">.</span>c<span class="token punctuation">;</span>
  <span class="token keyword">double</span> p <span class="token operator">=</span> f<span class="token punctuation">.</span>x <span class="token operator">&gt;</span> f<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>x <span class="token operator">&gt;</span> f<span class="token punctuation">.</span>z <span class="token operator">?</span> f<span class="token punctuation">.</span>x
             <span class="token operator">:</span> f<span class="token punctuation">.</span>y <span class="token operator">&gt;</span> f<span class="token punctuation">.</span>z            <span class="token operator">?</span> f<span class="token punctuation">.</span>y
                                    <span class="token operator">:</span> f<span class="token punctuation">.</span>z<span class="token punctuation">;</span>  <span class="token comment">// 最大反射率</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>depth <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span> <span class="token operator">&lt;</span> p<span class="token punctuation">)</span>
      f <span class="token operator">=</span> f <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      <span class="token keyword">return</span> obj<span class="token punctuation">.</span>e<span class="token punctuation">;</span>        <span class="token comment">// R.R.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>refl <span class="token operator">==</span> DIFF<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 漫反射</span>
    <span class="token keyword">double</span> r1 <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> M_PI <span class="token operator">*</span> <span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span><span class="token punctuation">,</span> r2 <span class="token operator">=</span> <span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span><span class="token punctuation">,</span> r2s <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Vec w <span class="token operator">=</span> nl<span class="token punctuation">,</span> u <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">fabs</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">.1</span> <span class="token operator">?</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        v <span class="token operator">=</span> w<span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Vec d <span class="token operator">=</span> <span class="token punctuation">(</span>u <span class="token operator">*</span> <span class="token function">cos</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span> <span class="token operator">*</span> r2s <span class="token operator">+</span> v <span class="token operator">*</span> <span class="token function">sin</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span> <span class="token operator">*</span> r2s <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> r2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>e <span class="token operator">+</span> f<span class="token punctuation">.</span><span class="token function">mult</span><span class="token punctuation">(</span><span class="token function">radiance</span><span class="token punctuation">(</span><span class="token function">Ray</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>refl <span class="token operator">==</span> SPEC<span class="token punctuation">)</span>  <span class="token comment">// 镜面反射</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>e <span class="token operator">+</span>
           f<span class="token punctuation">.</span><span class="token function">mult</span><span class="token punctuation">(</span><span class="token function">radiance</span><span class="token punctuation">(</span><span class="token function">Ray</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> r<span class="token punctuation">.</span>d <span class="token operator">-</span> n <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Ray <span class="token function">reflRay</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> r<span class="token punctuation">.</span>d <span class="token operator">-</span> n <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 折射</span>
  <span class="token keyword">bool</span> into <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>nl<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>                 <span class="token comment">// 从外部到内部</span>
  <span class="token keyword">double</span> nc <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> nt <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">,</span> nnt <span class="token operator">=</span> into <span class="token operator">?</span> nc <span class="token operator">/</span> nt <span class="token operator">:</span> nt <span class="token operator">/</span> nc<span class="token punctuation">,</span> ddn <span class="token operator">=</span> r<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>nl<span class="token punctuation">)</span><span class="token punctuation">,</span>
         cos2t<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cos2t <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> nnt <span class="token operator">*</span> nnt <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> ddn <span class="token operator">*</span> ddn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment">// 全反射</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span>e <span class="token operator">+</span> f<span class="token punctuation">.</span><span class="token function">mult</span><span class="token punctuation">(</span><span class="token function">radiance</span><span class="token punctuation">(</span>reflRay<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Vec tdir <span class="token operator">=</span>
      <span class="token punctuation">(</span>r<span class="token punctuation">.</span>d <span class="token operator">*</span> nnt <span class="token operator">-</span> n <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>into <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>ddn <span class="token operator">*</span> nnt <span class="token operator">+</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>cos2t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">double</span> a <span class="token operator">=</span> nt <span class="token operator">-</span> nc<span class="token punctuation">,</span> b <span class="token operator">=</span> nt <span class="token operator">+</span> nc<span class="token punctuation">,</span> R0 <span class="token operator">=</span> a <span class="token operator">*</span> a <span class="token operator">/</span> <span class="token punctuation">(</span>b <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>
         c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span>into <span class="token operator">?</span> <span class="token operator">-</span>ddn <span class="token operator">:</span> tdir<span class="token punctuation">.</span><span class="token function">dot</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">double</span> Re <span class="token operator">=</span> R0 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> R0<span class="token punctuation">)</span> <span class="token operator">*</span> c <span class="token operator">*</span> c <span class="token operator">*</span> c <span class="token operator">*</span> c <span class="token operator">*</span> c<span class="token punctuation">,</span> Tr <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> Re<span class="token punctuation">,</span> P <span class="token operator">=</span> <span class="token number">.25</span> <span class="token operator">+</span> <span class="token number">.5</span> <span class="token operator">*</span> Re<span class="token punctuation">,</span>
         RP <span class="token operator">=</span> Re <span class="token operator">/</span> P<span class="token punctuation">,</span> TP <span class="token operator">=</span> Tr <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> P<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">.</span>e <span class="token operator">+</span>
         f<span class="token punctuation">.</span><span class="token function">mult</span><span class="token punctuation">(</span>depth <span class="token operator">&gt;</span> <span class="token number">2</span>
                    <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span> <span class="token operator">&lt;</span> P <span class="token operator">?</span> <span class="token function">radiance</span><span class="token punctuation">(</span>reflRay<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span> <span class="token operator">*</span> RP
                                       <span class="token operator">:</span> <span class="token function">radiance</span><span class="token punctuation">(</span><span class="token function">Ray</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> tdir<span class="token punctuation">)</span><span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span> <span class="token operator">*</span> TP<span class="token punctuation">)</span>
                    <span class="token operator">:</span> <span class="token function">radiance</span><span class="token punctuation">(</span>reflRay<span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span> <span class="token operator">*</span> Re <span class="token operator">+</span>
                          <span class="token function">radiance</span><span class="token punctuation">(</span><span class="token function">Ray</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> tdir<span class="token punctuation">)</span><span class="token punctuation">,</span> depth<span class="token punctuation">,</span> Xi<span class="token punctuation">)</span> <span class="token operator">*</span> Tr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">renderProgressBar</span><span class="token punctuation">(</span><span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> samps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> barWidth <span class="token operator">=</span> <span class="token number">70</span><span class="token punctuation">;</span>
  <span class="token keyword">double</span> progress <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>y <span class="token operator">/</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> pos <span class="token operator">=</span> barWidth <span class="token operator">*</span> progress<span class="token punctuation">;</span>

  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\r[&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> barWidth<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> pos<span class="token punctuation">)</span>
      std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span>
      std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;] &quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token keyword">int</span><span class="token punctuation">(</span>progress <span class="token operator">*</span> <span class="token number">100.0</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; % (&quot;</span> <span class="token operator">&lt;&lt;</span> samps <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; spp)&quot;</span><span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Rendering...&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token comment">// 图像宽高, 采样次数</span>
  <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token number">768</span><span class="token punctuation">,</span> samps <span class="token operator">=</span> argc <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token function">atoi</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token comment">// 相机位置和方向</span>
  Ray <span class="token function">cam</span><span class="token punctuation">(</span><span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">295.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.042612</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 摄像机坐标系,</span>
  Vec cx <span class="token operator">=</span> <span class="token function">Vec</span><span class="token punctuation">(</span>w <span class="token operator">*</span> <span class="token number">.5135</span> <span class="token operator">/</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token punctuation">(</span>cx<span class="token punctuation">.</span><span class="token function">cross</span><span class="token punctuation">(</span>cam<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.5135</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span>
      <span class="token operator">*</span>c <span class="token operator">=</span> <span class="token keyword">new</span> Vec<span class="token punctuation">[</span>w <span class="token operator">*</span> h<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 多线程</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span>dynamic<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">private</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span></span></span>
  <span class="token comment">// 循环每一行</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> h<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">renderProgressBar</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> h<span class="token punctuation">,</span> samps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 循环每一列, XI用于随机数</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">short</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> Xi<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">*</span> y <span class="token operator">*</span> y<span class="token punctuation">}</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> w<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 2x2个子像素</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> sy <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> w <span class="token operator">+</span> x<span class="token punctuation">;</span> sy <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> sy<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 2x2个子像素</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> sx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> sx <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> sx<span class="token operator">++</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 采样次数</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> s <span class="token operator">&lt;</span> samps<span class="token punctuation">;</span> s<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">double</span> r1 <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span><span class="token punctuation">,</span>
                   dx <span class="token operator">=</span> r1 <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">-</span> r1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">double</span> r2 <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token function">erand48</span><span class="token punctuation">(</span>Xi<span class="token punctuation">)</span><span class="token punctuation">,</span>
                   dy <span class="token operator">=</span> r2 <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">-</span> r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//  产生随机光线</span>
            Vec d <span class="token operator">=</span> cx <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sx <span class="token operator">+</span> <span class="token number">.5</span> <span class="token operator">+</span> dx<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> x<span class="token punctuation">)</span> <span class="token operator">/</span> w <span class="token operator">-</span> <span class="token number">.5</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                    cy <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sy <span class="token operator">+</span> <span class="token number">.5</span> <span class="token operator">+</span> dy<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> y<span class="token punctuation">)</span> <span class="token operator">/</span> h <span class="token operator">-</span> <span class="token number">.5</span><span class="token punctuation">)</span> <span class="token operator">+</span> cam<span class="token punctuation">.</span>d<span class="token punctuation">;</span>
            <span class="token comment">// 递归求解辐射度</span>
            r <span class="token operator">=</span> r <span class="token operator">+</span>
                <span class="token function">radiance</span><span class="token punctuation">(</span><span class="token function">Ray</span><span class="token punctuation">(</span>cam<span class="token punctuation">.</span>o <span class="token operator">+</span> d <span class="token operator">*</span> <span class="token number">140</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span><span class="token function">norm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Xi<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">/</span> samps<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// 累加颜色</span>
          c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">Vec</span><span class="token punctuation">(</span><span class="token function">clamp</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">clamp</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">clamp</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.25</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 输出到文件</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Writing to file...&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  FILE <span class="token operator">*</span>f <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">&quot;image.ppm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">fprintf</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">&quot;P3\\n%d %d\\n%d\\n&quot;</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> w <span class="token operator">*</span> h<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">&quot;%d %d %d &quot;</span><span class="token punctuation">,</span> <span class="token function">toInt</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">toInt</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">toInt</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Done!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(t,[["render",e],["__file","smallpt.html.vue"]]),r=JSON.parse('{"path":"/tech/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E6%B8%B2%E6%9F%93/smallpt.html","title":"smallpt","lang":"zh-CN","frontmatter":{"description":"smallpt","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/%E5%9B%BE%E5%BD%A2%E5%AD%A6/%E6%B8%B2%E6%9F%93/smallpt.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"smallpt"}],["meta",{"property":"og:description","content":"smallpt"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"smallpt\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[],"readingTime":{"minutes":4.73,"words":1419},"filePathRelative":"tech/图形学/渲染/smallpt.md","excerpt":"\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;math.h&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdlib.h&gt;</span></span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token keyword\\">using</span> <span class=\\"token keyword\\">namespace</span> std<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">define</span> <span class=\\"token macro-name\\">M_PI</span> <span class=\\"token expression\\"><span class=\\"token number\\">3.1415926</span></span></span>\\n<span class=\\"token comment\\">// 向量</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Vec</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">double</span> x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">,</span> z<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> x_ <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">double</span> y_ <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">double</span> z_ <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">x</span><span class=\\"token punctuation\\">(</span>x_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">y</span><span class=\\"token punctuation\\">(</span>y_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">z</span><span class=\\"token punctuation\\">(</span>z_<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  Vec <span class=\\"token keyword\\">operator</span><span class=\\"token operator\\">+</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Vec <span class=\\"token operator\\">&amp;</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">,</span> z <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  Vec <span class=\\"token keyword\\">operator</span><span class=\\"token operator\\">-</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Vec <span class=\\"token operator\\">&amp;</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">,</span> z <span class=\\"token operator\\">-</span> b<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 数乘</span>\\n  Vec <span class=\\"token keyword\\">operator</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">,</span> z <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 逐元素相乘</span>\\n  Vec <span class=\\"token function\\">mult</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Vec <span class=\\"token operator\\">&amp;</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">,</span> z <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 归一化</span>\\n  Vec <span class=\\"token operator\\">&amp;</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">*</span><span class=\\"token keyword\\">this</span> <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">*</span><span class=\\"token keyword\\">this</span> <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">/</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">*</span> x <span class=\\"token operator\\">+</span> y <span class=\\"token operator\\">*</span> y <span class=\\"token operator\\">+</span> z <span class=\\"token operator\\">*</span> z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 点乘</span>\\n  <span class=\\"token keyword\\">double</span> <span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Vec <span class=\\"token operator\\">&amp;</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">+</span> y <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">+</span> z <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 叉乘</span>\\n  Vec <span class=\\"token function\\">cross</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Vec <span class=\\"token operator\\">&amp;</span>b<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>y <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>z <span class=\\"token operator\\">-</span> z <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">,</span> z <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">-</span> x <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">,</span> x <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">-</span> y <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 射线</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Ray</span> <span class=\\"token punctuation\\">{</span>\\n  Vec o<span class=\\"token punctuation\\">,</span> d<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 射线起点和方向</span>\\n  <span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>Vec o_<span class=\\"token punctuation\\">,</span> Vec d_<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">o</span><span class=\\"token punctuation\\">(</span>o_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">d</span><span class=\\"token punctuation\\">(</span>d_<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 材质类型 DIFF:漫反射 SPEC:镜面反射 REFR:折射</span>\\n<span class=\\"token keyword\\">enum</span> <span class=\\"token class-name\\">Refl_t</span> <span class=\\"token punctuation\\">{</span> DIFF<span class=\\"token punctuation\\">,</span> SPEC<span class=\\"token punctuation\\">,</span> REFR <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 球体</span>\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Sphere</span> <span class=\\"token punctuation\\">{</span>\\n <span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n  <span class=\\"token keyword\\">double</span> rad<span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">// 半径</span>\\n  Vec p<span class=\\"token punctuation\\">,</span> e<span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 位置，辐射，颜色</span>\\n  Refl_t refl<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 反射类型</span>\\n  <span class=\\"token comment\\">/**\\n   * @brief Construct a new Sphere object\\n   * @param rad_ 半径\\n   * @param p_ 位置\\n   * @param e_ 辐射， 用于光源， 大部分物体为0\\n   * @param c_ 颜色\\n   * @param refl_ 反射类型\\n   */</span>\\n  <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> rad_<span class=\\"token punctuation\\">,</span> Vec p_<span class=\\"token punctuation\\">,</span> Vec e_<span class=\\"token punctuation\\">,</span> Vec c_<span class=\\"token punctuation\\">,</span> Refl_t refl_<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token operator\\">:</span> <span class=\\"token function\\">rad</span><span class=\\"token punctuation\\">(</span>rad_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">p</span><span class=\\"token punctuation\\">(</span>p_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">e</span><span class=\\"token punctuation\\">(</span>e_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">c</span><span class=\\"token punctuation\\">(</span>c_<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">refl</span><span class=\\"token punctuation\\">(</span>refl_<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">/**\\n   * @brief 求解射线和球体的交点\\n   *\\n   * @param r 射线\\n   * @return double 交点距离，0表示无交点\\n   */</span>\\n  <span class=\\"token keyword\\">double</span> <span class=\\"token function\\">intersect</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Ray <span class=\\"token operator\\">&amp;</span>r<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>\\n    Vec op <span class=\\"token operator\\">=</span> p <span class=\\"token operator\\">-</span> r<span class=\\"token punctuation\\">.</span>o<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 求解t^2*d.d + 2*t*(o-p).d + (o-p).(o-p)-R^2 = 0</span>\\n    <span class=\\"token keyword\\">double</span> t<span class=\\"token punctuation\\">,</span> eps <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1e-4</span><span class=\\"token punctuation\\">,</span> b <span class=\\"token operator\\">=</span> op<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> det <span class=\\"token operator\\">=</span> b <span class=\\"token operator\\">*</span> b <span class=\\"token operator\\">-</span> op<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>op<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> rad <span class=\\"token operator\\">*</span> rad<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>det <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">else</span>\\n      det <span class=\\"token operator\\">=</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>det<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>t <span class=\\"token operator\\">=</span> b <span class=\\"token operator\\">-</span> det<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> eps <span class=\\"token operator\\">?</span> t <span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>t <span class=\\"token operator\\">=</span> b <span class=\\"token operator\\">+</span> det<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> eps <span class=\\"token operator\\">?</span> t <span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 场景中的球体</span>\\nSphere spheres<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">40.8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.25</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.25</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n           DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 左边的红色墙</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1e5</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">99</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">40.8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">.25</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.25</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n           DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 右边的蓝色墙</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">40.8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n           DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 后面的灰色墙</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">40.8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1e5</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">170</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 前面的墙</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 地板</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1e5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1e5</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">.75</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n           DIFF<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 顶部</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">16.5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">27</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">16.5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">47</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">.999</span><span class=\\"token punctuation\\">,</span> SPEC<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 镜子</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">16.5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">73</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">16.5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">78</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">.999</span><span class=\\"token punctuation\\">,</span> REFR<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>  <span class=\\"token comment\\">// 玻璃</span>\\n    <span class=\\"token function\\">Sphere</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">600</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">681.6</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">.27</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">81.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">12</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n           DIFF<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\">// 光源</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token comment\\">// 随机数</span>\\n<span class=\\"token keyword\\">double</span> <span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">unsigned</span> <span class=\\"token keyword\\">short</span> xsubi<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">rand</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span><span class=\\"token punctuation\\">)</span>RAND_MAX<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 限制x的范围在0-1之间</span>\\n<span class=\\"token keyword\\">inline</span> <span class=\\"token keyword\\">double</span> <span class=\\"token function\\">clamp</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> x <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">:</span> x <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">?</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> x<span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 将double转换为int</span>\\n<span class=\\"token keyword\\">inline</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">toInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">pow</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">clamp</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2.2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">255</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">.5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 求解射线和物体的交点</span>\\n<span class=\\"token keyword\\">inline</span> <span class=\\"token keyword\\">bool</span> <span class=\\"token function\\">intersect</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Ray <span class=\\"token operator\\">&amp;</span>r<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">double</span> <span class=\\"token operator\\">&amp;</span>t<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">&amp;</span>id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">double</span> n <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>spheres<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>Sphere<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> d<span class=\\"token punctuation\\">,</span> inf <span class=\\"token operator\\">=</span> t <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1e20</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>d <span class=\\"token operator\\">=</span> spheres<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intersect</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> d <span class=\\"token operator\\">&lt;</span> t<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      t <span class=\\"token operator\\">=</span> d<span class=\\"token punctuation\\">;</span>\\n      id <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> t <span class=\\"token operator\\">&lt;</span> inf<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 求解光线的辐射度, r: 光线, depth: 递归深度, Xi: 随机数</span>\\nVec <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> Ray <span class=\\"token operator\\">&amp;</span>r<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> depth<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">unsigned</span> <span class=\\"token keyword\\">short</span> <span class=\\"token operator\\">*</span>Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>depth <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">double</span> t<span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// 距离</span>\\n  <span class=\\"token keyword\\">int</span> id <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 碰撞的物体id</span>\\n  <span class=\\"token comment\\">// 无碰撞</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span><span class=\\"token function\\">intersect</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">,</span> id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> Sphere <span class=\\"token operator\\">&amp;</span>obj <span class=\\"token operator\\">=</span> spheres<span class=\\"token punctuation\\">[</span>id<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 碰撞的物体</span>\\n  Vec x <span class=\\"token operator\\">=</span> r<span class=\\"token punctuation\\">.</span>o <span class=\\"token operator\\">+</span> r<span class=\\"token punctuation\\">.</span>d <span class=\\"token operator\\">*</span> t<span class=\\"token punctuation\\">,</span> n <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">-</span> obj<span class=\\"token punctuation\\">.</span>p<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n      nl <span class=\\"token operator\\">=</span> n<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> n <span class=\\"token operator\\">:</span> n <span class=\\"token operator\\">*</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> f <span class=\\"token operator\\">=</span> obj<span class=\\"token punctuation\\">.</span>c<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">double</span> p <span class=\\"token operator\\">=</span> f<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">&gt;</span> f<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">&amp;&amp;</span> f<span class=\\"token punctuation\\">.</span>x <span class=\\"token operator\\">&gt;</span> f<span class=\\"token punctuation\\">.</span>z <span class=\\"token operator\\">?</span> f<span class=\\"token punctuation\\">.</span>x\\n             <span class=\\"token operator\\">:</span> f<span class=\\"token punctuation\\">.</span>y <span class=\\"token operator\\">&gt;</span> f<span class=\\"token punctuation\\">.</span>z            <span class=\\"token operator\\">?</span> f<span class=\\"token punctuation\\">.</span>y\\n                                    <span class=\\"token operator\\">:</span> f<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 最大反射率</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">++</span>depth <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> p<span class=\\"token punctuation\\">)</span>\\n      f <span class=\\"token operator\\">=</span> f <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">/</span> p<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">else</span>\\n      <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>e<span class=\\"token punctuation\\">;</span>        <span class=\\"token comment\\">// R.R.</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>refl <span class=\\"token operator\\">==</span> DIFF<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>  <span class=\\"token comment\\">// 漫反射</span>\\n    <span class=\\"token keyword\\">double</span> r1 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> M_PI <span class=\\"token operator\\">*</span> <span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> r2 <span class=\\"token operator\\">=</span> <span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> r2s <span class=\\"token operator\\">=</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>r2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    Vec w <span class=\\"token operator\\">=</span> nl<span class=\\"token punctuation\\">,</span> u <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">fabs</span><span class=\\"token punctuation\\">(</span>w<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">.1</span> <span class=\\"token operator\\">?</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">cross</span><span class=\\"token punctuation\\">(</span>w<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        v <span class=\\"token operator\\">=</span> w<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">cross</span><span class=\\"token punctuation\\">(</span>u<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    Vec d <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>u <span class=\\"token operator\\">*</span> <span class=\\"token function\\">cos</span><span class=\\"token punctuation\\">(</span>r1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> r2s <span class=\\"token operator\\">+</span> v <span class=\\"token operator\\">*</span> <span class=\\"token function\\">sin</span><span class=\\"token punctuation\\">(</span>r1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> r2s <span class=\\"token operator\\">+</span> w <span class=\\"token operator\\">*</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> r2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>e <span class=\\"token operator\\">+</span> f<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mult</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">.</span>refl <span class=\\"token operator\\">==</span> SPEC<span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\">// 镜面反射</span>\\n    <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>e <span class=\\"token operator\\">+</span>\\n           f<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mult</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span>d <span class=\\"token operator\\">-</span> n <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> n<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  Ray <span class=\\"token function\\">reflRay</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">.</span>d <span class=\\"token operator\\">-</span> n <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> n<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// 折射</span>\\n  <span class=\\"token keyword\\">bool</span> into <span class=\\"token operator\\">=</span> n<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>nl<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>                 <span class=\\"token comment\\">// 从外部到内部</span>\\n  <span class=\\"token keyword\\">double</span> nc <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> nt <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1.5</span><span class=\\"token punctuation\\">,</span> nnt <span class=\\"token operator\\">=</span> into <span class=\\"token operator\\">?</span> nc <span class=\\"token operator\\">/</span> nt <span class=\\"token operator\\">:</span> nt <span class=\\"token operator\\">/</span> nc<span class=\\"token punctuation\\">,</span> ddn <span class=\\"token operator\\">=</span> r<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>nl<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n         cos2t<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>cos2t <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> nnt <span class=\\"token operator\\">*</span> nnt <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> ddn <span class=\\"token operator\\">*</span> ddn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token comment\\">// 全反射</span>\\n    <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>e <span class=\\"token operator\\">+</span> f<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mult</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span>reflRay<span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  Vec tdir <span class=\\"token operator\\">=</span>\\n      <span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>d <span class=\\"token operator\\">*</span> nnt <span class=\\"token operator\\">-</span> n <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>into <span class=\\"token operator\\">?</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span>ddn <span class=\\"token operator\\">*</span> nnt <span class=\\"token operator\\">+</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>cos2t<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">double</span> a <span class=\\"token operator\\">=</span> nt <span class=\\"token operator\\">-</span> nc<span class=\\"token punctuation\\">,</span> b <span class=\\"token operator\\">=</span> nt <span class=\\"token operator\\">+</span> nc<span class=\\"token punctuation\\">,</span> R0 <span class=\\"token operator\\">=</span> a <span class=\\"token operator\\">*</span> a <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>b <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n         c <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> <span class=\\"token punctuation\\">(</span>into <span class=\\"token operator\\">?</span> <span class=\\"token operator\\">-</span>ddn <span class=\\"token operator\\">:</span> tdir<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dot</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">double</span> Re <span class=\\"token operator\\">=</span> R0 <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> R0<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> c <span class=\\"token operator\\">*</span> c <span class=\\"token operator\\">*</span> c <span class=\\"token operator\\">*</span> c <span class=\\"token operator\\">*</span> c<span class=\\"token punctuation\\">,</span> Tr <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> Re<span class=\\"token punctuation\\">,</span> P <span class=\\"token operator\\">=</span> <span class=\\"token number\\">.25</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">.5</span> <span class=\\"token operator\\">*</span> Re<span class=\\"token punctuation\\">,</span>\\n         RP <span class=\\"token operator\\">=</span> Re <span class=\\"token operator\\">/</span> P<span class=\\"token punctuation\\">,</span> TP <span class=\\"token operator\\">=</span> Tr <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> P<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> obj<span class=\\"token punctuation\\">.</span>e <span class=\\"token operator\\">+</span>\\n         f<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">mult</span><span class=\\"token punctuation\\">(</span>depth <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span>\\n                    <span class=\\"token operator\\">?</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> P <span class=\\"token operator\\">?</span> <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span>reflRay<span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> RP\\n                                       <span class=\\"token operator\\">:</span> <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> tdir<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> TP<span class=\\"token punctuation\\">)</span>\\n                    <span class=\\"token operator\\">:</span> <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span>reflRay<span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> Re <span class=\\"token operator\\">+</span>\\n                          <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> tdir<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> depth<span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> Tr<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">void</span> <span class=\\"token function\\">renderProgressBar</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> y<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> h<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> samps<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">int</span> barWidth <span class=\\"token operator\\">=</span> <span class=\\"token number\\">70</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">double</span> progress <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">double</span><span class=\\"token punctuation\\">)</span>y <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">int</span> pos <span class=\\"token operator\\">=</span> barWidth <span class=\\"token operator\\">*</span> progress<span class=\\"token punctuation\\">;</span>\\n\\n  std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"\\\\r[\\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> barWidth<span class=\\"token punctuation\\">;</span> <span class=\\"token operator\\">++</span>i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> pos<span class=\\"token punctuation\\">)</span>\\n      std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"=\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">==</span> pos<span class=\\"token punctuation\\">)</span>\\n      std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"&gt;\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">else</span>\\n      std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"] \\"</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token keyword\\">int</span><span class=\\"token punctuation\\">(</span>progress <span class=\\"token operator\\">*</span> <span class=\\"token number\\">100.0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" % (\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> samps <span class=\\"token operator\\">*</span> <span class=\\"token number\\">4</span> <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" spp)\\"</span><span class=\\"token punctuation\\">;</span>\\n  std<span class=\\"token double-colon punctuation\\">::</span>cout<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">flush</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> argc<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">char</span> <span class=\\"token operator\\">*</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Rendering...\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 图像宽高, 采样次数</span>\\n  <span class=\\"token keyword\\">int</span> w <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1024</span><span class=\\"token punctuation\\">,</span> h <span class=\\"token operator\\">=</span> <span class=\\"token number\\">768</span><span class=\\"token punctuation\\">,</span> samps <span class=\\"token operator\\">=</span> argc <span class=\\"token operator\\">==</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">?</span> <span class=\\"token function\\">atoi</span><span class=\\"token punctuation\\">(</span>argv<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">4</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 相机位置和方向</span>\\n  Ray <span class=\\"token function\\">cam</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">52</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">295.6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">0.042612</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 摄像机坐标系,</span>\\n  Vec cx <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span>w <span class=\\"token operator\\">*</span> <span class=\\"token number\\">.5135</span> <span class=\\"token operator\\">/</span> h<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> cy <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>cx<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">cross</span><span class=\\"token punctuation\\">(</span>cam<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">.5135</span><span class=\\"token punctuation\\">,</span> r<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token operator\\">*</span>c <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> Vec<span class=\\"token punctuation\\">[</span>w <span class=\\"token operator\\">*</span> h<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 多线程</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">pragma</span> <span class=\\"token expression\\">omp parallel <span class=\\"token keyword\\">for</span> <span class=\\"token function\\">schedule</span><span class=\\"token punctuation\\">(</span>dynamic<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">private</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">)</span></span></span>\\n  <span class=\\"token comment\\">// 循环每一行</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> y <span class=\\"token operator\\">&lt;</span> h<span class=\\"token punctuation\\">;</span> y<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">renderProgressBar</span><span class=\\"token punctuation\\">(</span>y<span class=\\"token punctuation\\">,</span> h<span class=\\"token punctuation\\">,</span> samps<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 循环每一列, XI用于随机数</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">unsigned</span> <span class=\\"token keyword\\">short</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">*</span> y <span class=\\"token operator\\">*</span> y<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> x <span class=\\"token operator\\">&lt;</span> w<span class=\\"token punctuation\\">;</span> x<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 2x2个子像素</span>\\n      <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> sy <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> i <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>h <span class=\\"token operator\\">-</span> y <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> w <span class=\\"token operator\\">+</span> x<span class=\\"token punctuation\\">;</span> sy <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> sy<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 2x2个子像素</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> sx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> sx <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> sx<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">,</span> r <span class=\\"token operator\\">=</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token comment\\">// 采样次数</span>\\n          <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> s <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> s <span class=\\"token operator\\">&lt;</span> samps<span class=\\"token punctuation\\">;</span> s<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">double</span> r1 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> <span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                   dx <span class=\\"token operator\\">=</span> r1 <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">?</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>r1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span> <span class=\\"token operator\\">-</span> r1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">double</span> r2 <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> <span class=\\"token function\\">erand48</span><span class=\\"token punctuation\\">(</span>Xi<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                   dy <span class=\\"token operator\\">=</span> r2 <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">?</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span>r2<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> <span class=\\"token function\\">sqrt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span> <span class=\\"token operator\\">-</span> r2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">//  产生随机光线</span>\\n            Vec d <span class=\\"token operator\\">=</span> cx <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>sx <span class=\\"token operator\\">+</span> <span class=\\"token number\\">.5</span> <span class=\\"token operator\\">+</span> dx<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">+</span> x<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> w <span class=\\"token operator\\">-</span> <span class=\\"token number\\">.5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n                    cy <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>sy <span class=\\"token operator\\">+</span> <span class=\\"token number\\">.5</span> <span class=\\"token operator\\">+</span> dy<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">+</span> y<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> h <span class=\\"token operator\\">-</span> <span class=\\"token number\\">.5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> cam<span class=\\"token punctuation\\">.</span>d<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token comment\\">// 递归求解辐射度</span>\\n            r <span class=\\"token operator\\">=</span> r <span class=\\"token operator\\">+</span>\\n                <span class=\\"token function\\">radiance</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Ray</span><span class=\\"token punctuation\\">(</span>cam<span class=\\"token punctuation\\">.</span>o <span class=\\"token operator\\">+</span> d <span class=\\"token operator\\">*</span> <span class=\\"token number\\">140</span><span class=\\"token punctuation\\">,</span> d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">norm</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> Xi<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1.</span> <span class=\\"token operator\\">/</span> samps<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n          <span class=\\"token punctuation\\">}</span>\\n          <span class=\\"token comment\\">// 累加颜色</span>\\n          c<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> c<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">Vec</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">clamp</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">clamp</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">clamp</span><span class=\\"token punctuation\\">(</span>r<span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">.25</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 输出到文件</span>\\n  cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Writing to file...\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n  FILE <span class=\\"token operator\\">*</span>f <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fopen</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"image.ppm\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"w\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">fprintf</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"P3\\\\n%d %d\\\\n%d\\\\n\\"</span><span class=\\"token punctuation\\">,</span> w<span class=\\"token punctuation\\">,</span> h<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">255</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> w <span class=\\"token operator\\">*</span> h<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">fprintf</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"%d %d %d \\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">toInt</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">toInt</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">toInt</span><span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>z<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Done!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> endl<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{i as comp,r as data};
