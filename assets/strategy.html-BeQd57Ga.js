import{_ as n,o as s,c as a,f as t}from"./app-B4LGNJZ0.js";const p={},e=t(`<h2 id="使用此设计模式的理由" tabindex="-1"><a class="header-anchor" href="#使用此设计模式的理由"><span>使用此设计模式的理由</span></a></h2><p>在这个示例程序中，我们使用了策略模式（Strategy Pattern）来实现不同的猜拳策略。策略模式的主要优点包括：</p><ol><li><strong>易于扩展</strong>：可以很容易地添加新的策略，而不需要修改现有的代码。</li><li><strong>提高代码的可读性和可维护性</strong>：将不同的算法封装在独立的类中，使得代码更加清晰。</li><li><strong>减少重复代码</strong>：通过使用策略模式，可以避免在多个地方重复相同的算法逻辑。</li></ol><h2 id="示例程序" tabindex="-1"><a class="header-anchor" href="#示例程序"><span>示例程序</span></a></h2><p>下面我们来看一段使用了 strategy 模式的示例程序。这段示例程序的功能是让电脑玩“猜拳&quot;游戏。</p><p>我们考虑了两种猜拳的策略。第一种策略是“如果这局猜拳获胜，那么下一局也出一样的手势&quot; (WinningStrategy), 这是一种稍微有些笨的策略；另外一种策略是“根据上一局的手势从概率上计算出下一局的手势&quot;（ ProbStrategy ）。</p><img src="https://www.plantuml.com/plantuml/svg/fLFBRiCW4BpxApWwYlW1dnBrqDmQAKrpY78WziP6jQ7YuTIg-kzTm2PswpwaNX3C3iFiWvKsJ1dRr4bUCwt9Xec2l2M4K88HmtDI8P9v_7WQuu8re3CyAIxAFkIuJwos42xuBGQMmvqIZCFJETuYx3sTwvrHKfIW7f6QLY64ZBEKDJ3Hamx0dd-WK7BXPML6CM6RCoX_syYTTvukXXoIzoG1PDmi-KBSx_UutcqUSDskrux5XG5rOJaGr606oiupbqJ0QqXmd8msjkZIAnVH6qPRoGid5Qf-u4AWWwY6CY0A7UL3GwvIJDDxKT1kOdl-vM2hvFcNvuVN-iR5MbAIMwL0cFbWnRMHgXkmuydFognJwWPaPvkqQWVwj6b_IQHc7QX-XDsCnlQ6sGqPPJ6tK5akScc5cHYlfOQlQ8cIdz5loewgwU3FdPtW180MfepveRpDewGq_D2CM0r9R1YbSeptDN1ef8J82lkAd_q3" alt=""><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// hand.ts</span>
<span class="token keyword">export</span> <span class="token keyword">enum</span> HandValue <span class="token punctuation">{</span>
  <span class="token constant">GUU</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token constant">CHO</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token constant">PAA</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Hand</span> <span class="token punctuation">{</span>
  <span class="token comment">//NOTE - 使用了单例模式</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> hand<span class="token operator">:</span> Hand<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">Hand</span><span class="token punctuation">(</span>HandValue<span class="token punctuation">.</span><span class="token constant">GUU</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Hand</span><span class="token punctuation">(</span>HandValue<span class="token punctuation">.</span><span class="token constant">CHO</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Hand</span><span class="token punctuation">(</span>HandValue<span class="token punctuation">.</span><span class="token constant">PAA</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> names<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;石头&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;剪刀&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;布&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> handValue<span class="token operator">:</span> HandValue<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token function">constructor</span><span class="token punctuation">(</span>handValue<span class="token operator">:</span> HandValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>handValue <span class="token operator">=</span> handValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">getHand</span><span class="token punctuation">(</span>handValue<span class="token operator">:</span> HandValue<span class="token punctuation">)</span><span class="token operator">:</span> Hand <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hand<span class="token punctuation">[</span>handValue<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">isStrongerThan</span><span class="token punctuation">(</span>h<span class="token operator">:</span> Hand<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fight</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">isWeakerThan</span><span class="token punctuation">(</span>h<span class="token operator">:</span> Hand<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fight</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">fight</span><span class="token punctuation">(</span>h<span class="token operator">:</span> Hand<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">===</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>handValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">===</span> h<span class="token punctuation">.</span>handValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Hand<span class="token punctuation">.</span>names<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>handValue<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Player <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./player&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WinningStrategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./winningStrategy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ProbStrategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./probStrategy&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> player1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;Taro&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">WinningStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> player2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Player</span><span class="token punctuation">(</span><span class="token string">&quot;Hana&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ProbStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextHand1 <span class="token operator">=</span> player1<span class="token punctuation">.</span><span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextHand2 <span class="token operator">=</span> player2<span class="token punctuation">.</span><span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nextHand1<span class="token punctuation">.</span><span class="token function">isStrongerThan</span><span class="token punctuation">(</span>nextHand2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Winner: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player1<span class="token punctuation">.</span><span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player2<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nextHand2<span class="token punctuation">.</span><span class="token function">isStrongerThan</span><span class="token punctuation">(</span>nextHand1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Winner: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>player2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player1<span class="token punctuation">.</span><span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player2<span class="token punctuation">.</span><span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Even...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player1<span class="token punctuation">.</span><span class="token function">even</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    player2<span class="token punctuation">.</span><span class="token function">even</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Total result:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>player1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>player2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output</span>
<span class="token comment">// player.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hand&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Strategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./strategy&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> strategy<span class="token operator">:</span> Strategy<span class="token punctuation">;</span>
  <span class="token keyword">private</span> wincount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> losecount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> gamecount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> strategy<span class="token operator">:</span> Strategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>strategy <span class="token operator">=</span> strategy<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Hand <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>strategy<span class="token punctuation">.</span><span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">win</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>strategy<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>wincount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gamecount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">lose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>strategy<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>losecount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gamecount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">even</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gamecount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>gamecount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> games, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>wincount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> win, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>losecount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> lose]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// probStrategy.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hand&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Strategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./strategy&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ProbStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> prevHandValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> currentHandValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> history<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Hand <span class="token punctuation">{</span>
    <span class="token keyword">const</span> bet <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> handvalue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bet <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      handvalue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bet <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      handvalue <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      handvalue <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>prevHandValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue <span class="token operator">=</span> handvalue<span class="token punctuation">;</span>
    <span class="token keyword">return</span> Hand<span class="token punctuation">.</span><span class="token function">getHand</span><span class="token punctuation">(</span>handvalue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">private</span> <span class="token function">getSum</span><span class="token punctuation">(</span>hv<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span>hv<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">study</span><span class="token punctuation">(</span>win<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>win<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>prevHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>prevHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>prevHandValue<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentHandValue <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// strategy.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hand&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>
  <span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Hand<span class="token punctuation">;</span>
  <span class="token function">study</span><span class="token punctuation">(</span>win<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// winningStrategy.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Hand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hand&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Strategy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./strategy&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WinningStrategy</span> <span class="token keyword">implements</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> won <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> prevHand<span class="token operator">:</span> Hand<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">nextHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Hand <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>won<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>prevHand <span class="token operator">=</span> Hand<span class="token punctuation">.</span><span class="token function">getHand</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prevHand<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">study</span><span class="token punctuation">(</span>win<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>won <span class="token operator">=</span> win<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果"><span>运行结果</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">..</span>.<span class="token punctuation">(</span>省略<span class="token punctuation">)</span>
Winner: <span class="token punctuation">[</span>Hana:9991 games, <span class="token number">3567</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Winner: <span class="token punctuation">[</span>Hana:9992 games, <span class="token number">3568</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Even<span class="token punctuation">..</span>.
Winner: <span class="token punctuation">[</span>Hana:9994 games, <span class="token number">3569</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Even<span class="token punctuation">..</span>.
Even<span class="token punctuation">..</span>.
Winner: <span class="token punctuation">[</span>Hana:9997 games, <span class="token number">3570</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Winner: <span class="token punctuation">[</span>Hana:9998 games, <span class="token number">3571</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Winner: <span class="token punctuation">[</span>Hana:9999 games, <span class="token number">3572</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
Total result:
<span class="token punctuation">[</span>Taro:10000 games, <span class="token number">3049</span> win, <span class="token number">3573</span> lose<span class="token punctuation">]</span>
<span class="token punctuation">[</span>Hana:10000 games, <span class="token number">3573</span> win, <span class="token number">3049</span> lose<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拓展思路的要点" tabindex="-1"><a class="header-anchor" href="#拓展思路的要点"><span>拓展思路的要点</span></a></h2><h3 id="为什么要特意编写-strategy" tabindex="-1"><a class="header-anchor" href="#为什么要特意编写-strategy"><span>为什么要特意编写 Strategy</span></a></h3><p>通常在编程时算法会被写在具体方法中。Strategy 模式却特意将算法与其他部分分离开来，只是定义了与算法相关的接口（API），然后在程序中以委托的方式来使用算法。</p><p>这样看起来程序好像变复杂了，其实不然。例如，当我们想要通过改善算法来提高算法的处理速度时，如果使用了 Strategy 模式，就不必修改 Strategy 角色的接口（API）了，仅仅修改 ConcreteStrategy 角色即可。而且，使用委托这种弱关联关系可以很方便地整体替换算法。例如，如果想比较原来的算法与改进后的算法的处理速度有多大区别，简单地替换下算法即可进行测试。</p><p>使用 Strategy 模式编写象棋程序时，可以方便地根据棋手的选择切换 AI 例程的水平。</p><h3 id="程序运行中也可以切换策略" tabindex="-1"><a class="header-anchor" href="#程序运行中也可以切换策略"><span>程序运行中也可以切换策略</span></a></h3><p>如果使用 Strategy 模式，在程序运行中也可以切换角色。例如，在内存容量少的运行环境中可以使用 SlowButLessMemoryStrategy（速度慢但省内存的策略），而在内存容量多的运行环境中则可以使用 FastButMoreMemoryStrategy（速度快但耗内存的策略）。</p><p>此外，还可以用某种算法去“验算”另外一种算法。例如，假设要在某个表格计算软件的开发版本中进行复杂的计算。这时，我们可以准备两种算法，即“高速但计算上可能有 Bug 的算法”和“低速但计算准确的算法”，然后让后者去验算前者的计算结果。</p><h2 id="相关的设计模式" tabindex="-1"><a class="header-anchor" href="#相关的设计模式"><span>相关的设计模式</span></a></h2><ul><li>Flyweight 模式</li><li>Abstract Factory 模式</li><li>State 模式</li></ul>`,20),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","strategy.html.vue"]]),r=JSON.parse('{"path":"/tech/DesignPatterns/strategy.html","title":"Strategy 模式","lang":"zh-CN","frontmatter":{"title":"Strategy 模式","date":"2024-10-25T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","TypeScript","分开考虑","整体的替换算法"],"prev":"./bridge","next":"./composite","description":"使用此设计模式的理由 在这个示例程序中，我们使用了策略模式（Strategy Pattern）来实现不同的猜拳策略。策略模式的主要优点包括： 易于扩展：可以很容易地添加新的策略，而不需要修改现有的代码。 提高代码的可读性和可维护性：将不同的算法封装在独立的类中，使得代码更加清晰。 减少重复代码：通过使用策略模式，可以避免在多个地方重复相同的算法逻辑。 ...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/DesignPatterns/strategy.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"Strategy 模式"}],["meta",{"property":"og:description","content":"使用此设计模式的理由 在这个示例程序中，我们使用了策略模式（Strategy Pattern）来实现不同的猜拳策略。策略模式的主要优点包括： 易于扩展：可以很容易地添加新的策略，而不需要修改现有的代码。 提高代码的可读性和可维护性：将不同的算法封装在独立的类中，使得代码更加清晰。 减少重复代码：通过使用策略模式，可以避免在多个地方重复相同的算法逻辑。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:tag","content":"分开考虑"}],["meta",{"property":"article:tag","content":"整体的替换算法"}],["meta",{"property":"article:published_time","content":"2024-10-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Strategy 模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"使用此设计模式的理由","slug":"使用此设计模式的理由","link":"#使用此设计模式的理由","children":[]},{"level":2,"title":"示例程序","slug":"示例程序","link":"#示例程序","children":[]},{"level":2,"title":"运行结果","slug":"运行结果","link":"#运行结果","children":[]},{"level":2,"title":"拓展思路的要点","slug":"拓展思路的要点","link":"#拓展思路的要点","children":[{"level":3,"title":"为什么要特意编写 Strategy","slug":"为什么要特意编写-strategy","link":"#为什么要特意编写-strategy","children":[]},{"level":3,"title":"程序运行中也可以切换策略","slug":"程序运行中也可以切换策略","link":"#程序运行中也可以切换策略","children":[]}]},{"level":2,"title":"相关的设计模式","slug":"相关的设计模式","link":"#相关的设计模式","children":[]}],"readingTime":{"minutes":4.53,"words":1359},"filePathRelative":"tech/DesignPatterns/strategy.md","localizedDate":"2024年10月25日","excerpt":"<h2>使用此设计模式的理由</h2>\\n<p>在这个示例程序中，我们使用了策略模式（Strategy Pattern）来实现不同的猜拳策略。策略模式的主要优点包括：</p>\\n<ol>\\n<li><strong>易于扩展</strong>：可以很容易地添加新的策略，而不需要修改现有的代码。</li>\\n<li><strong>提高代码的可读性和可维护性</strong>：将不同的算法封装在独立的类中，使得代码更加清晰。</li>\\n<li><strong>减少重复代码</strong>：通过使用策略模式，可以避免在多个地方重复相同的算法逻辑。</li>\\n</ol>\\n<h2>示例程序</h2>\\n<p>下面我们来看一段使用了 strategy 模式的示例程序。这段示例程序的功能是让电脑玩“猜拳\\"游戏。</p>","autoDesc":true}');export{k as comp,r as data};
