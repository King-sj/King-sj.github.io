import{_ as l,r as n,o as a,c as i,b as t,e as r,d,f as s}from"./app-DFDsyZGc.js";const h={},o=s('<h1 id="忙碌的河狸" tabindex="-1"><a class="header-anchor" href="#忙碌的河狸"><span>忙碌的河狸</span></a></h1><p>“忙碌的河狸”（Busy Beaver）是理论计算机科学中的一个著名难题：在所有规则数有限、最终会停机的图灵机中，哪台机器能在停机前运行最多步数？</p><h2 id="问题简介" tabindex="-1"><a class="header-anchor" href="#问题简介"><span>问题简介</span></a></h2><ul><li>1962年，数学家拉多提出“忙碌的河狸”问题，旨在寻找运行时间最长的停机程序。</li><li>忙碌的河狸数 BB(n) 表示 n 条规则下，图灵机在停机前能运行的最大步数。</li><li>随着规则数增加，图灵机数量呈爆炸式增长，BB(n) 也极其巨大且不可计算。</li><li>例如，BB(1)=1，BB(2)=6，BB(3)=21，BB(4)=107，BB(5) 已知下界超过4700万。</li></ul><h2 id="图灵机与停机问题" tabindex="-1"><a class="header-anchor" href="#图灵机与停机问题"><span>图灵机与停机问题</span></a></h2><ul><li>图灵机是一种理想化的计算模型，由阿兰·图灵提出。</li><li>停机问题指的是：是否存在算法能判断任意图灵机是否会停机？图灵证明不存在通用算法。</li><li>忙碌的河狸问题本质上是停机问题的极限版本。</li></ul><h2 id="数学与不可知" tabindex="-1"><a class="header-anchor" href="#数学与不可知"><span>数学与不可知</span></a></h2><ul><li>忙碌的河狸与停机问题、哥德巴赫猜想、黎曼猜想等数学难题有深刻联系。</li><li>某些图灵机的停机与著名猜想的真假直接相关。例如，存在“当且仅当哥德巴赫猜想不成立时停机”的图灵机。</li><li>忙碌的河狸为“不可知”的数学命题提供了具体的界限。BB(n) 的不可计算性揭示了数学世界的边界。</li></ul><h2 id="研究意义" tabindex="-1"><a class="header-anchor" href="#研究意义"><span>研究意义</span></a></h2><ul><li>通过研究 BB(n)，可以衡量数学问题的复杂度和可知性。</li><li>忙碌的河狸问题揭示了计算与数学证明的极限。</li><li>相关研究推动了对不可判定性、复杂性和数理逻辑的理解。</li></ul><h2 id="趣味与启示" tabindex="-1"><a class="header-anchor" href="#趣味与启示"><span>趣味与启示</span></a></h2><ul><li>忙碌的河狸问题虽源自娱乐，却成为严肃的科学研究对象。</li><li>它让我们直观地看到，计算与知识的边界究竟在哪里。</li><li>也提醒我们，简单规则下也能孕育出极其复杂和深刻的现象。</li></ul><h2 id="应用示例" tabindex="-1"><a class="header-anchor" href="#应用示例"><span>应用示例</span></a></h2><h3 id="_1-正例-可解问题" tabindex="-1"><a class="header-anchor" href="#_1-正例-可解问题"><span>1. 正例：可解问题</span></a></h3><p>假设我们要判断一个简单的数学命题：</p><blockquote><p>“存在一个偶数大于2，不能表示为两个质数之和。”</p></blockquote><p>我们可以构造一台图灵机：</p><ul><li>依次枚举偶数 n，从4开始。</li><li>对每个 n，遍历所有小于 n 的质数对，判断是否有 p+q=n。</li><li>如果找不到，则停机（说明命题为真）；如果一直能找到，则继续。</li></ul><p>如果这台图灵机最终停机，说明命题为真（存在反例）；如果永远不停止，则命题为假（哥德巴赫猜想成立）。</p><p><strong>但由于停机问题不可判定，我们无法预知这台机器是否会停机。</strong></p><h3 id="_2-反例-不可解问题" tabindex="-1"><a class="header-anchor" href="#_2-反例-不可解问题"><span>2. 反例：不可解问题</span></a></h3><p>考虑如下命题：</p><blockquote><p>“所有图灵机最终都会停机。”</p></blockquote><p>我们可以为每台图灵机构造一台“监控机”，让它模拟原图灵机的运行。</p><ul><li>如果原图灵机停机，则监控机停机。</li><li>如果原图灵机不停止，监控机也不停止。</li></ul><p>由于停机问题本身不可判定，忙碌的河狸问题也无法解决所有这类命题。</p><h3 id="_3-bb-n-的具体构造" tabindex="-1"><a class="header-anchor" href="#_3-bb-n-的具体构造"><span>3. BB(n) 的具体构造</span></a></h3><p>以 BB(2) 为例：</p><ul><li>只允许2条规则的图灵机。</li><li>穷举所有可能的规则组合，找到在停机前能运行最多步数的那台。</li><li>结果是 BB(2)=6。</li></ul><p><strong>图灵机构造示意：</strong></p><table><thead><tr><th>状态</th><th>读</th><th>写</th><th>移动</th><th>下一个状态</th></tr></thead><tbody><tr><td>A</td><td>0</td><td>1</td><td>右</td><td>B</td></tr><tr><td>B</td><td>0</td><td>1</td><td>左</td><td>A</td></tr><tr><td>A</td><td>1</td><td>1</td><td>右</td><td>停机</td></tr><tr><td>B</td><td>1</td><td>1</td><td>左</td><td>停机</td></tr></tbody></table><p>这台机器在停机前最多能写6个1。</p><hr><p>参考：</p>',34),p={href:"https://zhuanlan.zhihu.com/p/338370295",target:"_blank",rel:"noopener noreferrer"};function c(B,u){const e=n("ExternalLinkIcon");return a(),i("div",null,[o,t("ul",null,[t("li",null,[t("a",p,[r("知乎专栏：忙碌的河狸"),d(e)])])])])}const m=l(h,[["render",c],["__file","忙碌的河狸.html.vue"]]),b=JSON.parse('{"path":"/miscellaneous/%E5%BF%99%E7%A2%8C%E7%9A%84%E6%B2%B3%E7%8B%B8.html","title":"忙碌的河狸","lang":"zh-CN","frontmatter":{"title":"忙碌的河狸","category":["随笔"],"description":"忙碌的河狸 “忙碌的河狸”（Busy Beaver）是理论计算机科学中的一个著名难题：在所有规则数有限、最终会停机的图灵机中，哪台机器能在停机前运行最多步数？ 问题简介 1962年，数学家拉多提出“忙碌的河狸”问题，旨在寻找运行时间最长的停机程序。 忙碌的河狸数 BB(n) 表示 n 条规则下，图灵机在停机前能运行的最大步数。 随着规则数增加，图灵机数...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/miscellaneous/%E5%BF%99%E7%A2%8C%E7%9A%84%E6%B2%B3%E7%8B%B8.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"忙碌的河狸"}],["meta",{"property":"og:description","content":"忙碌的河狸 “忙碌的河狸”（Busy Beaver）是理论计算机科学中的一个著名难题：在所有规则数有限、最终会停机的图灵机中，哪台机器能在停机前运行最多步数？ 问题简介 1962年，数学家拉多提出“忙碌的河狸”问题，旨在寻找运行时间最长的停机程序。 忙碌的河狸数 BB(n) 表示 n 条规则下，图灵机在停机前能运行的最大步数。 随着规则数增加，图灵机数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"忙碌的河狸\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"问题简介","slug":"问题简介","link":"#问题简介","children":[]},{"level":2,"title":"图灵机与停机问题","slug":"图灵机与停机问题","link":"#图灵机与停机问题","children":[]},{"level":2,"title":"数学与不可知","slug":"数学与不可知","link":"#数学与不可知","children":[]},{"level":2,"title":"研究意义","slug":"研究意义","link":"#研究意义","children":[]},{"level":2,"title":"趣味与启示","slug":"趣味与启示","link":"#趣味与启示","children":[]},{"level":2,"title":"应用示例","slug":"应用示例","link":"#应用示例","children":[{"level":3,"title":"1. 正例：可解问题","slug":"_1-正例-可解问题","link":"#_1-正例-可解问题","children":[]},{"level":3,"title":"2. 反例：不可解问题","slug":"_2-反例-不可解问题","link":"#_2-反例-不可解问题","children":[]},{"level":3,"title":"3. BB(n) 的具体构造","slug":"_3-bb-n-的具体构造","link":"#_3-bb-n-的具体构造","children":[]}]}],"readingTime":{"minutes":3.21,"words":962},"filePathRelative":"miscellaneous/忙碌的河狸.md","excerpt":"\\n<p>“忙碌的河狸”（Busy Beaver）是理论计算机科学中的一个著名难题：在所有规则数有限、最终会停机的图灵机中，哪台机器能在停机前运行最多步数？</p>\\n<h2>问题简介</h2>\\n<ul>\\n<li>1962年，数学家拉多提出“忙碌的河狸”问题，旨在寻找运行时间最长的停机程序。</li>\\n<li>忙碌的河狸数 BB(n) 表示 n 条规则下，图灵机在停机前能运行的最大步数。</li>\\n<li>随着规则数增加，图灵机数量呈爆炸式增长，BB(n) 也极其巨大且不可计算。</li>\\n<li>例如，BB(1)=1，BB(2)=6，BB(3)=21，BB(4)=107，BB(5) 已知下界超过4700万。</li>\\n</ul>","autoDesc":true}');export{m as comp,b as data};
