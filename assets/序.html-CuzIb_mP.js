import{_ as t,o as e,c as o,f as n}from"./app-CgIfAacr.js";const r={},s=n('<h1 id="序" tabindex="-1"><a class="header-anchor" href="#序"><span>序</span></a></h1><p>程序员可以分为三个层次：普通程序员、工程师和架构师。</p><p>架构师和程序员的区别，在于以下几个方面：</p><ul><li><strong>简单 vs. 简陋</strong>：简单是经过深思熟虑后的极简，简陋则是缺乏设计的粗糙。</li><li><strong>平衡 vs. 妥协</strong>：平衡是在多种需求间找到最优解，妥协则是放弃原则的让步。</li><li><strong>迭代 vs. 半成品</strong>：迭代是持续优化，半成品则是未完成的工作。</li></ul><blockquote><p>本文为《架构整洁之道》读书笔记，整理核心观点，便于回顾与思考。</p></blockquote>',5),a=[s];function i(l,c){return e(),o("div",null,a)}const g=t(r,[["render",i],["__file","序.html.vue"]]),h=JSON.parse('{"path":"/reading-notes/%E6%9E%B6%E6%9E%84%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/%E5%BA%8F.html","title":"序","lang":"zh-CN","frontmatter":{"title":"序","category":["读书笔记"],"description":"序 程序员可以分为三个层次：普通程序员、工程师和架构师。 架构师和程序员的区别，在于以下几个方面： 简单 vs. 简陋：简单是经过深思熟虑后的极简，简陋则是缺乏设计的粗糙。 平衡 vs. 妥协：平衡是在多种需求间找到最优解，妥协则是放弃原则的让步。 迭代 vs. 半成品：迭代是持续优化，半成品则是未完成的工作。 本文为《架构整洁之道》读书笔记，整理核心...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/reading-notes/%E6%9E%B6%E6%9E%84%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93/%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"序"}],["meta",{"property":"og:description","content":"序 程序员可以分为三个层次：普通程序员、工程师和架构师。 架构师和程序员的区别，在于以下几个方面： 简单 vs. 简陋：简单是经过深思熟虑后的极简，简陋则是缺乏设计的粗糙。 平衡 vs. 妥协：平衡是在多种需求间找到最优解，妥协则是放弃原则的让步。 迭代 vs. 半成品：迭代是持续优化，半成品则是未完成的工作。 本文为《架构整洁之道》读书笔记，整理核心..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.53,"words":158},"filePathRelative":"reading-notes/架构整洁之道/序.md","excerpt":"\\n<p>程序员可以分为三个层次：普通程序员、工程师和架构师。</p>\\n<p>架构师和程序员的区别，在于以下几个方面：</p>\\n<ul>\\n<li><strong>简单 vs. 简陋</strong>：简单是经过深思熟虑后的极简，简陋则是缺乏设计的粗糙。</li>\\n<li><strong>平衡 vs. 妥协</strong>：平衡是在多种需求间找到最优解，妥协则是放弃原则的让步。</li>\\n<li><strong>迭代 vs. 半成品</strong>：迭代是持续优化，半成品则是未完成的工作。</li>\\n</ul>\\n<blockquote>\\n<p>本文为《架构整洁之道》读书笔记，整理核心观点，便于回顾与思考。</p>\\n</blockquote>","autoDesc":true}');export{g as comp,h as data};
