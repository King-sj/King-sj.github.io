import{_ as n,o as a,c as s,f as t}from"./app-DFDsyZGc.js";const p={},e=t(`<h1 id="跨站请求伪造-csrf" tabindex="-1"><a class="header-anchor" href="#跨站请求伪造-csrf"><span>跨站请求伪造（CSRF）</span></a></h1><p>CSRF（Cross-Site Request Forgery，跨站请求伪造）是一种攻击方式，攻击者诱导已登录受信任网站的用户，在不知情的情况下发送恶意请求，从而在用户已认证的情况下执行非本意的操作。</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>攻击者通过构造与受害网站相同的请求，诱导用户点击链接或访问页面，利用用户已登录的身份在后台发起请求，达到攻击目的。</p><h2 id="错误编码示例" tabindex="-1"><a class="header-anchor" href="#错误编码示例"><span>错误编码示例</span></a></h2><p>如下是易受 CSRF 攻击的 Kotlin 后端代码示例：</p><div class="language-kotlin line-numbers-mode" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="token comment">// 未做任何 CSRF 防护的 Spring Controller</span>
<span class="token annotation builtin">@RestController</span>
<span class="token keyword">class</span> TransferController <span class="token punctuation">{</span>

    <span class="token annotation builtin">@PostMapping</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;/transfer&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">fun</span> <span class="token function">transfer</span><span class="token punctuation">(</span>
        <span class="token annotation builtin">@RequestParam</span> <span class="token keyword">to</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
        <span class="token annotation builtin">@RequestParam</span> amount<span class="token operator">:</span> Int
    <span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span>
        <span class="token comment">// 直接处理转账请求，未校验 CSRF Token</span>
        <span class="token comment">// 实际业务逻辑略</span>
        <span class="token keyword">return</span> <span class="token string-literal singleline"><span class="token string">&quot;转账成功&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码没有对 CSRF Token 进行校验，攻击者可诱导用户在已登录状态下发起恶意请求，导致资金被盗。</p><h2 id="安全编码方式" tabindex="-1"><a class="header-anchor" href="#安全编码方式"><span>安全编码方式</span></a></h2><ol><li>校验 Referer 或 Origin 头部。</li><li>使用 CSRF Token（推荐）。</li><li>对敏感操作要求二次验证。</li></ol><p><strong>CSRF Token 示例：</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/transfer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>to<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attacker<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hidden<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>csrf_token<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{csrf_token}}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>转账<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="攻击例子" tabindex="-1"><a class="header-anchor" href="#攻击例子"><span>攻击例子</span></a></h2><p>攻击者可通过如下方式诱导用户发起请求：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://bank.com/transfer?to=attacker&amp;amount=1000<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或伪造表单自动提交：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://bank.com/transfer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>csrfForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>to<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attacker<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1000<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;csrfForm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[e];function l(c,u){return a(),s("div",null,o)}const r=n(p,[["render",l],["__file","csrf.html.vue"]]),k=JSON.parse('{"path":"/tech/%E5%AE%89%E5%85%A8/csrf.html","title":"CSRF（跨站请求伪造）","lang":"zh-CN","frontmatter":{"title":"CSRF（跨站请求伪造）","date":"2025-06-26T00:00:00.000Z","category":["安全"],"description":"跨站请求伪造（CSRF） CSRF（Cross-Site Request Forgery，跨站请求伪造）是一种攻击方式，攻击者诱导已登录受信任网站的用户，在不知情的情况下发送恶意请求，从而在用户已认证的情况下执行非本意的操作。 原理 攻击者通过构造与受害网站相同的请求，诱导用户点击链接或访问页面，利用用户已登录的身份在后台发起请求，达到攻击目的。 错误...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/%E5%AE%89%E5%85%A8/csrf.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"CSRF（跨站请求伪造）"}],["meta",{"property":"og:description","content":"跨站请求伪造（CSRF） CSRF（Cross-Site Request Forgery，跨站请求伪造）是一种攻击方式，攻击者诱导已登录受信任网站的用户，在不知情的情况下发送恶意请求，从而在用户已认证的情况下执行非本意的操作。 原理 攻击者通过构造与受害网站相同的请求，诱导用户点击链接或访问页面，利用用户已登录的身份在后台发起请求，达到攻击目的。 错误..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:published_time","content":"2025-06-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSRF（跨站请求伪造）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"错误编码示例","slug":"错误编码示例","link":"#错误编码示例","children":[]},{"level":2,"title":"安全编码方式","slug":"安全编码方式","link":"#安全编码方式","children":[]},{"level":2,"title":"攻击例子","slug":"攻击例子","link":"#攻击例子","children":[]}],"readingTime":{"minutes":1.34,"words":401},"filePathRelative":"tech/安全/csrf.md","localizedDate":"2025年6月26日","excerpt":"\\n<p>CSRF（Cross-Site Request Forgery，跨站请求伪造）是一种攻击方式，攻击者诱导已登录受信任网站的用户，在不知情的情况下发送恶意请求，从而在用户已认证的情况下执行非本意的操作。</p>\\n<h2>原理</h2>\\n<p>攻击者通过构造与受害网站相同的请求，诱导用户点击链接或访问页面，利用用户已登录的身份在后台发起请求，达到攻击目的。</p>\\n<h2>错误编码示例</h2>\\n<p>如下是易受 CSRF 攻击的 Kotlin 后端代码示例：</p>\\n<div class=\\"language-kotlin\\" data-ext=\\"kt\\" data-title=\\"kt\\"><pre class=\\"language-kotlin\\"><code><span class=\\"token comment\\">// 未做任何 CSRF 防护的 Spring Controller</span>\\n<span class=\\"token annotation builtin\\">@RestController</span>\\n<span class=\\"token keyword\\">class</span> TransferController <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation builtin\\">@PostMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"/transfer\\"</span></span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">transfer</span><span class=\\"token punctuation\\">(</span>\\n        <span class=\\"token annotation builtin\\">@RequestParam</span> <span class=\\"token keyword\\">to</span><span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token annotation builtin\\">@RequestParam</span> amount<span class=\\"token operator\\">:</span> Int\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> String <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 直接处理转账请求，未校验 CSRF Token</span>\\n        <span class=\\"token comment\\">// 实际业务逻辑略</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"转账成功\\"</span></span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,k as data};
