import{_ as a,r as t,o as e,c as p,b as n,e as o,d as l,f as c}from"./app-DkfD2H4x.js";const i={},u=c(`<h1 id="如何制作在不同背景下显示不同内容的图片" tabindex="-1"><a class="header-anchor" href="#如何制作在不同背景下显示不同内容的图片"><span>如何制作在不同背景下显示不同内容的图片</span></a></h1><p>有时我们希望一张图片在浅色背景和深色背景下显示不同内容。可以通过像素级处理，将一张输入图片转换为在不同背景下显示不同内容的 PNG。</p><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h2><ul><li>通过分析每个像素的亮度，将图片分为“亮色部分”和“暗色部分”。</li><li>亮色像素处理为半透明白色，适合深色背景下突出显示。</li><li>暗色像素处理为半透明黑色，适合浅色背景下突出显示。</li><li>这样一张图片在不同背景下会呈现不同的视觉效果。</li><li>该方法本质上利用了 PNG 的透明通道和人眼对亮度的感知差异。</li></ul><h2 id="python-实现代码" tabindex="-1"><a class="header-anchor" href="#python-实现代码"><span>Python 实现代码</span></a></h2><p>下面的代码以 Pillow 为例，输入一张图片 <code>input.png</code>，输出一张适合不同背景的图片 <code>output.png</code>。思路是：</p><ul><li>将图片分为亮色和暗色部分，分别调整透明度。</li><li>亮色内容在深色背景下突出，暗色内容在浅色背景下突出。</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image

<span class="token keyword">def</span> <span class="token function">make_diff_bg_img</span><span class="token punctuation">(</span>input_path<span class="token punctuation">,</span> output_path<span class="token punctuation">,</span> threshold<span class="token operator">=</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    输入一张图片，将其处理为在不同背景下显示不同内容的PNG。
    亮色像素变为半透明白色，适合深色背景；
    暗色像素变为半透明黑色，适合浅色背景。
    &quot;&quot;&quot;</span>
    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">&#39;RGBA&#39;</span><span class="token punctuation">)</span>
    w<span class="token punctuation">,</span> h <span class="token operator">=</span> img<span class="token punctuation">.</span>size
    pixels <span class="token operator">=</span> img<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">:</span>
            r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">=</span> pixels<span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span>
            gray <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">0.299</span><span class="token operator">*</span>r <span class="token operator">+</span> <span class="token number">0.587</span><span class="token operator">*</span>g <span class="token operator">+</span> <span class="token number">0.114</span><span class="token operator">*</span>b<span class="token punctuation">)</span>
            <span class="token keyword">if</span> gray <span class="token operator">&gt;</span> threshold<span class="token punctuation">:</span>
                <span class="token comment"># 亮色像素，变为半透明白色</span>
                pixels<span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token comment"># 暗色像素，变为半透明黑色</span>
                pixels<span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>

<span class="token comment"># 用法示例</span>
make_diff_bg_img<span class="token punctuation">(</span><span class="token string">&#39;input.png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;output.png&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>input.png</code> 为原始图片，<code>output.png</code> 为处理后图片。</li><li>可根据实际需求调整 <code>threshold</code> 和透明度比例。</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,10),r={href:"https://vircloud.net/media/py-pic.html",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=t("ExternalLinkIcon");return e(),p("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[o("如何制作在不同背景下显示不同内容的图片"),l(s)])])])])}const v=a(i,[["render",d],["__file","如何制作在不同背景下显示不同内容的图片.html.vue"]]),b=JSON.parse('{"path":"/tech/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E5%9C%A8%E4%B8%8D%E5%90%8C%E8%83%8C%E6%99%AF%E4%B8%8B%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E5%86%85%E5%AE%B9%E7%9A%84%E5%9B%BE%E7%89%87.html","title":"如何制作在不同背景下显示不同内容的图片","lang":"zh-CN","frontmatter":{"title":"如何制作在不同背景下显示不同内容的图片","category":["图像处理"],"description":"如何制作在不同背景下显示不同内容的图片 有时我们希望一张图片在浅色背景和深色背景下显示不同内容。可以通过像素级处理，将一张输入图片转换为在不同背景下显示不同内容的 PNG。 实现原理 通过分析每个像素的亮度，将图片分为“亮色部分”和“暗色部分”。 亮色像素处理为半透明白色，适合深色背景下突出显示。 暗色像素处理为半透明黑色，适合浅色背景下突出显示。 这...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E5%9C%A8%E4%B8%8D%E5%90%8C%E8%83%8C%E6%99%AF%E4%B8%8B%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E5%86%85%E5%AE%B9%E7%9A%84%E5%9B%BE%E7%89%87.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"如何制作在不同背景下显示不同内容的图片"}],["meta",{"property":"og:description","content":"如何制作在不同背景下显示不同内容的图片 有时我们希望一张图片在浅色背景和深色背景下显示不同内容。可以通过像素级处理，将一张输入图片转换为在不同背景下显示不同内容的 PNG。 实现原理 通过分析每个像素的亮度，将图片分为“亮色部分”和“暗色部分”。 亮色像素处理为半透明白色，适合深色背景下突出显示。 暗色像素处理为半透明黑色，适合浅色背景下突出显示。 这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何制作在不同背景下显示不同内容的图片\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":2,"title":"Python 实现代码","slug":"python-实现代码","link":"#python-实现代码","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"readingTime":{"minutes":1.74,"words":521},"filePathRelative":"tech/如何制作在不同背景下显示不同内容的图片.md","excerpt":"\\n<p>有时我们希望一张图片在浅色背景和深色背景下显示不同内容。可以通过像素级处理，将一张输入图片转换为在不同背景下显示不同内容的 PNG。</p>\\n<h2>实现原理</h2>\\n<ul>\\n<li>通过分析每个像素的亮度，将图片分为“亮色部分”和“暗色部分”。</li>\\n<li>亮色像素处理为半透明白色，适合深色背景下突出显示。</li>\\n<li>暗色像素处理为半透明黑色，适合浅色背景下突出显示。</li>\\n<li>这样一张图片在不同背景下会呈现不同的视觉效果。</li>\\n<li>该方法本质上利用了 PNG 的透明通道和人眼对亮度的感知差异。</li>\\n</ul>\\n<h2>Python 实现代码</h2>","autoDesc":true}');export{v as comp,b as data};
