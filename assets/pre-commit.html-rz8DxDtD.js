import{_ as a,r as s,o as t,c as l,b as e,e as i,d as c,f as o}from"./app-ByePDVBg.js";const p={},r=o(`<h1 id="pre-commit-简介" tabindex="-1"><a class="header-anchor" href="#pre-commit-简介"><span>pre-commit 简介</span></a></h1><p>pre-commit 是一个流行的 Git 钩子管理工具，支持在代码提交前自动执行格式化、静态检查、自动修复等操作，提升代码质量，避免低级错误进入仓库。</p><h2 id="主要功能" tabindex="-1"><a class="header-anchor" href="#主要功能"><span>主要功能</span></a></h2><ul><li>统一管理多种代码检查/格式化工具（如 black、flake8、isort、eslint、stylelint 等）</li><li>支持多语言、多平台</li><li>配置简单，易于团队协作</li><li>可自定义钩子脚本</li></ul><h2 id="安装与使用" tabindex="-1"><a class="header-anchor" href="#安装与使用"><span>安装与使用</span></a></h2><h3 id="_1-安装-pre-commit" tabindex="-1"><a class="header-anchor" href="#_1-安装-pre-commit"><span>1. 安装 pre-commit</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pre-commit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-添加配置文件" tabindex="-1"><a class="header-anchor" href="#_2-添加配置文件"><span>2. 添加配置文件</span></a></h3><p>在项目根目录新建 <code>.pre-commit-config.yaml</code>，例如：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">repos</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/pre<span class="token punctuation">-</span>commit/pre<span class="token punctuation">-</span>commit<span class="token punctuation">-</span>hooks
    <span class="token key atrule">rev</span><span class="token punctuation">:</span> v4.4.0
    <span class="token key atrule">hooks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> trailing<span class="token punctuation">-</span>whitespace
      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> end<span class="token punctuation">-</span>of<span class="token punctuation">-</span>file<span class="token punctuation">-</span>fixer
      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> check<span class="token punctuation">-</span>yaml
  <span class="token punctuation">-</span> <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/psf/black
    <span class="token key atrule">rev</span><span class="token punctuation">:</span> 23.3.0
    <span class="token key atrule">hooks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> black
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-安装-git-钩子" tabindex="-1"><a class="header-anchor" href="#_3-安装-git-钩子"><span>3. 安装 Git 钩子</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pre-commit <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-手动检查所有文件" tabindex="-1"><a class="header-anchor" href="#_4-手动检查所有文件"><span>4. 手动检查所有文件</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pre-commit run --all-files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常见用法" tabindex="-1"><a class="header-anchor" href="#常见用法"><span>常见用法</span></a></h2><ul><li>自动格式化 Python 代码</li><li>检查并修复行尾空格、文件结尾换行</li><li>检查 YAML/JSON/Markdown 等文件格式</li><li>前端项目可集成 eslint、stylelint 等</li></ul><h2 id="进阶技巧" tabindex="-1"><a class="header-anchor" href="#进阶技巧"><span>进阶技巧</span></a></h2><ul><li>支持本地自定义钩子（shell/python 脚本）</li><li>支持多语言项目和 monorepo</li><li>可与 CI/CD 集成，保证远程仓库代码质量</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>`,19),d={href:"https://github.com/pre-commit/pre-commit",target:"_blank",rel:"noopener noreferrer"},u=e("hr",null,null,-1),m=e("blockquote",null,[e("p",null,"pre-commit 是现代团队协作和代码质量保障的利器，推荐所有项目集成。")],-1);function h(k,v){const n=s("ExternalLinkIcon");return t(),l("div",null,[r,e("ul",null,[e("li",null,[e("a",d,[i("pre-commit 官方文档"),c(n)])])]),u,m])}const b=a(p,[["render",h],["__file","pre-commit.html.vue"]]),_=JSON.parse('{"path":"/tech/pre-commit.html","title":"pre-commit 钩子工具简介与实用","lang":"zh-CN","frontmatter":{"title":"pre-commit 钩子工具简介与实用","category":"工具","description":"pre-commit 简介 pre-commit 是一个流行的 Git 钩子管理工具，支持在代码提交前自动执行格式化、静态检查、自动修复等操作，提升代码质量，避免低级错误进入仓库。 主要功能 统一管理多种代码检查/格式化工具（如 black、flake8、isort、eslint、stylelint 等） 支持多语言、多平台 配置简单，易于团队协作 可...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/pre-commit.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"pre-commit 钩子工具简介与实用"}],["meta",{"property":"og:description","content":"pre-commit 简介 pre-commit 是一个流行的 Git 钩子管理工具，支持在代码提交前自动执行格式化、静态检查、自动修复等操作，提升代码质量，避免低级错误进入仓库。 主要功能 统一管理多种代码检查/格式化工具（如 black、flake8、isort、eslint、stylelint 等） 支持多语言、多平台 配置简单，易于团队协作 可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pre-commit 钩子工具简介与实用\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"主要功能","slug":"主要功能","link":"#主要功能","children":[]},{"level":2,"title":"安装与使用","slug":"安装与使用","link":"#安装与使用","children":[{"level":3,"title":"1. 安装 pre-commit","slug":"_1-安装-pre-commit","link":"#_1-安装-pre-commit","children":[]},{"level":3,"title":"2. 添加配置文件","slug":"_2-添加配置文件","link":"#_2-添加配置文件","children":[]},{"level":3,"title":"3. 安装 Git 钩子","slug":"_3-安装-git-钩子","link":"#_3-安装-git-钩子","children":[]},{"level":3,"title":"4. 手动检查所有文件","slug":"_4-手动检查所有文件","link":"#_4-手动检查所有文件","children":[]}]},{"level":2,"title":"常见用法","slug":"常见用法","link":"#常见用法","children":[]},{"level":2,"title":"进阶技巧","slug":"进阶技巧","link":"#进阶技巧","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"readingTime":{"minutes":1.15,"words":345},"filePathRelative":"tech/pre-commit.md","excerpt":"\\n<p>pre-commit 是一个流行的 Git 钩子管理工具，支持在代码提交前自动执行格式化、静态检查、自动修复等操作，提升代码质量，避免低级错误进入仓库。</p>\\n<h2>主要功能</h2>\\n<ul>\\n<li>统一管理多种代码检查/格式化工具（如 black、flake8、isort、eslint、stylelint 等）</li>\\n<li>支持多语言、多平台</li>\\n<li>配置简单，易于团队协作</li>\\n<li>可自定义钩子脚本</li>\\n</ul>\\n<h2>安装与使用</h2>\\n<h3>1. 安装 pre-commit</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>pip <span class=\\"token function\\">install</span> pre-commit\\n</code></pre></div>","autoDesc":true}');export{b as comp,_ as data};
