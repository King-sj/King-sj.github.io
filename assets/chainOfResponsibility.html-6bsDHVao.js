import{_ as n,o as s,c as a,a as t,b as p,f as o}from"./app-CgIfAacr.js";const e={},c=p("p",null,'“推卸责任"听起来有些贬义的意思，但是有时候也确实存在需要“推卸责任"的情况。例如，当外部请求程序进行某个处理，但程序暂时无法直接决定由哪个对象负责处理时，就需要推卸责任。这种情况下，我们可以考虑将多个对象组成一条职责链，然后按照它们在职责链上的顺序一个一个地找出到底应该谁来负责处理。',-1),l=o(`<p>当一个人被要求做什么事情时，如果他可以做就自己做，如果不能做就将“要求&quot;转给另外一个人。下一个人如果可以自己处理，就自己做；如果也不能自己处理，就再转给另外一个人““这就是 Chain Of Responsibility 模式。</p><h3 id="为什么使用此类" tabindex="-1"><a class="header-anchor" href="#为什么使用此类"><span>为什么使用此类</span></a></h3><p>使用 Chain of Responsibility 模式有以下几个优点：</p><ol><li><strong>解耦请求发送者和接收者</strong>：发送者无需知道哪个对象会处理请求。</li><li><strong>动态组合职责链</strong>：可以在运行时动态地改变职责链的结构。</li><li><strong>增加灵活性</strong>：可以很容易地添加新的处理者而不影响现有代码。</li></ol><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码"><span>示例代码</span></a></h2><p>在这个示例中，我们使用了 Chain of Responsibility 模式来处理一系列的请求。每个请求都会沿着职责链传递，直到有一个对象能够处理它。这样做的好处是请求的发送者和接收者解耦，发送者无需知道哪个对象会处理请求。</p><img src="https://www.plantuml.com/plantuml/svg/hP912i8m44NtESM0cuhq0btr058NzG9fCqeWpPHaAeBqxewD2eeM5NV9dyVd3KmPMGSUEgTq4pdebg5rEaQeXxwdm71I03butM410bY_Jm4UkRX1agmW8bSIPW-JvHEJtXa76XedZTlq4En0rWYpW82Ht05VCGsHG-qdp937sPwTjkujC2gLrgpejgXeepVtnK-Jy0SozwgrxIpFjENWBaG1VkWQ35_tRupvcslTOskrcxLDcZ_hNaVmjcml1pFzikL3pbHFTtQ9hnStgbByv4hF" alt=""><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuKfCBialKd3EoKpDA-62K0gwTWf--S6b1GNvHILM2iKGXaP9KNvfKawg9XTS3gJG9pCtimItMcHfaFBWWjJapCGSt1fG5O2q-AUa4AtSHXT9EQhbG2bKnKZ-0CeXguM50r0OheRB8JKl1HXW0000" alt=""><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// limitSupport.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Support <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./support&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Trouble <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./trouble&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">LimitSupport</span> <span class="token keyword">extends</span> <span class="token class-name">Support</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> limit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> limit<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">protected</span> <span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>trouble<span class="token punctuation">.</span><span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NoSupport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./NoSupport&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LimitSupport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./LimitSupport&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> OddSupport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./OddSupport&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SpecialSupport <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./specialSupport&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Support <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./support&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Trouble <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./trouble&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> alice<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NoSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bob<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LimitSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> charlie<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpecialSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Charlie&quot;</span><span class="token punctuation">,</span> <span class="token number">429</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> diana<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LimitSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Diana&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> elmo<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OddSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Elmo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> fred<span class="token operator">:</span> Support <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LimitSupport</span><span class="token punctuation">(</span><span class="token string">&quot;Fred&quot;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

alice<span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>bob<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>charlie<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>diana<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>elmo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setNext</span><span class="token punctuation">(</span>fred<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">33</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  alice<span class="token punctuation">.</span><span class="token function">support</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Trouble</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// NoSupport.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Support <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./support&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Trouble <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./trouble&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">NoSupport</span> <span class="token keyword">extends</span> <span class="token class-name">Support</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// OddSupport.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Support <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./support&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">OddSupport</span> <span class="token keyword">extends</span> <span class="token class-name">Support</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>trouble<span class="token punctuation">.</span><span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// specialSupport.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Support <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./support&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Trouble <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./trouble&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">SpecialSupport</span> <span class="token keyword">extends</span> <span class="token class-name">Support</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">protected</span> <span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>trouble<span class="token punctuation">.</span><span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// support.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Trouble <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./trouble&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Support</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> next<span class="token operator">:</span> Support<span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">setNext</span><span class="token punctuation">(</span>next<span class="token operator">:</span> Support<span class="token punctuation">)</span><span class="token operator">:</span> Support <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
    <span class="token keyword">return</span> next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">support</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span>trouble<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>next<span class="token punctuation">.</span><span class="token function">support</span><span class="token punctuation">(</span>trouble<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>trouble<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token function">resolve</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token keyword">protected</span> <span class="token function">done</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>trouble<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is resolved by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">protected</span> <span class="token function">fail</span><span class="token punctuation">(</span>trouble<span class="token operator">:</span> Trouble<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>trouble<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> cannot be resolved.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// trouble.ts</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Trouble</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">getNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[Trouble </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果"><span>运行结果</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>PS design_patern<span class="token operator">&gt;</span> ts-node <span class="token string">&quot;d:<span class="token entity" title="\\c">\\c</span>ode\\design_patern\\src<span class="token entity" title="\\c">\\c</span>hainOfResponsibility\\main.ts&quot;</span>
<span class="token punctuation">[</span>Trouble <span class="token number">0</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Bob<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">33</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Bob<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">66</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Bob<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">99</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Bob<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">132</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Diana<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">165</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Diana<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">198</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Diana<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">231</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Elmo<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">264</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Fred<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">297</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Elmo<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">330</span><span class="token punctuation">]</span> cannot be resolved.
<span class="token punctuation">[</span>Trouble <span class="token number">363</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Elmo<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">396</span><span class="token punctuation">]</span> cannot be resolved.
<span class="token punctuation">[</span>Trouble <span class="token number">429</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Charlie<span class="token punctuation">]</span>.
<span class="token punctuation">[</span>Trouble <span class="token number">462</span><span class="token punctuation">]</span> cannot be resolved.
<span class="token punctuation">[</span>Trouble <span class="token number">495</span><span class="token punctuation">]</span> is resolved by <span class="token punctuation">[</span>Elmo<span class="token punctuation">]</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关的设计模式" tabindex="-1"><a class="header-anchor" href="#相关的设计模式"><span>相关的设计模式</span></a></h2><ul><li>Composite 模式</li><li>Command 模式</li></ul>`,13);function i(u,r){return s(),a("div",null,[c,t(" more "),l])}const d=n(e,[["render",i],["__file","chainOfResponsibility.html.vue"]]),m=JSON.parse('{"path":"/tech/DesignPatterns/chainOfResponsibility.html","title":"chainOfResponsibility 模式","lang":"zh-CN","frontmatter":{"title":"chainOfResponsibility 模式","date":"2024-10-25T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","TypeScript","推卸责任"],"prev":"./visitor","next":"./facade","description":"“推卸责任\\"听起来有些贬义的意思，但是有时候也确实存在需要“推卸责任\\"的情况。例如，当外部请求程序进行某个处理，但程序暂时无法直接决定由哪个对象负责处理时，就需要推卸责任。这种情况下，我们可以考虑将多个对象组成一条职责链，然后按照它们在职责链上的顺序一个一个地找出到底应该谁来负责处理。","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/DesignPatterns/chainOfResponsibility.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"chainOfResponsibility 模式"}],["meta",{"property":"og:description","content":"“推卸责任\\"听起来有些贬义的意思，但是有时候也确实存在需要“推卸责任\\"的情况。例如，当外部请求程序进行某个处理，但程序暂时无法直接决定由哪个对象负责处理时，就需要推卸责任。这种情况下，我们可以考虑将多个对象组成一条职责链，然后按照它们在职责链上的顺序一个一个地找出到底应该谁来负责处理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:tag","content":"推卸责任"}],["meta",{"property":"article:published_time","content":"2024-10-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"chainOfResponsibility 模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":3,"title":"为什么使用此类","slug":"为什么使用此类","link":"#为什么使用此类","children":[]},{"level":2,"title":"示例代码","slug":"示例代码","link":"#示例代码","children":[]},{"level":2,"title":"运行结果","slug":"运行结果","link":"#运行结果","children":[]},{"level":2,"title":"相关的设计模式","slug":"相关的设计模式","link":"#相关的设计模式","children":[]}],"readingTime":{"minutes":3.27,"words":980},"filePathRelative":"tech/DesignPatterns/chainOfResponsibility.md","localizedDate":"2024年10月25日","excerpt":"<p>“推卸责任\\"听起来有些贬义的意思，但是有时候也确实存在需要“推卸责任\\"的情况。例如，当外部请求程序进行某个处理，但程序暂时无法直接决定由哪个对象负责处理时，就需要推卸责任。这种情况下，我们可以考虑将多个对象组成一条职责链，然后按照它们在职责链上的顺序一个一个地找出到底应该谁来负责处理。</p>\\n","autoDesc":true}');export{d as comp,m as data};
