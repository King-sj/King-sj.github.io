import{_ as a,r as i,o as r,c as o,b as e,e as n,d as l,f as s}from"./app-ByePDVBg.js";const h={},c=s('<h1 id="lr-语法分析方法" tabindex="-1"><a class="header-anchor" href="#lr-语法分析方法"><span>LR 语法分析方法</span></a></h1><p>LR 分析是一类自底向上的语法分析方法，广泛应用于编译器的语法分析阶段。</p><h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><p>LR（Left-to-right, Rightmost derivation）分析器是一种自底向上、从左到右扫描输入、产生最右推导的分析器。</p><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><p>LR 分析器通过状态机和分析栈维护文法归约过程，能够处理大部分上下文无关文法。</p><h2 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h2><ul><li>LR(0)：最基础的 LR 分析器，无向前看符号</li><li>SLR(1)：简单 LR，使用 Follow 集消除冲突</li><li>LR(1)：每个项目带 1 个向前看符号，状态数多</li><li>LALR(1)：合并 LR(1) 同心集，状态数与 SLR(1) 相同</li></ul><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用"><span>应用</span></a></h2><ul><li>编译器语法分析（如 yacc、bison、antlr）</li><li>复杂表达式解析</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>',11),p={href:"https://blog.csdn.net/m0_46202073/article/details/109519696",target:"_blank",rel:"noopener noreferrer"},d={href:"https://book.douban.com/subject/2132920/",target:"_blank",rel:"noopener noreferrer"};function L(R,u){const t=i("ExternalLinkIcon");return r(),o("div",null,[c,e("ul",null,[e("li",null,[e("a",p,[n("LR 语法分析方法详解"),l(t)])]),e("li",null,[e("a",d,[n("编译原理经典教材"),l(t)])])])])}const g=a(h,[["render",L],["__file","LR.html.vue"]]),f=JSON.parse('{"path":"/tutorials/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/LR.html","title":"LR 语法分析方法","lang":"zh-CN","frontmatter":{"title":"LR 语法分析方法","category":"编译原理","description":"LR 语法分析方法 LR 分析是一类自底向上的语法分析方法，广泛应用于编译器的语法分析阶段。 定义 LR（Left-to-right, Rightmost derivation）分析器是一种自底向上、从左到右扫描输入、产生最右推导的分析器。 原理 LR 分析器通过状态机和分析栈维护文法归约过程，能够处理大部分上下文无关文法。 类型 LR(0)：最基础的...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tutorials/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/LR.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"LR 语法分析方法"}],["meta",{"property":"og:description","content":"LR 语法分析方法 LR 分析是一类自底向上的语法分析方法，广泛应用于编译器的语法分析阶段。 定义 LR（Left-to-right, Rightmost derivation）分析器是一种自底向上、从左到右扫描输入、产生最右推导的分析器。 原理 LR 分析器通过状态机和分析栈维护文法归约过程，能够处理大部分上下文无关文法。 类型 LR(0)：最基础的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LR 语法分析方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"类型","slug":"类型","link":"#类型","children":[]},{"level":2,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"readingTime":{"minutes":0.79,"words":236},"filePathRelative":"tutorials/编译原理/LR.md","excerpt":"\\n<p>LR 分析是一类自底向上的语法分析方法，广泛应用于编译器的语法分析阶段。</p>\\n<h2>定义</h2>\\n<p>LR（Left-to-right, Rightmost derivation）分析器是一种自底向上、从左到右扫描输入、产生最右推导的分析器。</p>\\n<h2>原理</h2>\\n<p>LR 分析器通过状态机和分析栈维护文法归约过程，能够处理大部分上下文无关文法。</p>\\n<h2>类型</h2>\\n<ul>\\n<li>LR(0)：最基础的 LR 分析器，无向前看符号</li>\\n<li>SLR(1)：简单 LR，使用 Follow 集消除冲突</li>\\n<li>LR(1)：每个项目带 1 个向前看符号，状态数多</li>\\n<li>LALR(1)：合并 LR(1) 同心集，状态数与 SLR(1) 相同</li>\\n</ul>","autoDesc":true}');export{g as comp,f as data};
