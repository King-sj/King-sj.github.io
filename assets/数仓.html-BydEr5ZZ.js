import{_ as t,o as e,c as n,f as r}from"./app-Cy2ZwSf8.js";const i={},l=r('<h1 id="数仓" tabindex="-1"><a class="header-anchor" href="#数仓"><span>数仓</span></a></h1><p>数据仓库</p><p>https://blog.csdn.net/weixin_43596734/article/details/119784553</p><p>实现实时数仓可以从以下几个方面入手：</p><h3 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h3><ul><li><strong>计算框架</strong>：目前常用的实时计算框架有Storm、Spark Streaming和Flink。Storm在早期被广泛使用，具有高性能和低延迟的特点。Spark Streaming则适合与Spark生态系统集成，提供了丰富的API和工具。Flink是近年来崛起的实时计算框架，具有高吞吐、低延迟和容错性强的特点，逐渐成为实时数仓的首选。</li><li><strong>存储系统</strong>：实时数仓需要选择适合的存储系统来存储实时数据。常见的选择包括HBase、Cassandra等分布式数据库，以及ClickHouse、Doris等高性能的OLAP数据库。这些系统提供了快速的读写能力和可扩展性，能够满足实时数仓对数据存储和查询的需求。</li><li><strong>消息队列</strong>：消息队列用于在不同系统之间传递实时数据，确保数据的可靠传输和顺序性。Kafka是目前最流行的消息队列之一，具有高吞吐、可持久化和分布式的特点，被广泛应用于实时数据的采集和传输。</li></ul><h3 id="架构设计" tabindex="-1"><a class="header-anchor" href="#架构设计"><span>架构设计</span></a></h3><ul><li><strong>数据采集层</strong>：负责从各种数据源（如数据库、日志文件、传感器等）采集实时数据，并将其发送到消息队列中。</li><li><strong>数据处理层</strong>：使用实时计算框架对消息队列中的数据进行处理和转换，例如进行数据清洗、聚合、关联等操作，生成符合业务需求的数据模型。</li><li><strong>数据存储层</strong>：将处理后的数据存储到合适的存储系统中，以便后续的查询和分析。</li><li><strong>数据应用层</strong>：提供数据查询、报表生成、可视化展示等功能，支持业务用户对实时数据的访问和分析。</li></ul><h3 id="实现步骤" tabindex="-1"><a class="header-anchor" href="#实现步骤"><span>实现步骤</span></a></h3><ul><li><strong>搭建环境</strong>：安装和配置所选的计算框架、存储系统和消息队列，确保它们能够正常运行并相互协作。</li><li><strong>数据接入</strong>：开发数据采集程序，从数据源中读取数据并发送到消息队列。这可能涉及到使用相应的客户端API或工具，如Kafka的生产者客户端。</li><li><strong>数据处理</strong>：使用计算框架编写实时数据处理程序，对消息队列中的数据进行处理。这包括定义数据处理逻辑、窗口计算、状态管理等。</li><li><strong>数据存储</strong>：将处理后的数据存储到存储系统中，根据存储系统的要求进行数据建模和表设计。</li><li><strong>应用开发</strong>：开发数据应用程序，提供数据查询和分析的功能。这可以通过使用存储系统的查询接口或开发自定义的查询服务来实现。</li></ul><h3 id="现成的轮子" tabindex="-1"><a class="header-anchor" href="#现成的轮子"><span>现成的轮子</span></a></h3><ul><li><strong>Hologres</strong>：是阿里巴巴推出的一款企业级实时数仓服务，它集成了大规模并行处理（MPP）分析能力和云原生技术。其设计初衷是为了解决传统数仓的性能瓶颈，通过实时计算和存储能力，支持大规模数据分析需求。Hologres利用列式存储技术以及近实时的数据更新机制，大大提高了查询的效率和处理速度。</li><li><strong>StarRocks</strong>：是一个开源的分布式数据库，具有高性能的查询和分析能力，支持实时数据的摄入和查询。它采用了分布式架构和列式存储，能够处理大规模数据集，并提供了SQL接口和丰富的数据分析功能。</li><li><strong>Apache Doris</strong>：是一个开源的分布式OLAP数据库，具有高性能、可扩展性和易用性的特点。它支持实时数据的摄入和查询，能够快速处理复杂的分析查询，适用于构建实时数仓。</li><li><strong>ClickHouse</strong>：是一个高性能的列式数据库，专为OLAP场景设计。它具有快速的查询响应速度和高并发处理能力，支持实时数据的写入和查询，适用于实时数仓的构建。</li></ul>',12),a=[l];function o(s,c){return e(),n("div",null,a)}const g=t(i,[["render",o],["__file","数仓.html.vue"]]),h=JSON.parse('{"path":"/tech/%E6%95%B0%E4%BB%93.html","title":"数仓","lang":"zh-CN","frontmatter":{"description":"数仓 数据仓库 https://blog.csdn.net/weixin_43596734/article/details/119784553 实现实时数仓可以从以下几个方面入手： 技术选型 计算框架：目前常用的实时计算框架有Storm、Spark Streaming和Flink。Storm在早期被广泛使用，具有高性能和低延迟的特点。Spark Str...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/%E6%95%B0%E4%BB%93.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"数仓"}],["meta",{"property":"og:description","content":"数仓 数据仓库 https://blog.csdn.net/weixin_43596734/article/details/119784553 实现实时数仓可以从以下几个方面入手： 技术选型 计算框架：目前常用的实时计算框架有Storm、Spark Streaming和Flink。Storm在早期被广泛使用，具有高性能和低延迟的特点。Spark Str..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数仓\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":3,"title":"技术选型","slug":"技术选型","link":"#技术选型","children":[]},{"level":3,"title":"架构设计","slug":"架构设计","link":"#架构设计","children":[]},{"level":3,"title":"实现步骤","slug":"实现步骤","link":"#实现步骤","children":[]},{"level":3,"title":"现成的轮子","slug":"现成的轮子","link":"#现成的轮子","children":[]}],"readingTime":{"minutes":3.54,"words":1062},"filePathRelative":"tech/数仓.md","excerpt":"\\n<p>数据仓库</p>\\n<p>https://blog.csdn.net/weixin_43596734/article/details/119784553</p>\\n<p>实现实时数仓可以从以下几个方面入手：</p>\\n<h3>技术选型</h3>\\n<ul>\\n<li><strong>计算框架</strong>：目前常用的实时计算框架有Storm、Spark Streaming和Flink。Storm在早期被广泛使用，具有高性能和低延迟的特点。Spark Streaming则适合与Spark生态系统集成，提供了丰富的API和工具。Flink是近年来崛起的实时计算框架，具有高吞吐、低延迟和容错性强的特点，逐渐成为实时数仓的首选。</li>\\n<li><strong>存储系统</strong>：实时数仓需要选择适合的存储系统来存储实时数据。常见的选择包括HBase、Cassandra等分布式数据库，以及ClickHouse、Doris等高性能的OLAP数据库。这些系统提供了快速的读写能力和可扩展性，能够满足实时数仓对数据存储和查询的需求。</li>\\n<li><strong>消息队列</strong>：消息队列用于在不同系统之间传递实时数据，确保数据的可靠传输和顺序性。Kafka是目前最流行的消息队列之一，具有高吞吐、可持久化和分布式的特点，被广泛应用于实时数据的采集和传输。</li>\\n</ul>","autoDesc":true}');export{g as comp,h as data};
