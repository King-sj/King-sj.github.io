import{_ as n,o as s,c as a,f as t}from"./app-CgIfAacr.js";const e={},o=t(`<h1 id="cors-跨域资源共享" tabindex="-1"><a class="header-anchor" href="#cors-跨域资源共享"><span>CORS（跨域资源共享）</span></a></h1><p>CORS（Cross-Origin Resource Sharing，跨域资源共享）是一种浏览器的安全机制，用于允许服务器声明哪些源可以访问资源，从而实现跨域访问控制。</p><h2 id="为什么需要-cors" tabindex="-1"><a class="header-anchor" href="#为什么需要-cors"><span>为什么需要 CORS</span></a></h2><p>浏览器的同源策略（Same-Origin Policy）限制了不同源之间的资源访问，防止恶意网站窃取数据。但实际开发中，前后端分离、API 网关等场景常常需要跨域访问，这时就需要 CORS。</p><h2 id="cors-工作原理" tabindex="-1"><a class="header-anchor" href="#cors-工作原理"><span>CORS 工作原理</span></a></h2><ol><li><strong>预检请求（OPTIONS）</strong>：对于非简单请求，浏览器会先发送 OPTIONS 请求，询问服务器是否允许跨域。</li><li><strong>响应头</strong>：服务器通过设置 <code>Access-Control-Allow-Origin</code>、<code>Access-Control-Allow-Methods</code>、<code>Access-Control-Allow-Headers</code> 等响应头，告知浏览器允许的跨域策略。</li><li><strong>实际请求</strong>：预检通过后，浏览器才会发送实际的跨域请求。</li></ol><h2 id="常见响应头说明" tabindex="-1"><a class="header-anchor" href="#常见响应头说明"><span>常见响应头说明</span></a></h2><ul><li><code>Access-Control-Allow-Origin</code>: 指定允许访问的源（如 <code>*</code> 或具体域名）。</li><li><code>Access-Control-Allow-Methods</code>: 允许的 HTTP 方法（如 <code>GET, POST, PUT</code>）。</li><li><code>Access-Control-Allow-Headers</code>: 允许的自定义请求头。</li><li><code>Access-Control-Allow-Credentials</code>: 是否允许携带 Cookie。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p><strong>后端（Node.js Express）实现 CORS：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Methods&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;GET,POST,PUT,DELETE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type,Authorization&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Credentials&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">===</span> <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">sendStatus</span><span class="token punctuation">(</span><span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>前端请求示例：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token string">&#39;include&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li><code>Access-Control-Allow-Origin</code> 不能与 <code>*</code> 和 <code>credentials: true</code> 同时使用。</li><li>只有服务器设置了正确的 CORS 响应头，浏览器才允许跨域。</li><li>CORS 只影响浏览器，服务端到服务端的请求不受影响。</li></ul><h2 id="常见问题排查" tabindex="-1"><a class="header-anchor" href="#常见问题排查"><span>常见问题排查</span></a></h2><ul><li>检查响应头是否正确设置。</li><li>检查是否有预检请求被拒绝。</li><li>检查是否有跨域 Cookie 问题。</li></ul><hr><blockquote><p>本文档由 VuePress 2.x 生成，支持代码高亮与 markdown 增强。</p></blockquote>`,19),p=[o];function c(l,i){return s(),a("div",null,p)}const u=n(e,[["render",c],["__file","cors.html.vue"]]),d=JSON.parse('{"path":"/tech/cors.html","title":"CORS（跨域资源共享）","lang":"zh-CN","frontmatter":{"title":"CORS（跨域资源共享）","date":"2025-06-26T00:00:00.000Z","category":"前端","description":"CORS（跨域资源共享） CORS（Cross-Origin Resource Sharing，跨域资源共享）是一种浏览器的安全机制，用于允许服务器声明哪些源可以访问资源，从而实现跨域访问控制。 为什么需要 CORS 浏览器的同源策略（Same-Origin Policy）限制了不同源之间的资源访问，防止恶意网站窃取数据。但实际开发中，前后端分离、AP...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/cors.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"CORS（跨域资源共享）"}],["meta",{"property":"og:description","content":"CORS（跨域资源共享） CORS（Cross-Origin Resource Sharing，跨域资源共享）是一种浏览器的安全机制，用于允许服务器声明哪些源可以访问资源，从而实现跨域访问控制。 为什么需要 CORS 浏览器的同源策略（Same-Origin Policy）限制了不同源之间的资源访问，防止恶意网站窃取数据。但实际开发中，前后端分离、AP..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:published_time","content":"2025-06-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CORS（跨域资源共享）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"为什么需要 CORS","slug":"为什么需要-cors","link":"#为什么需要-cors","children":[]},{"level":2,"title":"CORS 工作原理","slug":"cors-工作原理","link":"#cors-工作原理","children":[]},{"level":2,"title":"常见响应头说明","slug":"常见响应头说明","link":"#常见响应头说明","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"常见问题排查","slug":"常见问题排查","link":"#常见问题排查","children":[]}],"readingTime":{"minutes":1.68,"words":504},"filePathRelative":"tech/cors.md","localizedDate":"2025年6月26日","excerpt":"\\n<p>CORS（Cross-Origin Resource Sharing，跨域资源共享）是一种浏览器的安全机制，用于允许服务器声明哪些源可以访问资源，从而实现跨域访问控制。</p>\\n<h2>为什么需要 CORS</h2>\\n<p>浏览器的同源策略（Same-Origin Policy）限制了不同源之间的资源访问，防止恶意网站窃取数据。但实际开发中，前后端分离、API 网关等场景常常需要跨域访问，这时就需要 CORS。</p>\\n<h2>CORS 工作原理</h2>\\n<ol>\\n<li><strong>预检请求（OPTIONS）</strong>：对于非简单请求，浏览器会先发送 OPTIONS 请求，询问服务器是否允许跨域。</li>\\n<li><strong>响应头</strong>：服务器通过设置 <code>Access-Control-Allow-Origin</code>、<code>Access-Control-Allow-Methods</code>、<code>Access-Control-Allow-Headers</code> 等响应头，告知浏览器允许的跨域策略。</li>\\n<li><strong>实际请求</strong>：预检通过后，浏览器才会发送实际的跨域请求。</li>\\n</ol>","autoDesc":true}');export{u as comp,d as data};
