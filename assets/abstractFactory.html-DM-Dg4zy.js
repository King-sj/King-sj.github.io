import{_ as s,o as a,c as t,a as p,b as n,f as o}from"./app-CgIfAacr.js";const e={},c=n("h2",{id:"为什么要使用抽象工厂模式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#为什么要使用抽象工厂模式"},[n("span",null,"为什么要使用抽象工厂模式")])],-1),l=n("p",null,"抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而无需明确指定具体类。它通过定义一个创建对象的接口来实现，这样子类可以决定实例化哪个类。抽象工厂模式使得一个类的实例化延迟到其子类。",-1),i=o(`<ol><li><strong>解耦</strong>：抽象工厂模式通过将对象的创建过程抽象化，减少了客户端代码与具体类之间的耦合。</li><li><strong>一致性</strong>：确保同一工厂创建的一系列对象具有一致的接口和行为。</li><li><strong>扩展性</strong>：可以方便地增加新的产品族而不影响现有代码。</li></ol><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码"><span>示例代码</span></a></h2><img src="https://www.plantuml.com/plantuml/svg/dLJBJiCm4BptA_QO0k43Ske9WLGa3hqX3ajY5Qk94zaRH8JuTzPvsiQfIWyvT7TdTcSopSuGQcghSgEm4gR1N02-6zAOqmC_jUxWUmDp3V8IZG6t1N0BkHP8OY_LAScn8Lch31WWrV4EMbrEFxOPs1aFTD3OXI2UisLlxWMF8Y59fLYeiQMFMZieEyIedytVavz8LEEzAGJxnaKLdiJZuNcVR9r6ZCkA0F55GXK1iIDs1Mk5nR4yrMLzwVLjl0YB8f5S6CfyrcSjYnLYgttXSeqQQxvRanErubFemhssLxVKj9JunHNh-CubLxoANoK9DpoJdsPEssHDaCBxwoCNCbqQmH1tNIH35ZUYYtelKR63Pzth8LtOl8p5PFoBhG_M6fkJkZCfc5vUcjuCVvvijD3hz9T5E_sMkUF6PM0S3JmxuRF79lmjEzRB7yPV" alt=""><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// factory.ts</span>
<span class="token comment">// 抽象工厂</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./link&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Tray <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./tray&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Page <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./page&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>
  <span class="token keyword">abstract</span> <span class="token function">createLink</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Link<span class="token punctuation">;</span>
  <span class="token keyword">abstract</span> <span class="token function">createTray</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Tray<span class="token punctuation">;</span>
  <span class="token keyword">abstract</span> <span class="token function">createPage</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> author<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Page<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// item.ts</span>
<span class="token comment">// 抽象零件</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>caption <span class="token operator">=</span> caption<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">abstract</span> <span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// link.ts</span>
<span class="token comment">// 抽象超链接</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Item <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./item&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Link</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>caption<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>url <span class="token operator">=</span> url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// listFactory.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Factory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./factory&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ListLink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./listLink&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ListTray <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./listTray&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ListPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./listPage&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ListFactory</span> <span class="token keyword">extends</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>
  <span class="token function">createLink</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListLink</span><span class="token punctuation">(</span>caption<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">createTray</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListTray</span><span class="token punctuation">(</span>caption<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">createPage</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> author<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListPage</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> author<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// listLink.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./link&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ListLink</span> <span class="token keyword">extends</span> <span class="token class-name">Link</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>caption<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li&gt;&lt;a href=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>caption<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/a&gt;&lt;/li&gt;\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// listPage.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Page <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./page&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ListPage</span> <span class="token keyword">extends</span> <span class="token class-name">Page</span> <span class="token punctuation">{</span>
  <span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> buffer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;html&gt;&lt;head&gt;&lt;title&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/title&gt;&lt;/head&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;body&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h1&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h1&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;ul&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/ul&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;hr&gt;&lt;address&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/address&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;/body&gt;&lt;/html&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> buffer<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// listTray.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Tray <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./tray&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ListTray</span> <span class="token keyword">extends</span> <span class="token class-name">Tray</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>caption<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> buffer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>caption <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;ul&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tray<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/ul&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/li&gt;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> buffer<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// main.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Factory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./factory&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ListFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./listFactory&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getProduct</span><span class="token punctuation">(</span>factory<span class="token operator">:</span> Factory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> people <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;people&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.people.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> gmw <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;gmw&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.gmw.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> us_yahoo <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;us_yahoo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.us.yahoo.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> jp_yahoo <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;jp_yahoo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.jp.yahoo.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> excite <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;excite&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.excite.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> google <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string">&quot;google&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://www.google.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> traynews <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createTray</span><span class="token punctuation">(</span><span class="token string">&quot;news&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  traynews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>people<span class="token punctuation">)</span><span class="token punctuation">;</span>
  traynews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gmw<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> trayyahoo <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createTray</span><span class="token punctuation">(</span><span class="token string">&quot;yahoo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  trayyahoo<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>us_yahoo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  trayyahoo<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jp_yahoo<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> traysearch <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createTray</span><span class="token punctuation">(</span><span class="token string">&quot;search&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  traysearch<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>trayyahoo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  traysearch<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>excite<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> page <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createPage</span><span class="token punctuation">(</span><span class="token string">&quot;LinkPage&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gmw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  page<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>traynews<span class="token punctuation">)</span><span class="token punctuation">;</span>
  page<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>traysearch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  page<span class="token punctuation">.</span><span class="token function">output</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">getProduct</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// page.ts</span>
<span class="token comment">// 抽象html页面</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Item <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./item&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Page</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  author<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  content<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Item<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  buffer<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> author<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>author <span class="token operator">=</span> author<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token operator">:</span> Item<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">output</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>buffer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">abstract</span> <span class="token function">makeHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// tray.ts</span>
<span class="token comment">// 抽象容器</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Item <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./item&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Tray</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
  <span class="token keyword">protected</span> tray<span class="token operator">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>caption<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>caption<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token operator">:</span> Item<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果"><span>运行结果</span></a></h1><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>PS design_patern<span class="token operator">&gt;</span> ts-node <span class="token string">&quot;d:<span class="token entity" title="\\c">\\c</span>ode\\design_patern\\src<span class="token entity" title="\\a">\\a</span>bstractFactory\\main.ts&quot;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>LinkPage<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>LinkPage<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>
<span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
news
<span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://www.people.com&quot;</span><span class="token operator">&gt;</span>people<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://www.gmw.com&quot;</span><span class="token operator">&gt;</span>gmw<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
search
<span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span>
yahoo
<span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://www.us.yahoo.com&quot;</span><span class="token operator">&gt;</span>us_yahoo<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://www.jp.yahoo.com&quot;</span><span class="token operator">&gt;</span>jp_yahoo<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://www.excite.com&quot;</span><span class="token operator">&gt;</span>excite<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>address<span class="token operator">&gt;</span>gmw<span class="token operator">&lt;</span>/address<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="增加其它工厂" tabindex="-1"><a class="header-anchor" href="#增加其它工厂"><span>增加其它工厂</span></a></h2><p>如果只是为了编写包含 HTML 超链接集合的文件，这样的设计可能显得有些过于复杂。当只有一个具体工厂时，划分“抽象类”和“具体类”是没有必要的。然而，使用抽象工厂模式，我们可以轻松地添加其他具体工厂，例如TableFactory。</p><h2 id="拓展思路的要点" tabindex="-1"><a class="header-anchor" href="#拓展思路的要点"><span>拓展思路的要点</span></a></h2><h3 id="易于增加具体工厂" tabindex="-1"><a class="header-anchor" href="#易于增加具体工厂"><span>易于增加具体工厂</span></a></h3><p>在 Abstract Factory 模式中增加具体的工厂是非常容易的。这里说的“容易”指的是需要编写哪些类和需要实现哪些方法都非常清楚。</p><p>假设现在我们要在示例程序中增加新的具体工厂，那么需要做的就是编写 Factory、Link、Tray、Page 这 4 个类的子类，并实现它们定义的抽象方法。也就是说将 factory 包中的抽象部分全部具体化即可。</p><p>这样一来，无论要增加多少个具体工厂（或是要修改具体工厂的 Bug），都无需修改抽象工厂和 Main 部分。</p><h3 id="难以增加新的零件" tabindex="-1"><a class="header-anchor" href="#难以增加新的零件"><span>难以增加新的零件</span></a></h3><p>请试想一下要在 Abstract Factory 模式中增加新的零件时应当如何做。例如，我们要在 factory 包中增加一个表示图像的 Picture 零件。这时，我们必须要对所有的具体工厂进行相应的修改才行。例如，在 listfactory 包中，我们必须要做以下修改：</p><ul><li>在 ListFactory 中增加 createPicture 方法，</li><li>新增 ListPicture 类。</li></ul><p>已经编写完成的具体工厂越多，修改的工作量就会越大。</p><h2 id="相关的设计模式" tabindex="-1"><a class="header-anchor" href="#相关的设计模式"><span>相关的设计模式</span></a></h2><ul><li>Builder 模式</li><li>Factory Method 模式</li><li>Composite 模式</li><li>Singleton 模式</li></ul>`,19);function u(r,k){return a(),t("div",null,[c,l,p(" more "),i])}const v=s(e,[["render",u],["__file","abstractFactory.html.vue"]]),m=JSON.parse('{"path":"/tech/DesignPatterns/abstractFactory.html","title":"抽象工厂模式","lang":"zh-CN","frontmatter":{"title":"抽象工厂模式","date":"2024-10-25T00:00:00.000Z","category":["设计模式"],"tag":["设计模式","typescript","生成实例"],"prev":"./builder","next":"./bridge","description":"为什么要使用抽象工厂模式 抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而无需明确指定具体类。它通过定义一个创建对象的接口来实现，这样子类可以决定实例化哪个类。抽象工厂模式使得一个类的实例化延迟到其子类。","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/DesignPatterns/abstractFactory.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"抽象工厂模式"}],["meta",{"property":"og:description","content":"为什么要使用抽象工厂模式 抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而无需明确指定具体类。它通过定义一个创建对象的接口来实现，这样子类可以决定实例化哪个类。抽象工厂模式使得一个类的实例化延迟到其子类。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:tag","content":"生成实例"}],["meta",{"property":"article:published_time","content":"2024-10-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"抽象工厂模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"为什么要使用抽象工厂模式","slug":"为什么要使用抽象工厂模式","link":"#为什么要使用抽象工厂模式","children":[]},{"level":2,"title":"示例代码","slug":"示例代码","link":"#示例代码","children":[]},{"level":2,"title":"增加其它工厂","slug":"增加其它工厂","link":"#增加其它工厂","children":[]},{"level":2,"title":"拓展思路的要点","slug":"拓展思路的要点","link":"#拓展思路的要点","children":[{"level":3,"title":"易于增加具体工厂","slug":"易于增加具体工厂","link":"#易于增加具体工厂","children":[]},{"level":3,"title":"难以增加新的零件","slug":"难以增加新的零件","link":"#难以增加新的零件","children":[]}]},{"level":2,"title":"相关的设计模式","slug":"相关的设计模式","link":"#相关的设计模式","children":[]}],"readingTime":{"minutes":4.31,"words":1293},"filePathRelative":"tech/DesignPatterns/abstractFactory.md","localizedDate":"2024年10月25日","excerpt":"<h2>为什么要使用抽象工厂模式</h2>\\n<p>抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而无需明确指定具体类。它通过定义一个创建对象的接口来实现，这样子类可以决定实例化哪个类。抽象工厂模式使得一个类的实例化延迟到其子类。</p>\\n","autoDesc":true}');export{v as comp,m as data};
