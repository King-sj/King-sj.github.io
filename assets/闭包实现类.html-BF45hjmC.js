import{_ as c,r as p,o as l,c as i,a as u,d as r,w as t,b as n,e as s}from"./app-CG6sZnep.js";const k="/assets/Closures-Bb-D5Kse.png",d={},m=n("h1",{id:"闭包实现类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#闭包实现类"},[n("span",null,"闭包实现类")])],-1),b=n("p",null,"你是否曾经想过，不用类也能封装数据和方法？这篇文章将带你走进闭包的奇妙世界，展示如何用闭包来实现这一点。通过一个有趣的代码示例，你将看到闭包是如何捕获变量并提供类似类的功能的。准备好了吗？让我们开始这段有趣的旅程吧！",-1),v=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp","data-title":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<iostream>")]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<string>")]),s(`

`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token keyword"},"namespace"),s(" std"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 通过闭包实现类似类的结构"),s(`
`),n("span",{class:"token keyword"},"auto"),s(),n("span",{class:"token function"},"fun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token operator"},"*"),s(" _x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// toString 函数捕获_x，用以输出当前_x的值"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(" toString "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("_x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" string "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"x: "'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token function"},"to_string"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// add 函数用于增加_x的值"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(" add "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("_x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"*"),s("_x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// remove 函数用于释放_x指向的内存"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(" remove "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s("_x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"delete"),s(" _x"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token comment"},"// 结构体内包含三个函数"),s(`
  `),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"decltype"),n("span",{class:"token punctuation"},"("),s("toString"),n("span",{class:"token punctuation"},")"),s(" toString"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"decltype"),n("span",{class:"token punctuation"},"("),s("add"),n("span",{class:"token punctuation"},")"),s(" add"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"decltype"),n("span",{class:"token punctuation"},"("),s("remove"),n("span",{class:"token punctuation"},")"),s(" remove"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(" self"),n("span",{class:"token punctuation"},"{"),s("toString"),n("span",{class:"token punctuation"},","),s(" add"),n("span",{class:"token punctuation"},","),s(" remove"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"return"),s(" self"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(" obj1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"fun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(" obj2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"fun"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  cout `),n("span",{class:"token operator"},"<<"),s(" obj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<<"),s(" endl"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},'// 输出 "x: 1"'),s(`
  obj1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("                       "),n("span",{class:"token comment"},"// 增加obj1的内部_x的值"),s(`
  cout `),n("span",{class:"token operator"},"<<"),s(" obj1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<<"),s(" endl"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},'// 输出 "x: 2"'),s(`
  cout `),n("span",{class:"token operator"},"<<"),s(" obj2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<<"),s(" endl"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},'// 输出 "x: 3"'),s(`
  obj1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("                    "),n("span",{class:"token comment"},"// 释放obj1的内部_x的内存"),s(`
  obj2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("                    "),n("span",{class:"token comment"},"// 释放obj2的内部_x的内存"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# TODO"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=n("figure",null,[n("img",{src:k,alt:"alt text",tabindex:"0",loading:"lazy"}),n("figcaption",null,"alt text")],-1);function g(h,x){const o=p("CodeTabs");return l(),i("div",null,[m,b,u(" more "),r(o,{id:"7",data:[{id:"cpp"},{id:"python"}],"tab-id":"cpp"},{title0:t(({value:a,isActive:e})=>[s("cpp")]),title1:t(({value:a,isActive:e})=>[s("python")]),tab0:t(({value:a,isActive:e})=>[v]),tab1:t(({value:a,isActive:e})=>[y]),_:1}),_])}const w=c(d,[["render",g],["__file","闭包实现类.html.vue"]]),E=JSON.parse('{"path":"/tech/%E9%97%AD%E5%8C%85%E5%AE%9E%E7%8E%B0%E7%B1%BB.html","title":"闭包实现类","lang":"zh-CN","frontmatter":{"title":"闭包实现类","lang":"zh-CN","date":"2023-08-02T00:00:00.000Z","category":["OI"],"tag":["MODInt"],"description":"你是否曾经想过，不用类也能封装数据和方法？这篇文章将带你走进闭包的奇妙世界，展示如何用闭包来实现这一点。通过一个有趣的代码示例，你将看到闭包是如何捕获变量并提供类似类的功能的。准备好了吗？让我们开始这段有趣的旅程吧！","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/%E9%97%AD%E5%8C%85%E5%AE%9E%E7%8E%B0%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"闭包实现类"}],["meta",{"property":"og:description","content":"你是否曾经想过，不用类也能封装数据和方法？这篇文章将带你走进闭包的奇妙世界，展示如何用闭包来实现这一点。通过一个有趣的代码示例，你将看到闭包是如何捕获变量并提供类似类的功能的。准备好了吗？让我们开始这段有趣的旅程吧！"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:tag","content":"MODInt"}],["meta",{"property":"article:published_time","content":"2023-08-02T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"闭包实现类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-02T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.07,"words":321},"filePathRelative":"tech/闭包实现类.md","localizedDate":"2023年8月2日","excerpt":"\\n<p>你是否曾经想过，不用类也能封装数据和方法？这篇文章将带你走进闭包的奇妙世界，展示如何用闭包来实现这一点。通过一个有趣的代码示例，你将看到闭包是如何捕获变量并提供类似类的功能的。准备好了吗？让我们开始这段有趣的旅程吧！</p>\\n","autoDesc":true}');export{w as comp,E as data};
