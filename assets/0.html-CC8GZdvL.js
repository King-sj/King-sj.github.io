import{_ as l,r as a,o as i,c as p,b as e,e as t,d as n,f as o}from"./app-B4LGNJZ0.js";const s={},h=e("h1",{id:"转载声明",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#转载声明"},[e("span",null,"转载声明")])],-1),c=e("strong",null,"手把手教你构建 C 语言编译器（0）- 前言",-1),d=e("strong",null,"三点水",-1),_={href:"https://lotabout.me/2015/write-a-C-interpreter-0/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://devtool.tech/html-md",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.helloworld.net/html2md",target:"_blank",rel:"noopener noreferrer"},m=e("h1",{id:"原文内容",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原文内容"},[e("span",null,"原文内容")])],-1),g=e("p",null,"“手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的 C 语言编译器，尽管有许多语法并不支持。",-1),C=e("p",null,"手把手教你构建 C 语言编译器系列共有10个部分：",-1),b={href:"http://lotabout.me/2015/write-a-C-interpreter-0/",target:"_blank",rel:"noopener noreferrer"},E={href:"http://lotabout.me/2015/write-a-C-interpreter-1/",target:"_blank",rel:"noopener noreferrer"},k={href:"http://lotabout.me/2015/write-a-C-interpreter-2/",target:"_blank",rel:"noopener noreferrer"},w={href:"http://lotabout.me/2015/write-a-C-interpreter-3/",target:"_blank",rel:"noopener noreferrer"},B={href:"http://lotabout.me/2016/write-a-C-interpreter-4/",target:"_blank",rel:"noopener noreferrer"},x={href:"http://lotabout.me/2016/write-a-C-interpreter-5/",target:"_blank",rel:"noopener noreferrer"},A={href:"http://lotabout.me/2016/write-a-C-interpreter-6/",target:"_blank",rel:"noopener noreferrer"},v={href:"http://lotabout.me/2016/write-a-C-interpreter-7/",target:"_blank",rel:"noopener noreferrer"},y={href:"http://lotabout.me/2016/write-a-C-interpreter-8/",target:"_blank",rel:"noopener noreferrer"},L={href:"http://lotabout.me/2016/write-a-C-interpreter-9/",target:"_blank",rel:"noopener noreferrer"},D=o('<p>在开始进入正题之前，本篇是一些闲聊，谈谈这个系列的初衷。如果你急切地想进入正篇，请跳过本章。</p><h2 id="为什么要学编译原理" tabindex="-1"><a class="header-anchor" href="#为什么要学编译原理"><span><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86"></a>为什么要学编译原理</span></a></h2><p>如果要我说计算机专业最重要的三门课，我会说是《数据结构》、《算法》和《编译原理》。在我看来，能不能理解“递归”像是程序员的第一道门槛，而会不会写编译器则是第二道。</p><p>（当然，并不是说是没写过编译器就不是好程序员，只能说它是一个相当大的挑战吧）</p><p>以前人们会说，学习了编译原理，你就能写出更加高效的代码，但随着计算机性能的提升，代码是否高效显得就不那么重要了。那么为什么要学习编译原理呢？</p><p>原因只有一个：装B。</p><p>好吧，也许现在还想学习编译原理的人只可能是因为兴趣了。一方面想了解它的工作原理；另一方面希望挑战一下自己，看看自己能走多远。</p><h2 id="理论很复杂-实现也很复杂" tabindex="-1"><a class="header-anchor" href="#理论很复杂-实现也很复杂"><span><a href="#%E7%90%86%E8%AE%BA%E5%BE%88%E5%A4%8D%E6%9D%82-%E5%AE%9E%E7%8E%B0%E4%B9%9F%E5%BE%88%E5%A4%8D%E6%9D%82%EF%BC%9F"></a>理论很复杂，实现也很复杂？</span></a></h2><p>我对编译器一直心存敬佩。所以当学校开《编译原理》的课程后，我是抱着满腔热情去上课的，但是两节课后我就放弃了。原因是太复杂了，听不懂。</p><p>一般编译原理的课程会说一些：</p><ol><li>如何表示语法（BNF什么的）</li><li>词法分析，用什么有穷自动机和无穷自动机</li><li>语法分析，递归下降法，什么 <code>LL(k)</code>，LALR 分析。</li><li>中间代码的表示</li><li>代码的生成</li><li>代码优化</li></ol><p>我相信绝大多数（98％）的学生顶多学到语法分析就结束了。并且最重要的是，学了这么多也没用！依旧帮助不了我们学习编译器！这其中最主要的原因是《编译原理》试图教会我们的是如何构造“编译器生成器”，即构造一个工具，根据文法来生成编译器（如 lex/yacc）等等。</p><p>这些理论试图教会我们如何用通用的方法来自动解决问题，它们有很强的实际意义，只是对于一般的学生或程序员来说，它们过于强大，内容过于复杂。如果你尝试阅读 lex/yacc （或 flex/bison）的代码，就会发现太可怕了。</p><p>然而如果你能跟我一样，真正来实现一个简单的编译器，那么你会发现，比起可怕的《编译原理》，这点复杂度还是不算什么的（因为好多理论根本用不上）。</p><h2 id="项目的初衷" tabindex="-1"><a class="header-anchor" href="#项目的初衷"><span><a href="#%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%88%9D%E8%A1%B7"></a>项目的初衷</span></a></h2>',15),F={href:"https://github.com/rswier/c4",target:"_blank",rel:"noopener noreferrer"},N=e("p",null,"一般的编译器相关的教程要么就十分简单（如实现四则运算），要么就是借助了自动生成的工具（如 flex/bison）。而 c4 的代码完全是手工实现的，不用外部工具。可惜的是它的代码初衷是代码最小化，所以写得很乱，很难懂。所以本项目的主要目的：",-1),S=e("ol",null,[e("li",null,"实现一个功能完善的 C 语言编译器"),e("li",null,"通过教程来说明这个过程。")],-1),j={href:"https://github.com/lotabout/write-a-C-interpreter",target:"_blank",rel:"noopener noreferrer"},I=o('<p>声明：本项目中的代码逻辑绝大多数取自 c4 ，但确为自己重写。</p><h2 id="做好心理准备" tabindex="-1"><a class="header-anchor" href="#做好心理准备"><span><a href="#%E5%81%9A%E5%A5%BD%E5%BF%83%E7%90%86%E5%87%86%E5%A4%87"></a>做好心理准备</span></a></h2><p>在写编译器的时候会遇到两个主要问题：</p><ol><li>繁琐，会有许多相似的代码，写起来很无聊。</li><li>难以调试，一方面没有很好的测试用例，另一方面需要对照生成的代码来调试（遇到的时候就知道了）。</li></ol><p>所以我希望你有足够的耐心和时间来学习，相信当你真正完成的时候会像我一样，十分有成就感。</p><p>PS. 第一篇完全没有正题相关的内容也是希望你能有所心理准备再开始学习。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"></a>参考资料</span></a></h2><p>最后想介绍几个资料：</p>',8),K={href:"http://compilers.iecc.com/crenshaw/",target:"_blank",rel:"noopener noreferrer"},P={href:"http://www.hwaci.com/sw/lemon/",target:"_blank",rel:"noopener noreferrer"},V=e("p",null,"由于本人水平一般，文章、代码难免会有错误，敬请批评指正！",-1),J=e("p",null,"最后祝你学得愉快。",-1),O=e("h1",{id:"转载者注",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#转载者注"},[e("span",null,"转载者注")])],-1),T=e("p",null,"这篇博客并没有使用诸如 flex、bison 等工具来编写 token 和文法的定义，因而灵活性较差。相反，它通过定义自己的指令集并支持该指令集的虚拟机来模拟编译的部分过程，具有一定的参考价值。不过，我仍然认为通过定义 token 和文法并编写解析算法（如 regex、LL(k) 等）可能会更具普适性。",-1),z=e("div",{class:"hint-container info"},[e("p",{class:"hint-container-title"},"相关信息"),e("p",null,"不过据说c、cpp、java这些成熟的语言都是手动实现的？还没仔细了解过。 TODO")],-1);function G(R,M){const r=a("ExternalLinkIcon");return i(),p("div",null,[h,e("p",null,[t("本文转载自 "),c,t("，原作者 "),d,t("，原文链接："),e("a",_,[t("原文链接"),n(r)]),t("，如有侵权，请联系删除。")]),e("p",null,[t("转载工具:"),e("a",u,[t("devtool"),n(r)]),t("、"),e("a",f,[t("helloworld"),n(r)])]),m,g,C,e("ol",null,[e("li",null,[e("a",b,[t("手把手教你构建 C 语言编译器（0）——前言"),n(r)])]),e("li",null,[e("a",E,[t("手把手教你构建 C 语言编译器（1）——设计"),n(r)])]),e("li",null,[e("a",k,[t("手把手教你构建 C 语言编译器（2）——虚拟机"),n(r)])]),e("li",null,[e("a",w,[t("手把手教你构建 C 语言编译器（3）——词法分析器"),n(r)])]),e("li",null,[e("a",B,[t("手把手教你构建 C 语言编译器（4）——递归下降"),n(r)])]),e("li",null,[e("a",x,[t("手把手教你构建 C 语言编译器（5）——变量定义"),n(r)])]),e("li",null,[e("a",A,[t("手把手教你构建 C 语言编译器（6）——函数定义"),n(r)])]),e("li",null,[e("a",v,[t("手把手教你构建 C 语言编译器（7）——语句"),n(r)])]),e("li",null,[e("a",y,[t("手把手教你构建 C 语言编译器（8）——表达式"),n(r)])]),e("li",null,[e("a",L,[t("手把手教你构建 C 语言编译器（9）——总结"),n(r)])])]),D,e("p",null,[t("有一次在 Github 上看到了一个项目（当时很火的），名叫 "),e("a",F,[t("c4"),n(r)]),t("，号称用 4 个函数来实现了一个小的 C 语言编译器。它最让我震惊的是能够自举，即能自己编译自己。并且它用很少的代码就完成了一个功能相当完善的 C 语言编译器。")]),N,S,e("p",null,[t("c4 大致500+行。重写的代码历时一周，总共代码加注释1400行。项目地址: "),e("a",j,[t("Write a C Interpreter"),n(r)]),t("。")]),I,e("ol",null,[e("li",null,[e("a",K,[t("Let’s Build a Compiler"),n(r)]),t(" 很好的初学者教程，英文的。")]),e("li",null,[e("a",P,[t("Lemon Parser Generator"),n(r)]),t("，一个语法分析器生成器，对照《编译原理》观看效果更佳。")])]),V,J,O,T,z])}const q=l(s,[["render",G],["__file","0.html.vue"]]),H=JSON.parse('{"path":"/tech/designASimpileCCompiler/0.html","title":"手把手教你构建 C 语言编译器（0）- 前言","lang":"zh-CN","frontmatter":{"title":"手把手教你构建 C 语言编译器（0）- 前言","category":["编译原理"],"tag":["c","编译器","解释器"],"description":"转载声明 本文转载自 手把手教你构建 C 语言编译器（0）- 前言，原作者 三点水，原文链接：原文链接，如有侵权，请联系删除。 转载工具:devtool、helloworld 原文内容 “手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的...","gitInclude":[],"head":[["meta",{"property":"og:url","content":"https://github.com/King-sj/tech/designASimpileCCompiler/0.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"手把手教你构建 C 语言编译器（0）- 前言"}],["meta",{"property":"og:description","content":"转载声明 本文转载自 手把手教你构建 C 语言编译器（0）- 前言，原作者 三点水，原文链接：原文链接，如有侵权，请联系删除。 转载工具:devtool、helloworld 原文内容 “手把手教你构建 C 语言编译器” 这一系列教程将带你从头编写一个 C 语言的编译器。希望通过这个系列，我们能对编译器的构建有一定的了解，同时，我们也将构建出一个能用的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"KSJ"}],["meta",{"property":"article:tag","content":"c"}],["meta",{"property":"article:tag","content":"编译器"}],["meta",{"property":"article:tag","content":"解释器"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手把手教你构建 C 语言编译器（0）- 前言\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KSJ\\",\\"url\\":\\"https://github.com/King-sj\\"}]}"]]},"headers":[{"level":2,"title":"为什么要学编译原理","slug":"为什么要学编译原理","link":"#为什么要学编译原理","children":[]},{"level":2,"title":"理论很复杂，实现也很复杂？","slug":"理论很复杂-实现也很复杂","link":"#理论很复杂-实现也很复杂","children":[]},{"level":2,"title":"项目的初衷","slug":"项目的初衷","link":"#项目的初衷","children":[]},{"level":2,"title":"做好心理准备","slug":"做好心理准备","link":"#做好心理准备","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"readingTime":{"minutes":6.12,"words":1835},"filePathRelative":"tech/designASimpileCCompiler/0.md","excerpt":"\\n<p>本文转载自 <strong>手把手教你构建 C 语言编译器（0）- 前言</strong>，原作者 <strong>三点水</strong>，原文链接：<a href=\\"https://lotabout.me/2015/write-a-C-interpreter-0/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">原文链接</a>，如有侵权，请联系删除。</p>\\n<p>转载工具:<a href=\\"https://devtool.tech/html-md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">devtool</a>、<a href=\\"https://www.helloworld.net/html2md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">helloworld</a></p>","autoDesc":true}');export{q as comp,H as data};
